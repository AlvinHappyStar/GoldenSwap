{"version":3,"file":"static/chunks/9910.1bcb7d19bf4783a9.js","mappings":"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","sources":["webpack://_N_E/../../node_modules/lodash/_arrayShuffle.js","webpack://_N_E/../../node_modules/lodash/_baseAssign.js","webpack://_N_E/../../node_modules/lodash/_baseAssignIn.js","webpack://_N_E/../../node_modules/lodash/_baseClone.js","webpack://_N_E/../../node_modules/lodash/_baseIsMap.js","webpack://_N_E/../../node_modules/lodash/_baseIsSet.js","webpack://_N_E/../../node_modules/lodash/_baseRandom.js","webpack://_N_E/../../node_modules/lodash/_baseShuffle.js","webpack://_N_E/../../node_modules/lodash/_baseValues.js","webpack://_N_E/../../node_modules/lodash/_cloneDataView.js","webpack://_N_E/../../node_modules/lodash/_cloneRegExp.js","webpack://_N_E/../../node_modules/lodash/_cloneSymbol.js","webpack://_N_E/../../node_modules/lodash/_copySymbols.js","webpack://_N_E/../../node_modules/lodash/_copySymbolsIn.js","webpack://_N_E/../../node_modules/lodash/_initCloneArray.js","webpack://_N_E/../../node_modules/lodash/_initCloneByTag.js","webpack://_N_E/../../node_modules/lodash/_shuffleSelf.js","webpack://_N_E/../../node_modules/lodash/cloneDeep.js","webpack://_N_E/../../node_modules/lodash/isMap.js","webpack://_N_E/../../node_modules/lodash/isSet.js","webpack://_N_E/../../node_modules/lodash/shuffle.js","webpack://_N_E/../../node_modules/lodash/values.js","webpack://_N_E/./src/views/Nft/market/components/CollectibleCard/CollectionCardWithVolume.tsx","webpack://_N_E/<anon>"],"sourcesContent":["var copyArray = require('./_copyArray'),\n    shuffleSelf = require('./_shuffleSelf');\n\n/**\n * A specialized version of `_.shuffle` for arrays.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction arrayShuffle(array) {\n  return shuffleSelf(copyArray(array));\n}\n\nmodule.exports = arrayShuffle;\n","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys'),\n    keysIn = require('./keysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n","var shuffleSelf = require('./_shuffleSelf'),\n    values = require('./values');\n\n/**\n * The base implementation of `_.shuffle`.\n *\n * @private\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction baseShuffle(collection) {\n  return shuffleSelf(values(collection));\n}\n\nmodule.exports = baseShuffle;\n","var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n","var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n","var baseRandom = require('./_baseRandom');\n\n/**\n * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @param {number} [size=array.length] The size of `array`.\n * @returns {Array} Returns `array`.\n */\nfunction shuffleSelf(array, size) {\n  var index = -1,\n      length = array.length,\n      lastIndex = length - 1;\n\n  size = size === undefined ? length : size;\n  while (++index < size) {\n    var rand = baseRandom(index, lastIndex),\n        value = array[rand];\n\n    array[rand] = array[index];\n    array[index] = value;\n  }\n  array.length = size;\n  return array;\n}\n\nmodule.exports = shuffleSelf;\n","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;\n","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n","var arrayShuffle = require('./_arrayShuffle'),\n    baseShuffle = require('./_baseShuffle'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of shuffled values, using a version of the\n * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n * @example\n *\n * _.shuffle([1, 2, 3, 4]);\n * // => [4, 1, 3, 2]\n */\nfunction shuffle(collection) {\n  var func = isArray(collection) ? arrayShuffle : baseShuffle;\n  return func(collection);\n}\n\nmodule.exports = shuffle;\n","var baseValues = require('./_baseValues'),\n    keys = require('./keys');\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { BNBAmountLabel } from './styles'\nimport { CollectionCard } from './index'\n\ninterface CollectionCardWithVolumeProps {\n  bgSrc: string\n  avatarSrc?: string\n  collectionName: string\n  url?: string\n  disabled?: boolean\n  volume: number\n}\n\nconst CollectionCardWithVolume: React.FC<CollectionCardWithVolumeProps> = ({\n  bgSrc,\n  avatarSrc,\n  collectionName,\n  url,\n  volume,\n}) => {\n  const { t } = useTranslation()\n  return (\n    <CollectionCard bgSrc={bgSrc} avatarSrc={avatarSrc} collectionName={collectionName} url={url}>\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {t('Volume')}\n        </Text>\n        <BNBAmountLabel amount={volume} />\n      </Flex>\n    </CollectionCard>\n  )\n}\n\nexport default CollectionCardWithVolume\n"],"names":["copyArray","__webpack_require__","shuffleSelf","module","exports","array","copyObject","keys","object","source","keysIn","Stack","arrayEach","assignValue","baseAssign","baseAssignIn","cloneBuffer","copySymbols","copySymbolsIn","getAllKeys","getAllKeysIn","getTag","initCloneArray","initCloneByTag","initCloneObject","isArray","isBuffer","isMap","isObject","isSet","argsTag","funcTag","objectTag","cloneableTags","baseClone","value","bitmask","customizer","key","stack","result","isDeep","isFlat","undefined","isArr","tag","isFunc","stacked","get","set","forEach","subValue","add","props","keysFunc","isFull","isObjectLike","nativeFloor","Math","floor","nativeRandom","random","lower","upper","values","collection","arrayMap","cloneArrayBuffer","dataView","buffer","constructor","byteOffset","byteLength","reFlags","regexp","exec","lastIndex","Symbol","symbolProto","prototype","symbolValueOf","valueOf","symbol","Object","call","getSymbols","getSymbolsIn","hasOwnProperty","objectProto","length","index","input","cloneDataView","cloneRegExp","cloneSymbol","cloneTypedArray","Ctor","baseRandom","size","rand","CLONE_DEEP_FLAG","baseIsMap","baseUnary","nodeUtil","nodeIsMap","baseIsSet","nodeIsSet","arrayShuffle","baseShuffle","func","baseValues","__webpack_exports__","param","bgSrc","avatarSrc","collectionName","url","volume","t","useTranslation","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","CollectionCard","jsxs","Flex","alignItems","Text","fontSize","color","BNBAmountLabel","amount"],"sourceRoot":""}