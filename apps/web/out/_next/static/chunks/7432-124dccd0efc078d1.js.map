{"version":3,"file":"static/chunks/7432-124dccd0efc078d1.js","mappings":"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","sources":["webpack://_N_E/../../packages/uikit/src/components/PageHeader/PageHeader.tsx","webpack://_N_E/../../packages/uikit/src/widgets/Pool/Cells/BaseCell.tsx","webpack://_N_E/../../packages/uikit/src/widgets/Pool/Cells/ExpandActionCell.tsx","webpack://_N_E/../../packages/uikit/src/widgets/Pool/CollectModal.tsx","webpack://_N_E/../../packages/utils/removeTrailingZeros.ts","webpack://_N_E/../../packages/uikit/src/widgets/Pool/PercentageButton.tsx","webpack://_N_E/../../packages/uikit/src/widgets/Pool/StakeModal.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import styled from \"styled-components\";\nimport { Box } from \"../Box\";\nimport Container from \"../Layouts/Container\";\nimport { PageHeaderProps } from \"./types\";\n\nconst Outer = styled(Box)<{ background?: string }>`\n  background: ${({ theme, background }) => background || theme.colors.gradientBubblegum};\n`;\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n  position: relative;\n`;\n\nconst PageHeader: React.FC<React.PropsWithChildren<PageHeaderProps>> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n);\n\nexport default PageHeader;\n","import styled from \"styled-components\";\nimport { Flex, Text } from \"../../../components\";\n\nexport const BaseCell = styled(Flex)`\n  color: black;\n\n  padding: 24px 8px;\n\n  flex-direction: column;\n  justify-content: flex-start;\n`;\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`;\n","import styled from \"styled-components\";\nimport { useTranslation } from \"@pancakeswap/localization\";\n\nimport { Text, ChevronDownIcon } from \"../../../components\";\nimport { BaseCell } from \"./BaseCell\";\n\ninterface ExpandActionCellProps {\n  expanded: boolean;\n  isFullLayout: boolean;\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`;\n\nconst ArrowIcon = styled((props) => <ChevronDownIcon {...props} />)`\n  transform: ${({ toggled }) => (toggled ? \"rotate(180deg)\" : \"rotate(0)\")};\n  height: 24px;\n`;\n\nexport const ExpandActionCell: React.FC<React.PropsWithChildren<ExpandActionCellProps>> = ({\n  expanded,\n  isFullLayout,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t(\"Hide\") : t(\"Details\")}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  );\n};\n","import { useTranslation } from \"@pancakeswap/localization\";\nimport { formatNumber } from \"@pancakeswap/utils/formatBalance\";\nimport { useTheme } from \"styled-components\";\nimport { Flex } from \"../../components/Box\";\nimport { Heading } from \"../../components/Heading\";\nimport { Button } from \"../../components/Button\";\nimport { Text } from \"../../components/Text\";\nimport { AutoRenewIcon } from \"../../components/Svg\";\nimport { Modal } from \"../Modal\";\nimport getThemeValue from \"../../util/getThemeValue\";\n\nexport interface CollectModalProps {\n  formattedBalance: string;\n  fullBalance: string;\n  earningTokenSymbol: string;\n  earningsDollarValue: number;\n  sousId: number;\n  isBnbPool: boolean;\n  onDismiss?: () => void;\n  poolAddress?: {\n    [index: number]: string;\n  };\n  earningTokenAddress?: string;\n}\n\nexport interface CollectModalWithHandlerProps extends Omit<CollectModalProps, \"isBnbPool\" | \"sousId\"> {\n  handleHarvestConfirm: () => Promise<any>;\n  pendingTx: boolean;\n}\n\nexport function CollectModal({\n  formattedBalance,\n  earningTokenSymbol,\n  earningsDollarValue,\n  onDismiss,\n  handleHarvestConfirm,\n  pendingTx,\n}: CollectModalWithHandlerProps) {\n  const { t } = useTranslation();\n  const theme = useTheme();\n\n  return (\n    <Modal\n      title={`${earningTokenSymbol} ${t(\"Harvest\")}`}\n      onDismiss={onDismiss}\n      headerBackground={getThemeValue(theme, \"colors.gradientCardHeader\")}\n    >\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n        <Text>{t(\"Harvesting\")}:</Text>\n      </Flex>\n      <Flex flexDirection=\"column\" mb=\"24px\">\n        <Heading>\n          {formattedBalance} {earningTokenSymbol}\n        </Heading>\n        {earningsDollarValue > 0 && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n        )}\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t(\"Confirming\") : t(\"Confirm\")}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t(\"Close Window\")}\n      </Button>\n    </Modal>\n  );\n}\n","const removeTrailingZerosRegex = new RegExp(/^([\\d,]+)$|^([\\d,]+)\\.0*$|^([\\d,]+\\.[0-9]*?)0*$/, 'g')\n\nconst removeTrailingZeros = (amount: string): string => {\n  return amount.replace(removeTrailingZerosRegex, '$1$2$3')\n}\n\nexport default removeTrailingZeros\n","import styled from \"styled-components\";\nimport { Button } from \"../../components/Button\";\n\ninterface PercentageButtonProps {\n  onClick: () => void;\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`;\n\nconst PercentageButton: React.FC<React.PropsWithChildren<PercentageButtonProps>> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  );\n};\n\nexport default PercentageButton;\n","import { useTranslation } from \"@pancakeswap/localization\";\n\nimport BigNumber from \"bignumber.js\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport styled, { useTheme } from \"styled-components\";\nimport { getInterestBreakdown } from \"@pancakeswap/utils/compoundApyHelpers\";\nimport { formatNumber, getDecimalAmount, getFullDisplayBalance } from \"@pancakeswap/utils/formatBalance\";\nimport removeTrailingZeros from \"@pancakeswap/utils/removeTrailingZeros\";\n\nimport PercentageButton from \"./PercentageButton\";\nimport getThemeValue from \"../../util/getThemeValue\";\n\nimport {\n  AutoRenewIcon,\n  BalanceInput,\n  Button,\n  CalculateIcon,\n  Flex,\n  IconButton,\n  Image,\n  Link,\n  Skeleton,\n  Slider,\n  Text,\n  RoiCalculatorModal,\n} from \"../../components\";\nimport { Modal } from \"../Modal\";\n\nconst StyledLink = styled((props) => <Link {...props} />)`\n  width: 100%;\n`;\n\nconst AnnualRoiContainer = styled((props) => <Flex {...props} />)`\n  cursor: pointer;\n`;\n\nconst AnnualRoiDisplay = styled((props) => <Text {...props} />)`\n  width: 72px;\n  max-width: 72px;\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`;\n\ninterface StakeModalProps {\n  // Pool attributes\n  stakingTokenDecimals: number;\n  stakingTokenSymbol: string;\n  stakingTokenAddress: string;\n  earningTokenPrice: number;\n  apr: number;\n  stakingLimit: BigNumber;\n  earningTokenSymbol: string;\n  userDataStakedBalance: BigNumber;\n  userDataStakingTokenBalance: BigNumber;\n  enableEmergencyWithdraw: boolean;\n\n  stakingTokenBalance: BigNumber;\n  stakingTokenPrice: number;\n  isRemovingStake?: boolean;\n  needEnable?: boolean;\n  enablePendingTx?: boolean;\n  setAmount?: (value: string) => void;\n  onDismiss?: () => void;\n  handleEnableApprove?: () => void;\n  account: string;\n  handleConfirmClick: any;\n  pendingTx: boolean;\n  imageUrl?: string;\n}\n\nexport const StakeModal: React.FC<React.PropsWithChildren<StakeModalProps>> = ({\n  stakingTokenDecimals,\n  stakingTokenSymbol,\n  stakingTokenAddress,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  apr,\n  stakingLimit,\n  earningTokenPrice,\n  earningTokenSymbol,\n  userDataStakedBalance,\n  userDataStakingTokenBalance,\n  enableEmergencyWithdraw,\n  isRemovingStake = false,\n  needEnable,\n  enablePendingTx,\n  setAmount,\n  onDismiss,\n  handleEnableApprove,\n  account,\n  pendingTx,\n  handleConfirmClick,\n  imageUrl = \"/images/tokens/\",\n}) => {\n  const { t } = useTranslation();\n  const theme = useTheme();\n  const [stakeAmount, setStakeAmount] = useState(\"\");\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false);\n  const [percent, setPercent] = useState(0);\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false);\n  const getCalculatedStakingLimit = useCallback(() => {\n    if (isRemovingStake) {\n      return userDataStakedBalance;\n    }\n    if (stakingLimit.gt(0)) {\n      const stakingLimitLeft = stakingLimit.minus(userDataStakedBalance);\n      if (stakingTokenBalance.gt(stakingLimitLeft)) {\n        return stakingLimitLeft;\n      }\n    }\n    return stakingTokenBalance;\n  }, [userDataStakedBalance, stakingTokenBalance, stakingLimit, isRemovingStake]);\n  const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingTokenDecimals);\n  const userNotEnoughToken = isRemovingStake\n    ? userDataStakedBalance.lt(fullDecimalStakeAmount)\n    : userDataStakingTokenBalance.lt(fullDecimalStakeAmount);\n\n  const usdValueStaked = new BigNumber(stakeAmount).times(stakingTokenPrice);\n  const formattedUsdValueStaked = !usdValueStaked.isNaN() && formatNumber(usdValueStaked.toNumber());\n\n  const interestBreakdown = getInterestBreakdown({\n    principalInUSD: !usdValueStaked.isNaN() ? usdValueStaked.toNumber() : 0,\n    apr,\n    earningTokenPrice,\n  });\n  const annualRoi = interestBreakdown[3] * earningTokenPrice;\n  const formattedAnnualRoi = formatNumber(annualRoi, annualRoi > 10000 ? 0 : 2, annualRoi > 10000 ? 0 : 2);\n\n  const getTokenLink = stakingTokenAddress ? `/swap?outputCurrency=${stakingTokenAddress}` : \"/swap\";\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userDataStakedBalance).gt(stakingLimit));\n    }\n  }, [\n    stakeAmount,\n    stakingLimit,\n    isRemovingStake,\n    setHasReachedStakedLimit,\n    fullDecimalStakeAmount,\n    userDataStakedBalance,\n  ]);\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingTokenDecimals);\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber());\n      setPercent(Math.min(percentage, 100));\n    } else {\n      setPercent(0);\n    }\n    setStakeAmount(input);\n  };\n\n  const handleChangePercent = useCallback(\n    (sliderPercent: number) => {\n      if (sliderPercent > 0) {\n        const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent);\n        const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingTokenDecimals, stakingTokenDecimals);\n\n        setStakeAmount(removeTrailingZeros(amountToStake));\n      } else {\n        setStakeAmount(\"\");\n      }\n      setPercent(sliderPercent);\n    },\n    [getCalculatedStakingLimit, stakingTokenDecimals]\n  );\n\n  useEffect(() => {\n    if (setAmount) {\n      setAmount(Number(stakeAmount) > 0 ? stakeAmount : \"0\");\n    }\n  }, [setAmount, stakeAmount]);\n\n  if (showRoiCalculator) {\n    return (\n      <RoiCalculatorModal\n        account={account}\n        earningTokenPrice={earningTokenPrice}\n        stakingTokenPrice={stakingTokenPrice}\n        stakingTokenDecimals={stakingTokenDecimals}\n        apr={apr}\n        linkLabel={t(\"Get %symbol%\", { symbol: stakingTokenSymbol })}\n        linkHref={getTokenLink}\n        stakingTokenBalance={userDataStakedBalance.plus(stakingTokenBalance)}\n        stakingTokenSymbol={stakingTokenSymbol}\n        earningTokenSymbol={earningTokenSymbol}\n        onBack={() => setShowRoiCalculator(false)}\n        initialValue={stakeAmount}\n      />\n    );\n  }\n\n  return (\n    <Modal\n      minWidth=\"346px\"\n      title={isRemovingStake ? t(\"Unstake\") : t(\"Stake in Pool\")}\n      onDismiss={onDismiss}\n      headerBackground={getThemeValue(theme, \"colors.gradientCardHeader\")}\n    >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: \"center\" }} fontSize=\"16px\">\n          {t(\"Max stake for this pool: %amount% %token%\", {\n            amount: getFullDisplayBalance(stakingLimit, stakingTokenDecimals, 0),\n            token: stakingTokenSymbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t(\"Unstake\") : t(\"Stake\")}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image src={`${imageUrl}${stakingTokenAddress}.png`} width={24} height={24} alt={stakingTokenSymbol} />\n          <Text ml=\"4px\" bold>\n            {stakingTokenSymbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${formattedUsdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit || userNotEnoughToken}\n        decimals={stakingTokenDecimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: \"right\" }} mt=\"4px\">\n          {t(\"Maximum total stake: %amount% %token%\", {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingTokenDecimals, 0),\n            token: stakingTokenSymbol,\n          })}\n        </Text>\n      )}\n      {userNotEnoughToken && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: \"right\" }} mt=\"4px\">\n          {t(\"Insufficient %symbol% balance\", {\n            symbol: stakingTokenSymbol,\n          })}\n        </Text>\n      )}\n      {needEnable && (\n        <Text color=\"failure\" textAlign=\"right\" fontSize=\"12px\" mt=\"8px\">\n          {t('Insufficient token allowance. Click \"Enable\" to approve.')}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t(\"Balance: %balance%\", {\n          balance: getFullDisplayBalance(\n            isRemovingStake ? userDataStakedBalance : stakingTokenBalance,\n            stakingTokenDecimals\n          ),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t(\"Max\")}</PercentageButton>\n      </Flex>\n      {!isRemovingStake && (\n        <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Text mr=\"8px\" color=\"textSubtle\">\n            {t(\"Annual ROI at current rates\")}:\n          </Text>\n          {Number.isFinite(annualRoi) ? (\n            <AnnualRoiContainer\n              alignItems=\"center\"\n              onClick={() => {\n                setShowRoiCalculator(true);\n              }}\n            >\n              <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\n              <IconButton variant=\"text\" scale=\"sm\">\n                <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n              </IconButton>\n            </AnnualRoiContainer>\n          ) : (\n            <Skeleton width={60} />\n          )}\n        </Flex>\n      )}\n      {isRemovingStake && enableEmergencyWithdraw && (\n        <Flex maxWidth=\"346px\" mt=\"24px\">\n          <Text textAlign=\"center\">\n            {t(\n              \"This pool was misconfigured. Please unstake your tokens from it, emergencyWithdraw method will be used. Your tokens will be returned to your wallet, however rewards will not be harvested.\"\n            )}\n          </Text>\n        </Flex>\n      )}\n      {needEnable ? (\n        <Button\n          isLoading={enablePendingTx}\n          endIcon={enablePendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          onClick={handleEnableApprove}\n          mt=\"24px\"\n        >\n          {t(\"Enable\")}\n        </Button>\n      ) : (\n        <Button\n          isLoading={pendingTx}\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          onClick={() => handleConfirmClick(stakeAmount)}\n          disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit || userNotEnoughToken}\n          mt=\"24px\"\n        >\n          {pendingTx ? t(\"Confirming\") : t(\"Confirm\")}\n        </Button>\n      )}\n      {!isRemovingStake && (\n        <StyledLink external href={getTokenLink}>\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t(\"Get %symbol%\", { symbol: stakingTokenSymbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  );\n};\n"],"names":["Outer","styled","Box","param","theme","background","colors","gradientBubblegum","Inner","Container","__webpack_exports__","_param","children","props","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","jsx","BaseCell","Flex","CellContent","Text","StyledCell","mediaQueries","md","ArrowIcon","ChevronDownIcon","toggled","ExpandActionCell","expanded","isFullLayout","t","useTranslation","jsxs","role","color","bold","CollectModal","formattedBalance","earningTokenSymbol","earningsDollarValue","onDismiss","handleHarvestConfirm","pendingTx","useTheme","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","Modal","title","concat","headerBackground","getThemeValue","justifyContent","alignItems","mb","flexDirection","Heading","fontSize","formatNumber","Button","mt","onClick","isLoading","endIcon","AutoRenewIcon","spin","variant","pb","removeTrailingZerosRegex","StyledButton","Pool_PercentageButton","jsx_runtime","scale","mx","p","StyledLink","Link","AnnualRoiContainer","AnnualRoiDisplay","StakeModal","stakingTokenDecimals","stakingTokenSymbol","stakingTokenAddress","stakingTokenBalance","stakingTokenPrice","apr","stakingLimit","earningTokenPrice","userDataStakedBalance","userDataStakingTokenBalance","enableEmergencyWithdraw","isRemovingStake","_param_isRemovingStake","needEnable","enablePendingTx","setAmount","handleEnableApprove","account","handleConfirmClick","imageUrl","useState","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","showRoiCalculator","setShowRoiCalculator","getCalculatedStakingLimit","useCallback","gt","stakingLimitLeft","minus","fullDecimalStakeAmount","getDecimalAmount","BigNumber","userNotEnoughToken","lt","usdValueStaked","times","formattedUsdValueStaked","isNaN","toNumber","annualRoi","interestBreakdown","getInterestBreakdown","principalInUSD","formattedAnnualRoi","getTokenLink","useEffect","plus","handleChangePercent","sliderPercent","percentageOfStakingMax","dividedBy","multipliedBy","amount","getFullDisplayBalance","replace","Number","RoiCalculatorModal","linkLabel","symbol","linkHref","onBack","initialValue","minWidth","style","textAlign","token","Image","src","_param_imageUrl","width","height","alt","ml","BalanceInput","value","onUserInput","input","Math","min","floor","convertedInput","currencyValue","isWarning","decimals","balance","Slider","max","onValueChanged","name","valueLabel","step","PercentageButton","mr","isFinite","IconButton","CalculateIcon","Skeleton","maxWidth","disabled","parseFloat","external","href"],"sourceRoot":""}