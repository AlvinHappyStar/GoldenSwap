{"version":3,"file":"static/chunks/6774-10fb0e420b559040.js","mappings":"mIAAA,IAAAA,EAAA,CACAC,KAAAC,KAAAD,IAAA,CACAE,MAAAD,KAAAC,KAAA,CACAC,MAAAF,KAAAE,KAAA,CACAC,MAAA,SAAAC,CAAA,EACA,OAAAA,EAAA,EAAAJ,KAAAD,IAAA,CAAAK,GAAAJ,KAAAE,KAAA,CAAAE,EAAA,CAGA,EAEO,SAAAC,EAAAC,CAAA,EACP,OAAAA,EAAAR,CAAA,CAAAQ,EAAA,CAAAR,EAFA,KAEA,8FCkCe,SAAAS,EAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,EACb,GAAAC,EAAAC,CAAA,EAAY,EAAAC,WACd,IAAAC,EAAa,GAAAC,EAAAH,CAAA,EAAgBJ,EAAAC,GAAA,EAC7B,MAAS,GAAAO,EAAAC,CAAA,EAAiBP,MAAAA,EAAA,OAAAA,EAAAQ,cAAA,EAAAJ,EAC1B,mFC/CAK,EAAA,8DAgEe,SAAAC,EAAAC,CAAA,CAAAX,CAAA,EAGf,GAAAG,UAAAS,MAAA,GACA,iDAAAC,MAAA,CAAAV,UAAAS,MAAA,cAGA,IANAE,EAAAC,EAAAC,EAAAC,EAAAC,EAMAC,EAAuB,GAAAC,EAAAC,CAAA,IACvBC,EAAA,OAAAR,CAAAA,EAAA,OAAAC,CAAAA,EAAAf,MAAAA,EAAA,OAAAA,EAAAsB,MAAA,GAAAP,KAAA,IAAAA,EAAAA,EAAAI,EAAAG,MAAA,GAAAR,KAAA,IAAAA,EAAAA,EAAmOS,EAAArB,CAAa,CAChPsB,EAAA,OAAAR,CAAAA,EAAAhB,MAAAA,EAAA,OAAAA,EAAAwB,MAAA,GAAAR,KAAA,IAAAA,EAAAA,EAAAP,CAAA,CACAgB,EAAA,OAAAR,CAAAA,EAAAjB,MAAAA,EAAA,OAAAA,EAAAyB,IAAA,GAAAR,KAAA,IAAAA,GAAAA,EACAS,EAAA,OAAAR,CAAAA,EAAAlB,MAAAA,EAAA,OAAAA,EAAA0B,SAAA,GAAAR,KAAA,IAAAA,EAAAA,EAAA,WAEA,EAAAS,cAAA,CAIAH,EAAAI,MAAA,UAAAC,CAAA,CAAAC,CAAA,EACA,IAAAC,EAAA,IAAAlB,MAAA,CAAAiB,EAAAE,OAAA,iBAAAC,CAAA,EACA,OAAAA,EAAAC,WAAA,EACA,IACAxC,EAAAiB,CAAA,CAAAmB,EAAA,OAEA,iBAAApC,GAAA+B,CAAAA,GAAAd,CAAA,CAAAmB,EAAA,EACAD,EAAAhB,MAAA,CAAAS,EAAAK,cAAA,CAAAI,EAAArC,IAGAmC,CAFA,EAGG,IAAAM,IAAA,CAAAT,GAdH,EACA,2TChDA,IAAMU,EAAsBC,CAAAA,EAAAA,QAAAA,EAAAA,EAAOC,EAAAA,EAAWA,EAAAA,UAAAA,CAAAA,mCAC9B,SAAAC,CAAA,SAAeC,EAAZA,KAAAA,CAAkBC,MAAM,CAACC,iBAAiB,EA6F7DC,CAAAA,EAAA,EArFgF,SAAAJ,CAAA,CAS1E,KARJK,EAAAA,EAAAA,EAAAA,CACAC,EAAAA,EAAAA,SAAAA,CACAC,EAAAA,EAAAA,SAAAA,CACAC,EAAAA,EAAAA,MAAAA,CACAC,EAAAA,EAAAA,MAAAA,CACAC,EAAAA,EAAAA,QAAAA,CACAC,EAAAA,EAAAA,WAAAA,CACAC,EAAAA,EAAAA,WAAAA,CAEoCC,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,QAAAA,EAASL,GAAU,EAAE,KAAlDM,EAA6BD,CAAAA,CAAAA,EAAAA,CAAjBE,EAAiBF,CAAAA,CAAAA,EAAAA,CAC9BG,EAAQC,CAAAA,EAAAA,EAAAA,EAAAA,IAAND,CAAAA,CAEFE,EAA2BC,CAAAA,EAAAA,EAAAA,WAAAA,EAC/B,SAACC,CAAAA,CAAe,CASdL,EARsBD,EAAWO,GAAG,CAAC,SAACC,CAAAA,CAAU,QAC9C,IAAmBA,EAAMC,GAAG,CACnB,GAAAC,EAAA7D,CAAA,KAAA8D,EAAA9D,CAAA,KAAK2D,GAAAA,CAAOnE,MAAO,CAACmE,EAAMnE,KAAK,GAGjCmE,CAFN,GAML,EACA,CAACR,EAAW,EAGRY,EAAgBP,CAAAA,EAAAA,EAAAA,WAAAA,EAAY,UAAM,CACtCb,IACAC,MAAAA,GAAAA,GACF,EAAG,CAACD,EAAWC,EAAU,EAEzB,MACE,GAAAoB,EAAAC,IAAA,EAACC,EAAAA,EAAcA,CAAAA,CAACC,MAAOlB,GAAeI,EAAE,YAAae,UAAU,QAAQ1B,GAAIA,YACzE,GAAAsB,EAAAK,GAAA,EAACnC,EAAAA,UACC,GAAA8B,EAAAK,GAAA,EAACC,EAAAA,EAAUA,CAAAA,UACT,GAAAN,EAAAK,GAAA,EAACE,EAAAA,CAAOA,CAAAA,CAACC,MAAM,cAAMvB,GAAeI,EAAE,kBAG1C,GAAAW,EAAAC,IAAA,EAACQ,EAAAA,EAASA,CAAAA,CAACC,EAAE,OAAOC,SAAU,CAAC,OAAQ,OAAQ,OAAQ,QAAQ,WAC7D,GAAAX,EAAAC,IAAA,EAACW,EAAAA,EAAGA,CAAAA,CAACC,UAAU,QAAQC,UAAU,iBAC/B,GAAAd,EAAAK,GAAA,EAACE,EAAAA,CAAOA,CAAAA,CAACQ,GAAG,KAAKC,GAAG,gBACjBlC,IAEFC,GACC,GAAAiB,EAAAK,GAAA,EAACY,EAAAA,CAAIA,CAAAA,CAACF,GAAG,IAAIG,MAAM,aAAaF,GAAG,gBAChCjC,IAGJI,EAAWO,GAAG,CAAC,SAACC,CAAAA,CAAAA,OACf,GAAAK,EAAAK,GAAA,EAACc,QAAAA,CAECC,QAASzB,EAAMC,GAAG,CAClByB,MAAO,CAAEC,QAAS,QAASC,OAAQ,UAAWC,aAAc,MAAO,WAEnE,GAAAxB,EAAAC,IAAA,EAACwB,EAAAA,CAAIA,CAAAA,CAACC,WAAW,mBACf,GAAA1B,EAAAK,GAAA,EAACsB,MAAAA,CAAIN,MAAO,CAAEO,KAAM,OAAQC,UAAW,aAAcC,WAAY,KAAM,WACrE,GAAA9B,EAAAK,GAAA,EAAC0B,EAAAA,CAAQA,CAAAA,CACPrD,GAAIiB,EAAMC,GAAG,CACbY,MAAM,KACNwB,QAASrC,EAAMnE,KAAK,CACpByG,SAAU,kBAAM1C,EAAyBI,EAAMC,GAAG,OAGtD,GAAAI,EAAAK,GAAA,EAACY,EAAAA,CAAIA,CAAAA,CAACiB,GAAG,eAAOvC,EAAMwC,OAAO,OAb1BxC,EAAMC,GAAG,OAkBnB,CAACZ,GACA,GAAAgB,EAAAK,GAAA,EAAC+B,EAAAA,CAAMA,CAAAA,CACL1D,GAAI,GAAM/B,MAAA,CAAH+B,EAAG,aACV2D,MAAM,OACNC,QAASvC,EACTwC,SAAUpD,EAAWqD,IAAI,CAAC,SAAC7C,CAAAA,CAAAA,OAAU,CAACA,EAAMnE,KAAK,YAEhD6D,EAAE,mBAMf,0YC7HO,IAAMoD,EAA4B,EAE5BC,EAAgB,QAEhBC,EAAY,MACZC,EAAiB,MACjBC,EAAe,KACfC,EAAc,KAEdC,EAAe,UACfC,EAAgB,WAEhBC,EAAe,MACfC,EAAmB,KAEnBC,EAA4B,GAK5BC,EAAsB,EAAE,CACxBC,EAAkB,CAE7B,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CAEA,6CACA,6CACD,CAEYC,EAAsB,CAAC,6CAA6C,CACpEC,EAAsB,CACjC,6CACA,6CACA,6CACA,6CACA,6CACD,6SClB8BC,yDApBlBC,EAA2B,CACtCC,IAAK,MACLC,IAAK,KACP,EAEaC,EAAyB,CACpCF,IAAKG,EAAAA,EAAaA,CAClBF,IAAKG,EAAAA,EAAiBA,EAGXC,EAAsB,CACjCL,IAAKX,EAAAA,EAAYA,CACjBY,IAAKX,EAAAA,EAAaA,EAGPgB,EAAe,CAC1BN,IAAKO,EAAAA,EAAAA,CAAAA,GAAW,CAChBN,IAAKM,EAAAA,EAAAA,CAAAA,QAAgB,EAGVC,EAAkBV,CAAAA,EAAA,GAC7B,GAAAW,EAAAnI,CAAA,EAD6BwH,EAC5BS,EAAAA,EAAAA,CAAAA,GAAW,CAAG,IACf,GAAAE,EAAAnI,CAAA,EAF6BwH,EAE5BS,EAAAA,EAAAA,CAAAA,QAAgB,CAAG,QAFST,CAAA,EAKlBY,EAAwB,CACnCV,IAAKW,EAAAA,EAAUA,CACfV,IAAKW,EAAAA,EAAaA,EAGPC,EAA0B,CACrCb,IAAKc,EAAAA,EAAWA,CAChBb,IAAKc,EAAAA,EAAeA,EAGTC,EAAiB,CAC5BhB,IAAK,UACLC,IAAK,WACP,EAEagB,EAA2B,CACtCjB,IAAKL,EAAAA,EAAeA,CACpBM,IAAKL,EAAAA,EAAmBA,EAGbsB,EAA2B,CACtClB,IAAKN,EAAAA,EAAmBA,CACxBO,IAAKJ,EAAAA,EAAmBA,EAGbsB,EAA2C,SAACC,CAAAA,CAA8B,QAErF,IAAyBC,EAAAA,EAAoBA,CACtCX,CAAqB,CAACU,EAAU,EAG5BE,EAAoB,kBAAMC,OAAOC,QAAQ,CAACC,IAAI,CAACC,QAAQ,CAAC,2MChExDC,EAAgB,SAACC,CAAAA,CAAqB,CACjD,GAAIA,IAAad,EAAAA,EAAWA,CAC1B,MAAO,CACLe,OACEC,EAAQC,GAAG,CAACC,4BAA4B,EAItCT,OAAOU,QAAQ,CAEtB,EAIUtB,EAAa,IAAIuB,EAAAA,aAAaA,CAACpB,EAAAA,EAAWA,EAM1CF,EAAgB,IAAIsB,EAAAA,aAAaA,CAACnB,EAAAA,EAAeA,EAEjDM,EAAuB,IAAIa,EAAAA,aAAaA,CAACC,EAAAA,EAA0BA,EAEhD,IAAID,EAAAA,aAAaA,CAACpB,EAAAA,EAAWA,CAAE,CAC7DsB,QAAS,IACTC,QAAS,CACPR,OAAQ,6BACV,CACF,GAEO,IAAMS,EAAmB,IAAIJ,EAAAA,aAAaA,CAACC,EAAAA,EAA0BA,EAExC,IAAID,EAAAA,aAAaA,CAACK,EAAAA,EAASA,CAAE,CAC/DF,QAAS,CAEP,YAAaP,EAAQC,GAAG,CAACS,gBAAgB,EAE3CJ,QAAS,GACX,kaC3CaK,EAAqB,SAACC,CAAAA,CAA8BC,CAAAA,CAAyC,CACxG,GAAIA,EAAO,CACT,IAAMC,EAAaC,CAAAA,EAAAA,EAAAA,CAAAA,EAASF,EAAMG,WAAW,IAAIC,IAAI,GAAGC,KAAK,CAAC,KAC9D,OAAON,EAAMO,MAAM,CAAC,SAACC,CAAAA,CAA8B,CACjD,IAAMC,EAAaN,CAAAA,EAAAA,EAAAA,CAAAA,EAASK,EAAKE,QAAQ,CAACN,WAAW,IACrD,OAAOF,EAAWS,KAAK,CAAC,SAACC,CAAAA,CAAc,CACrC,OAAOH,EAAWzB,QAAQ,CAAC4B,EAC7B,EACF,EACF,CAAC,OACMZ,CACT,8KCVMa,EAAoBC,EAAAA,CAAAA,CAAAA,SAAAA,CAAAA,aAALD,CA6BrBE,GA3B4F,SAAA9I,CAAA,CAQtF,KAYe+I,EAnBnBvJ,EAAAA,EAAAA,KAAAA,CACAwJ,EAAAA,EAAAA,UAAAA,CACAlG,EAAAA,EAAAA,KAAAA,CACAmG,EAAAA,EAAAA,GAAAA,CACAC,EAAAA,EAAAA,OAAAA,CACAC,EAAAA,EAAAA,QAAAA,CACAC,EAAAA,EAAAA,SAAAA,CAEiCC,EAAAA,CAAAA,EAAAA,EAAAA,EAAAA,EAAYJ,GAArCK,EAAyBD,EAAzBC,aAAAA,CAAeP,EAAUM,EAAVN,KAAAA,CAEvB,MACE,GAAAQ,EAAAvH,GAAA,EAAC4G,EAAAA,CACCK,IAAKA,EACLnG,MAAOA,EACPtD,MAAOA,EACPwJ,WAAYA,EACZE,QAASA,EACTC,SAAUA,EACVC,UAAWA,EACXE,cAAeP,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,IAAoB,GAApBA,CAAAA,EAAAA,EAAOO,aAAa,GAApBP,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAsBS,EAAAA,CAAG,IAAKT,MAAAA,EAAAA,KAAAA,EAAAA,EAAOO,aAAa,CAAGA,CAAa,UAEjF,GAAAC,EAAAvH,GAAA,EAACyH,EAAAA,CAAcA,CAAAA,CAACzF,MAAO,GAAI0F,OAAQ,GAAIC,QAAQ,WAAWC,aAAcpK,EAAOqK,eAAgBb,KAGrG,qwBC7BO,IAAMc,GAAkBhK,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,qCAEnB,SAAAE,CAAA,SAAeC,EAAZA,KAAAA,CAAkBC,MAAM,CAAC6J,KAAK,EAMnD,SAAA/J,CAAA,SAAeC,EAAZA,KAAAA,CAAkB+J,YAAY,CAACC,EAAE,EAOpC,SAAAjK,CAAA,SAAeC,EAAZA,KAAAA,CAAkB+J,YAAY,CAACE,EAAE,GAO3BC,GAAerK,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,sCAKzBsK,GAAgBtK,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,gsDCFvC,IAAkC+I,GAAAA,EAAAA,CAAAA,CAAAA,SAAgB,CAA1CwB,GAA0BxB,GAA1BwB,UAAAA,CAAYC,GAAczB,GAAdyB,SAAAA,CAYdC,GAAkBC,CAAAA,EAAAA,EAAAA,EAAAA,EAASA,MAS3BC,GAAoBD,CAAAA,EAAAA,EAAAA,EAAAA,EAASA,MAS7BE,GAAY5K,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,qCACb,SAAAE,CAAA,SACX2K,EADcA,QAAAA,CAEVC,CAAAA,EAAAA,EAAAA,EAAAA,EAAGA,KACCL,IAEJK,CAAAA,EAAAA,EAAAA,EAAAA,EAAGA,KACCH,GACH,EAEO,SAAAzK,CAAA,SAAeC,EAAZA,KAAAA,CAAkBC,MAAM,CAAC2K,QAAQ,EAMhD,SAAA7K,CAAA,SAAeC,EAAZA,KAAAA,CAAkB+J,YAAY,CAACc,EAAE,GAOlCC,GAAqBjL,CAAAA,EAAAA,EAAAA,EAAAA,EAAOkL,GAAAA,CAAYA,EAAAA,UAAAA,CAAAA,qCAIxCC,GAAiBnL,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,qCACtB,SAAAE,CAAA,SAAeC,EAAZA,KAAAA,CAAkBC,MAAM,CAACgL,IAAI,EAKvC,SAAAlL,CAAA,SAAeC,EAAZA,KAAAA,CAAkB+J,YAAY,CAACC,EAAE,GAKlCH,GAAkBhK,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,qCAI9B,SAAAE,CAAA,SAAeC,EAAZA,KAAAA,CAAkB+J,YAAY,CAACC,EAAE,GASlCkB,GAAgBrL,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,sCAI1BsL,GAAiBtL,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,sCAE3BuL,GAAevL,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,sCAiJ/BwL,GA1IwF,SAAAtL,CAAA,CAQlF,KAPJuL,EAAAA,EAAAA,OAAAA,CACAC,EAAAA,EAAAA,GAAAA,CACAC,EAAAA,EAAAA,UAAAA,CACAC,EAAAA,EAAAA,SAAAA,CACAC,EAAAA,EAAAA,aAAAA,CACAhB,EAAAA,EAAAA,QAAAA,CAAAA,EAAAA,EACAiB,iBAAAA,CAAAA,EAAAA,KAAAA,IAAAA,GAAwBC,EAElBC,EAAcC,CAAAA,EAAAA,EAAAA,CAAAA,IAAZD,OAAAA,CACkCE,EAAAA,CAAAA,EAAAA,EAAAA,UAAAA,EAAWC,GAAAA,CAAwBA,EAArEC,EAAkCF,EAAlCE,SAAAA,CAAWC,EAAuBH,EAAvBG,kBAAAA,CAIbC,EAAgBC,CAAAA,EAAAA,EAAAA,CAAAA,IAAdD,SAAAA,CAKJnL,EAAAA,CAAAA,EAAAA,EAAAA,EAAAA,IAFFD,EAEEC,EAFFD,CAAAA,CACAsL,EACErL,EADFqL,eAAAA,CAAmBvN,MAAAA,CAEfwN,EAAWhE,OAAAA,EAAKkD,UAAU,CACxBzC,EAAyCT,EAAzCS,UAAAA,CAAYxJ,EAA6B+I,EAA7B/I,KAAAA,CAAOgN,EAAsBjE,EAAtBiE,iBAAAA,CACrBC,EAAUlE,EAAKE,QAAQ,EAAIF,EAAKE,QAAQ,CAAChJ,OAAO,CAAC,YAAa,IAC9DiN,EAAwBC,CAAAA,EAAAA,GAAAA,CAAAA,EAAyB,CACrDC,kBAAmB5D,EAAW6D,OAAO,CACrCC,aAActN,EAAMqN,OAAO,CAC3Bf,QAAAA,CACF,GACMiB,EAAgBxE,EAAdwE,SAAAA,CACFC,EAAMC,CAAAA,EAAAA,GAAAA,CAAAA,EAAoBF,EAAW,UAAWjB,GACPvD,EAAAA,EAAK2E,QAAQ,CAApD5D,EAAuCf,EAAvCe,aAAAA,CAAe6D,EAAwB5E,EAAxB4E,YAAAA,CAAcpE,EAAUR,EAAVQ,KAAAA,CAE/BqE,EAAUC,CAAAA,EAAAA,EAAAA,OAAAA,EAAQ,UAAM,QAC5B,EAASlE,QAAQ,CACR,QAA0CqD,MAAAA,CAAlC3G,GAAAA,EAAe,CAACiG,EAAQ,CAAC,WAAoDwB,MAAAA,CAA3Cd,EAAkB,2BAAmDlO,MAAA,CAA1BgP,GAAAA,CAAgB,CAACxB,EAAQ,EAEhH,QAA0CiB,MAAAA,CAAlClH,GAAAA,EAAe,CAACiG,EAAQ,CAAC,WAA4BwB,MAAAA,CAAnBP,EAAU,WAAmCzO,MAAA,CAA1BgP,GAAAA,CAAgB,CAACxB,EAAQ,CAD5F,EAEA,CAACA,EAASvD,EAAKY,QAAQ,CAAE4D,EAAWP,EAAkB,EAEzD,MACE,GAAAjD,EAAA3H,IAAA,EAAC8I,GAAAA,CAAUC,SAAUA,YACnB,GAAApB,EAAA3H,IAAA,EAACuJ,GAAAA,WACC,GAAA5B,EAAA3H,IAAA,EAACwJ,GAAAA,WACE7C,EAAKgF,WAAW,EAAIhF,EAAKiF,qBAAqB,EAC7C,GAAAjE,EAAA3H,IAAA,EAACyJ,GAAAA,WACC,GAAA9B,EAAAvH,GAAA,EAACY,EAAAA,CAAIA,CAAAA,UAAE5B,EAAE,0BACT,GAAAuI,EAAAvH,GAAA,EAACY,EAAAA,CAAIA,CAAAA,CAAC6K,YAAY,eACf,IAAIC,KAAKnF,EAAKiF,qBAAqB,EAAEG,cAAc,CAAC5O,EAAQ,CAC3D6O,MAAO,QACPC,IAAK,UACLC,KAAM,SACR,QAIL,CAAC1B,GACA,GAAA7C,EAAA3H,IAAA,EAAA2H,EAAAwE,QAAA,YACE,GAAAxE,EAAA3H,IAAA,EAACyJ,GAAAA,WACC,GAAA9B,EAAAvH,GAAA,EAACY,EAAAA,CAAIA,CAAAA,UAAE5B,EAAE,SACT,GAAAuI,EAAAvH,GAAA,EAACgM,EAAAA,CAAGA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAKxC,GAAAA,CAAKyC,eAAgB,GAAOC,QAAS3F,EAAK2F,OAAO,OAE5D,GAAA3E,EAAA3H,IAAA,EAACyJ,GAAAA,WACC,GAAA9B,EAAAvH,GAAA,EAACY,EAAAA,CAAIA,CAAAA,UAAE5B,EAAE,gBACT,GAAAuI,EAAAvH,GAAA,EAACqI,GAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAeoB,OAElB,GAAAlC,EAAA3H,IAAA,EAACyJ,GAAAA,WACC,GAAA9B,EAAAvH,GAAA,EAACY,EAAAA,CAAIA,CAAAA,UAAE5B,EAAE,eACT,GAAAuI,EAAAvH,GAAA,EAACsI,GAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAcoB,aAKtBa,GACC,GAAAhD,EAAAvH,GAAA,EAACoB,EAAAA,CAAIA,CAAAA,CAACT,GAAG,MAAMwL,eAAgBvC,EAAoB,WAAa,YAAY,UAC1E,GAAArC,EAAAvH,GAAA,EAACiJ,GAAAA,UACC,GAAA1B,EAAAvH,GAAA,EAAC+I,GAAAA,CAAmBjE,KAAM,QAA8BxI,MAAA,CAAtBoO,YAC/B1L,EAAE,eAAgB,CAAEoN,OAAQ3B,CAAQ,SAK7C,GAAAlD,EAAAvH,GAAA,EAACoB,EAAAA,CAAIA,CAAAA,CAACT,GAAG,MAAMwL,eAAgBvC,EAAoB,WAAa,YAAY,UAC1E,GAAArC,EAAAvH,GAAA,EAAC+I,GAAAA,CAAmBjE,KAAMsG,WAAUpM,EAAE,qBAExC,GAAAuI,EAAAvH,GAAA,EAACoB,EAAAA,CAAIA,CAAAA,CAACT,GAAG,MAAMwL,eAAgBvC,EAAoB,WAAa,YAAY,UAC1E,GAAArC,EAAAvH,GAAA,EAAC+I,GAAAA,CAAmBsD,UAAS,GAACvH,KAAMkG,WACjChM,EAAE,wBAIT,GAAAuI,EAAA3H,IAAA,EAACkI,GAAeA,WACbqC,EACC,GAAA5C,EAAAvH,GAAA,EAACsM,GAAAA,EAA2BA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAKpC,GAAAA,CAAWP,cAAeA,WACxD,SAAC4C,CAAAA,CAAAA,OAAU,GAAAhF,EAAAvH,GAAA,EAACwM,GAAAA,EAAaA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAKD,QAGjC,GAAAhF,EAAAvH,GAAA,EAACyM,GAAAA,EAAsBA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EApFlBlD,GAoFuBhD,CAAMoD,cAAeA,WAC9C,SAAC4C,CAAAA,CAAAA,OAAU,GAAAhF,EAAAvH,GAAA,EAACwM,GAAAA,EAAaA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAKD,OAElC,CACAhG,CAAAA,MAxFMgD,EAwFNhD,KAAAA,EAAAA,EAAM2F,OAAO,GACZ,GAAA3E,EAAAvH,GAAA,EAAC0M,GAAsBA,CAAC1L,MAAO,CAAE2L,UAAW,KAAM,WAChD,GAAApF,EAAAvH,GAAA,EAAC4M,GAAAA,CAAaA,CAAAA,CACZ9M,MAAO,SAAC+M,CAAAA,CAAAA,OACN,GAAAtF,EAAA3H,IAAA,EAACuI,GAAYA,WACX,GAAAZ,EAAAvH,GAAA,EAACY,EAAAA,CAAIA,CAAAA,CAACkM,GAAG,MAAMC,KAAI,GAACC,cAAc,YAAYnM,MAAM,aAAaoM,SAAS,gBACvEjO,EAAE,mBAEL,GAAAuI,EAAAvH,GAAA,EAACY,EAAAA,CAAIA,CAAAA,CAACmM,KAAI,GAACC,cAAc,YAAYnM,MAAM,YAAYoM,SAAS,gBAC7DJ,QAIPK,KAAM,SAACC,CAAAA,CAAAA,OAAc,GAAA5F,EAAAvH,GAAA,EAACoI,GAAaA,UAAE+E,KACrCC,QAAS7G,MAtGRgD,EAsGQhD,KAAAA,EAAAA,EAAMU,GAAG,CAClBoG,oBAAqB9G,MAvGpBgD,EAuGoBhD,KAAAA,EAAAA,EAAM8G,mBAAmB,CAC9CC,kBACEhG,EAAciG,IAAI,CAACpC,GAAc3D,EAAE,CAAC,GAChCF,EAAciG,IAAI,CAACpC,GACnBpE,EAAMO,aAAa,CAACiG,IAAI,CAACxG,EAAMoE,YAAY,CAAC,KAKvDhB,EACC,GAAA5C,EAAAvH,GAAA,EAACwN,GAAAA,EAAoBA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAKtD,GAAAA,CAAWP,cAAeA,EAAec,QAASA,EAASgD,WAAYjE,EAAIrO,KAAK,UACvG,SAACoR,CAAAA,CAAAA,OAAU,GAAAhF,EAAAvH,GAAA,EAAC0N,GAAAA,EAAYA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAKnB,QAGhC,GAAAhF,EAAAvH,GAAA,EAAC2N,GAAAA,EAAeA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EArHXpE,GAqHgBhD,CAAMoD,cAAeA,EAAec,QAASA,EAASgD,WAAYjE,EAAIrO,KAAK,UAC7F,SAACoR,CAAAA,CAAAA,OAAU,GAAAhF,EAAAvH,GAAA,EAAC0N,GAAAA,EAAYA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAKnB,OAEjC,MAIT,+qBCzOA,IAA+D1F,GAAAA,EAAAA,CAAAA,CAAAA,IAAW,CAAlE+G,GAAuD/G,GAAvD+G,cAAAA,CAAgBC,GAAuChH,GAAvCgH,OAAAA,CAASC,GAA8BjH,GAA9BiH,UAAAA,CAAYC,GAAkBlH,GAAlBkH,aAAAA,CACkBlH,GAAAA,EAAAA,CAAAA,CAAAA,SAAgB,CAAvEmH,GAAuDnH,GAAvDmH,UAAAA,CAAYC,GAA2CpH,GAA3CoH,OAAAA,CAAS5F,GAAkCxB,GAAlCwB,UAAAA,CAAYC,GAAsBzB,GAAtByB,SAAAA,CAAW4F,GAAWrH,GAAXqH,MAAAA,CAiB9CC,GAAQ,CACZ3E,IAAKwC,EAAAA,CAAGA,CACRzF,KAAM6H,GACNC,OAAQH,GACR3E,QAAS0E,GACTxE,WAAYpB,GACZqB,UAAWpB,EACb,EAEMgG,GAAYxQ,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,qCAOxB,SAAAE,CAAA,SAAeC,EAAZA,KAAAA,CAAkB+J,YAAY,CAACE,EAAE,GAKlCqG,GAAWzQ,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,UAAS,qCAGK,SAAAE,CAAA,SAAeC,EAAZA,KAAAA,CAAkBC,MAAM,CAACgE,QAAQ,GAI7DsM,GAAmB1Q,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,UAAS,sCAI5B2Q,GAAgB3Q,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,UAAS,sCAKzB4Q,GAAiB5Q,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,UAAS,sCA+LhC6Q,GA3LmF,SAACpC,CAAAA,CAAU,CAC5F,IAsHiBA,EAGAA,EAsBcA,EACNA,EAEVA,EAEiBA,EACTA,EACAA,EACUA,EAvJzBhD,EAA4CgD,EAA5ChD,OAAAA,CAASqF,EAAmCrC,EAAnCqC,eAAAA,CAAiBjF,EAAkB4C,EAAlB5C,aAAAA,CACa4C,EAAAA,EAAMhD,OAAO,CAAC2B,QAAQ,CAA7D5D,EAAuCiF,EAAvCjF,aAAAA,CAAeP,EAAwBwF,EAAxBxF,KAAAA,CAAOoE,EAAiBoB,EAAjBpB,YAAAA,CACxB0D,EAAqBC,CAAAA,EAAAA,EAAAA,MAAAA,EAAO,IAC5BC,EAAkB,CAAC,CAAC1H,CAAAA,EAAAA,EAAAA,EAAAA,EAAYkC,EAAQtC,GAAG,EAAEK,aAAa,CAAC0H,QAAQ,GACnBnQ,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,QAAAA,EAASkQ,GAAAA,GAAxDE,EAA+CpQ,CAAAA,CAAAA,EAAAA,CAA1BqQ,EAA0BrQ,CAAAA,CAAAA,EAAAA,CAChDsQ,EAAoBC,CAAAA,EAAAA,EAAAA,EAAAA,EAAkBH,EAAqB,KAC3DjQ,EAAQC,CAAAA,EAAAA,EAAAA,EAAAA,IAAND,CAAAA,CAEFqQ,EAAoB,UAAM,CAC9BH,EAAuB,CAACD,EAC1B,EAEAK,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,UAAM,CACdJ,EAAuBH,EACzB,EAAG,CAACA,EAAgB,EACpBO,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,UAAM,CACVV,GAAmBC,CAA+B,IAA/BA,EAAmBU,OAAO,GAC/CL,EAAuBN,GACvBC,EAAmBU,OAAO,CAAG,GAEjC,EAAG,CAACX,EAAgB,EAEpB,IAAgCvE,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,IAAxBD,EAAwBC,EAAxBD,SAAAA,CAAWoF,EAAanF,EAAbmF,QAAAA,CAEbC,EAAkB,CAACrF,EACnBsF,EAAcD,EAAkBE,EAAAA,CAAkBA,CAAGC,EAAAA,CAAmB,CACxEC,EAAcH,EAAYrQ,GAAG,CAAC,SAACyQ,CAAAA,CAAAA,QAAWA,EAAOC,IAAI,GAkJ3D,MACE,GAAAxI,EAAA3H,IAAA,EAAA2H,EAAAwE,QAAA,YAhJA,EA+EE,GAAAxE,EAAA3H,IAAA,EAAA2H,EAAAwE,QAAA,YACE,GAAAxE,EAAAvH,GAAA,EAACgQ,KAAAA,CAAGhP,MAAO,CAAEE,OAAQ,SAAU,EAAGe,QAASoN,WACzC,GAAA9H,EAAAvH,GAAA,EAAC0O,GAAAA,CAAeuB,QAAS,WACvB,GAAA1I,EAAA3H,IAAA,EAACwB,EAAAA,CAAIA,CAAAA,CAAC+K,eAAe,gBAAgB9K,WAAW,mBAC9C,GAAAkG,EAAAvH,GAAA,EAACoO,GAAIA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAK7B,EAAMhG,IAAI,GACnBgG,cAAAA,EAAM2D,IAAI,CACT,GAAA3I,EAAAvH,GAAA,EAAC4N,GAAAA,CAAeuC,YAAY,OAAOhQ,MAAM,OAEzC,GAAAoH,EAAA3H,IAAA,EAACwB,EAAAA,CAAIA,CAAAA,CAAC0L,GAAG,iBACP,GAAAvF,EAAAvH,GAAA,EAAC6N,GAAAA,CAAQ1N,MAAM,OACdoM,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,IAAc,GAAdA,CAAAA,EAAAA,EAAOhD,OAAO,GAAdgD,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAgBpF,QAAF,EACb,GAAAI,EAAAvH,GAAA,EAAC+N,GAAAA,CAAc/M,MAAO,CAAEoP,WAAY,OAAQC,cAAe,QAAS,EAAGlQ,MAAM,KAAK0B,GAAG,QACnF,IAAI,CACP0K,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,IAAc,GAAdA,CAAAA,EAAAA,EAAOhD,OAAO,GAAdgD,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAgBL,OAAF,EACb,GAAA3E,EAAAvH,GAAA,EAAC8N,GAAAA,CAAW9M,MAAO,CAAEoP,WAAY,OAAQC,cAAe,QAAS,EAAGlQ,MAAM,KAAK0B,GAAG,QAChF,IAAI,GAEX,QAIP,GAAA0F,EAAA3H,IAAA,EAAC2O,GAAAA,CAAStM,QAASoN,YACjB,GAAA9H,EAAAvH,GAAA,EAACsQ,KAAAA,CAAGtO,MAAM,eACR,GAAAuF,EAAAvH,GAAA,EAACwO,GAAAA,UACC,GAAAjH,EAAAvH,GAAA,EAACgO,GAAAA,CAAWlN,MAAO9B,EAAE,mBACnB,GAAAuI,EAAAvH,GAAA,EAACkO,GAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAW3B,EAAM8B,MAAM,GAAE1E,cAAeA,WAI/C,GAAApC,EAAAvH,GAAA,EAACsQ,KAAAA,CAAGtO,MAAM,eACR,GAAAuF,EAAAvH,GAAA,EAACyO,GAAAA,UACC,GAAAlH,EAAA3H,IAAA,EAACoO,GAAAA,CAAWlN,MAAO9B,EAAE,iBACnB,GAAAuI,EAAAvH,GAAA,EAACgM,EAAAA,CAAGA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EACEO,EAAM/C,GAAG,GACb+G,WAAU,GACVC,cAAejE,MAAAA,EAAAA,KAAAA,EAAAA,IAAc,GAAdA,CAAAA,EAAAA,EAAOhD,OAAO,GAAdgD,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAgBL,OAAF,CAC7BA,QAASK,MAAAA,EAAAA,KAAAA,EAAAA,IAAc,GAAdA,CAAAA,EAAAA,EAAOhD,OAAO,GAAdgD,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAgBL,OAAF,IAExBK,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,IAAc,GAAdA,CAAAA,EAAAA,EAAOhD,OAAO,GAAdgD,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAgBL,OAAF,GAAavC,EAC1B,GAAApC,EAAAvH,GAAA,EAACyQ,GAAAA,CAAUA,CAAAA,CACTC,aAAcnE,MAAAA,EAAAA,KAAAA,EAAAA,IAAU,GAAVA,CAAAA,EAAAA,EAAO/C,GAAG,GAAV+C,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAYmE,YAAF,CACxBlH,IAAK+C,MAAAA,EAAAA,KAAAA,EAAAA,IAAU,GAAVA,CAAAA,EAAAA,EAAO/C,GAAG,GAAV+C,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAYoE,aAAF,CACf1J,IAAKsF,IAAU,GAAVA,CAAAA,EAAAA,EAAMhG,IAAI,GAAVgG,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAYtF,GAAG,CACpB2J,cAAerE,IAAa,GAAbA,CAAAA,EAAAA,EAAMhD,OAAO,GAAbgD,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAeqE,aAAa,CAC3CtD,kBACEhG,EAAciG,IAAI,CAACpC,GAAc3D,EAAE,CAAC,GAChCF,EAAciG,IAAI,CAACpC,GACnBpE,EAAMO,aAAa,CAACiG,IAAI,CAACxG,EAAMoE,YAAY,CAAC,GAGlD,IAAI,QAId,GAAA5D,EAAAvH,GAAA,EAACsQ,KAAAA,CAAGtO,MAAM,eACR,GAAAuF,EAAAvH,GAAA,EAACsO,GAAAA,CAAUtN,MAAO,CAAEmL,eAAgB,UAAW,WAC7C,GAAA5E,EAAAvH,GAAA,EAACiO,GAAAA,CAAQ4C,mBAAoB5B,cArInC,GAAA1H,EAAAvH,GAAA,EAACuO,GAAAA,CAAStM,QAASoN,WAChByB,OAAOC,IAAI,CAACxE,GAAOlN,GAAG,CAAC,SAACE,CAAAA,CAAQ,CAC/B,IAYagN,EACAA,EAyBgBA,EACNA,EAEVA,EAEiBA,EACTA,EACAA,EACUA,EA9CzByE,EAAcnB,EAAYoB,OAAO,CAAC1R,GACxC,GAAIyR,KAAAA,EACF,OAAO,IAAI,CAGb,OAAQzR,GACN,IAAK,OACH,MACE,GAAAgI,EAAAvH,GAAA,EAACsQ,KAAAA,UACE3G,EACC,GAAApC,EAAA3H,IAAA,EAAC0O,GAAAA,CAAUtN,MAAO,CAAEgB,MAAO,OAAQ,YAChCuK,cAAAA,CAAK,CAAChN,EAAI,CAAmB,GAAAgI,EAAAvH,GAAA,EAAC4N,GAAAA,CAAezN,MAAM,OAAU,GAAAoH,EAAAvH,GAAA,EAAC6N,GAAAA,CAAQ1N,MAAM,MAAO,CACnFoM,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,IAAc,GAAdA,CAAAA,EAAAA,EAAOhD,OAAO,GAAdgD,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAgBpF,QAAF,EAAa,GAAAI,EAAAvH,GAAA,EAAC+N,GAAAA,CAAc5N,MAAM,KAAK0B,GAAG,QAAW,IAAI,CACvE0K,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,IAAc,GAAdA,CAAAA,EAAAA,EAAOhD,OAAO,GAAdgD,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAgBL,OAAF,EAAY,GAAA3E,EAAAvH,GAAA,EAAC8N,GAAAA,CAAW3N,MAAM,KAAK0B,GAAG,QAAW,IAAI,IAGtE,GAAA0F,EAAAvH,GAAA,EAACkR,EAAAA,CAAQA,CAAAA,CAAClP,MAAO,GAAI0F,OAAQ,IAC9B,EATMnI,EAYb,KAAK,UACH,MACE,GAAAgI,EAAAvH,GAAA,EAACsQ,KAAAA,UACC,GAAA/I,EAAAvH,GAAA,EAACsO,GAAAA,UACC,GAAA/G,EAAAvH,GAAA,EAACgO,GAAAA,UACC,GAAAzG,EAAAvH,GAAA,EAACiO,GAAAA,CAAQ4C,mBAAoB5B,SAH1B1P,EAQb,KAAK,MACH,MACE,GAAAgI,EAAAvH,GAAA,EAACsQ,KAAAA,UACC,GAAA/I,EAAAvH,GAAA,EAACsO,GAAAA,UACC,GAAA/G,EAAA3H,IAAA,EAACoO,GAAAA,CAAWlN,MAAO9B,EAAE,iBACnB,GAAAuI,EAAAvH,GAAA,EAACgM,EAAAA,CAAGA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EACEO,EAAM/C,GAAG,GACb+G,WAAYd,EACZe,cAAejE,MAAAA,EAAAA,KAAAA,EAAAA,IAAc,GAAdA,CAAAA,EAAAA,EAAOhD,OAAO,GAAdgD,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAgBL,OAAF,CAC7BA,QAASK,MAAAA,EAAAA,KAAAA,EAAAA,IAAc,GAAdA,CAAAA,EAAAA,EAAOhD,OAAO,GAAdgD,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAgBL,OAAF,IAExBK,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,IAAc,GAAdA,CAAAA,EAAAA,EAAOhD,OAAO,GAAdgD,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAgBL,OAAF,GAAavC,EAC1B,GAAApC,EAAAvH,GAAA,EAACyQ,GAAAA,CAAUA,CAAAA,CACTC,aAAcnE,MAAAA,EAAAA,KAAAA,EAAAA,IAAU,GAAVA,CAAAA,EAAAA,EAAO/C,GAAG,GAAV+C,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAYmE,YAAF,CACxBlH,IAAK+C,MAAAA,EAAAA,KAAAA,EAAAA,IAAU,GAAVA,CAAAA,EAAAA,EAAO/C,GAAG,GAAV+C,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAYoE,aAAF,CACf1J,IAAKsF,IAAU,GAAVA,CAAAA,EAAAA,EAAMhG,IAAI,GAAVgG,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAYtF,GAAG,CACpB2J,cAAerE,IAAa,GAAbA,CAAAA,EAAAA,EAAMhD,OAAO,GAAbgD,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAeqE,aAAa,CAC3CtD,kBACEhG,EAAciG,IAAI,CAACpC,GAAc3D,EAAE,CAAC,GAChCF,EAAciG,IAAI,CAACpC,GACnBpE,EAAMO,aAAa,CAACiG,IAAI,CAACxG,EAAMoE,YAAY,CAAC,GAGlD,IAAI,OArBL5L,EA0Bb,SACE,MACE,GAAAgI,EAAAvH,GAAA,EAACsQ,KAAAA,UACC,GAAA/I,EAAAvH,GAAA,EAACsO,GAAAA,UACC,GAAA/G,EAAAvH,GAAA,EAACgO,GAAAA,CAAWlN,MAAO9B,EAAE0Q,CAAW,CAACsB,EAAY,CAAClQ,KAAK,WAChDqQ,CAAAA,EAAAA,EAAAA,aAAAA,EAAchD,EAAK,CAAC5O,EAAI,CAAE,GAAA6R,EAAAzV,CAAA,KAAA0V,EAAA1V,CAAA,KAAK4Q,CAAK,CAAChN,EAAI,GAAEoK,cAAAA,UAHzCpK,EAQf,CACF,IAGL,CAsEE4P,GACC,GAAA5H,EAAAvH,GAAA,EAACgQ,KAAAA,UACC,GAAAzI,EAAAvH,GAAA,EAACsQ,KAAAA,CAAGL,QAAS,WACX,GAAA1I,EAAAvH,GAAA,EAACsR,GAAWA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAK/E,GAAAA,CAAO5D,SAAUsG,EAAqBrF,kBAAmB4F,WAMtF,67BCvPA,IAAM9G,GAAY5K,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,qCAEZ,SAAAE,CAAA,SAAeC,EAAZA,KAAAA,CAAkBsT,IAAI,CAACnB,UAAU,EAG9B,SAAApS,CAAA,SAAeC,EAAZA,KAAAA,CAAkBC,MAAM,CAACsT,UAAU,GAGtDC,GAAe3T,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,sCASzB4T,GAAc5T,EAAAA,EAAAA,CAAAA,KAAAA,CAAAA,UAAY,sCAQ1B6T,GAAY7T,EAAAA,EAAAA,CAAAA,KAAAA,CAAAA,UAAY,sCAiBxB8T,GAAiB9T,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,sCA4IjC+T,GAxIkE,SAAA7T,CAAA,CAAyC,KAAtC+H,EAAAA,EAAAA,KAAAA,CAAO+L,EAAAA,EAAAA,SAAAA,CAAWnI,EAAAA,EAAAA,aAAAA,CAC/EoI,EAAiBjD,CAAAA,EAAAA,EAAAA,MAAAA,EAAuB,IAAI,EAC5C9I,EAAYgM,CAAAA,EAAAA,EAAAA,SAAAA,IAAVhM,KAAAA,CAEFiM,EAAU5G,CAAAA,EAAAA,EAAAA,OAAAA,EACd,kBACEuE,EAAAA,CAAAA,CAAAA,GAAuB,CAAC,SAACE,CAAAA,CAAAA,OAAY,CACnCzR,GAAIyR,EAAOzR,EAAE,CACb0R,KAAMD,EAAOC,IAAI,CACjBjP,MAAOgP,EAAOhP,KAAK,CACnBoR,KAAM,SAACC,CAAAA,CAAsBC,CAAAA,CAAyB,CACpD,OAAQtC,EAAOC,IAAI,EACjB,IAAK,OACH,OAAOqC,EAAE/T,EAAE,CAAG8T,EAAE9T,EAAE,KACf,MACH,GAAI8T,EAAEE,QAAQ,CAAC7I,GAAG,CAACrO,KAAK,EAAIiX,EAAEC,QAAQ,CAAC7I,GAAG,CAACrO,KAAK,CAC9C,OAAOmX,OAAOH,EAAEE,QAAQ,CAAC7I,GAAG,CAACrO,KAAK,EAAImX,OAAOF,EAAEC,QAAQ,CAAC7I,GAAG,CAACrO,KAAK,CAClE,CAED,OAAO,CACT,KAAK,SACH,OAAOgX,EAAEE,QAAQ,CAAChE,MAAM,CAACkE,QAAQ,CAAGH,EAAEC,QAAQ,CAAChE,MAAM,CAACkE,QAAQ,SAE9D,OAAO,CACX,CACF,EACAC,SAAU1C,EAAO0C,QAAQ,KAE7B,EAAE,EAGEC,EAAkB,SAAClM,CAAAA,CAAS,CAChC,IAAIgM,EAAWG,EAAAA,EAAQA,CACjBC,EAAmB,GAAIC,CAAAA,GAAAA,EAAUrM,EAAK2E,QAAQ,CAACqH,QAAQ,EAE7D,GAAIhM,EAAK2F,OAAO,CAAE,CAChB,IAAoC3F,EAAAA,EAA9BsM,EAAgB,GAAID,CAAAA,GAAAA,EAAUrM,IAAa,GAAbA,CAAAA,EAAAA,EAAK2E,QAAQ,GAAb3E,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,IAAeQ,GAAfR,CAAAA,EAAAA,EAAeQ,KAAAA,GAAAA,KAAAA,IAAAA,EAAfR,KAAAA,EAAAA,EAAsBgM,QAAF,EAExDA,EAAWM,EAAcrL,EAAE,CAAC,GAAKqL,EAAgBF,CAAgB,MAEjEJ,EAAWI,CACZ,CAED,MAAOG,CAAAA,EAAAA,EAAAA,EAAAA,EAAiBP,EAC1B,EAEMQ,EAAc,SAACxM,CAAAA,CAAS,CAC5B,IAAQ/I,EAAsB+I,EAAtB/I,KAAAA,CAAOwJ,EAAeT,EAAfS,UAAAA,CACT8D,EAAetN,EAAMqN,OAAO,CAC5BD,EAAoB5D,EAAW6D,OAAO,CACtCJ,EAAUlE,EAAKE,QAAQ,EAAIF,EAAKE,QAAQ,CAAChJ,OAAO,CAAC,YAAa,IAC9DuV,EAAiB9M,CAAAA,EAAAA,EAAAA,CAAAA,EAAS,gBAAOF,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAOiN,MAAM,EAAgBjN,EAAMiN,MAAM,CAAC9M,WAAW,GAAK,EAAE,EAC7FyI,EAAkB1I,CAAAA,EAAAA,EAAAA,CAAAA,EAASuE,MAAAA,EAAAA,KAAAA,EAAAA,EAAStE,WAAW,MAAQ6M,EAyC7D,MAxCsB,CACpBxJ,IAAK,CACHrO,MAAO+X,CAAAA,EAAAA,EAAAA,CAAAA,EAAc3M,EAAKiD,GAAG,CAAEjD,EAAKmK,YAAY,EAChDzJ,IAAKV,EAAKU,GAAG,CACbwC,WAAYlD,EAAKkD,UAAU,CAC3BgB,QAAAA,EACAhE,SAAUF,EAAKE,QAAQ,CACvB0M,aAAc5M,EAAK4M,YAAY,CAC/BrI,aAAAA,EACAF,kBAAAA,EACAkH,UAAAA,EACApB,aAAcnK,EAAKmK,YAAY,CAC/BC,cAAepK,EAAKiD,GAAG,CACvBgB,kBAAmBjE,EAAKiE,iBAAiB,CACzC4I,YAAa7M,EAAK6M,WAAW,EAE/B7M,KAAM,CACJzF,MAAO2J,EACPxD,IAAKV,EAAKU,GAAG,CACbzJ,MAAO+I,EAAK/I,KAAK,CACjBwJ,WAAYT,EAAKS,UAAU,CAC3BE,QAASX,KAAoB8M,IAApB9M,EAAKkD,UAAU,CACxBtC,SAAUZ,EAAKY,QAAQ,CACvBC,UAAWb,EAAK2F,OAAO,EAEzBmC,OAAQ,CACNkE,SAAUE,EAAgBlM,GAC1BU,IAAKV,EAAKU,GAAG,EAEfyC,UAAW,CACTA,UAAWnD,MAAAA,EAAAA,KAAAA,EAAAA,EAAMmD,SAAS,EAE5BD,WAAY,CACVA,WAAYlD,EAAKkD,UAAU,EAE7ByG,KAAM3J,EAAKgF,WAAW,CAAG,YAAc,MAAM,CAC7ChC,QAAShD,EACTqI,gBAAAA,CACF,CAGF,EAiBM0E,EAAaC,EAfGlU,GAAG,CAAC,SAACkH,CAAAA,CAAAA,QAASwM,EAAYxM,KAerBlH,GAAG,CAbJ,SAACmU,CAAAA,CAAQ,CAEjC,IAAMC,EAAmB,CAAC,EAQ1B,OAPAxB,EAAQyB,OAAO,CAAC,SAAC5D,CAAAA,CAAW,CAC1B,GAAI,CAAEA,CAAAA,EAAOC,IAAI,IAAIyD,CAAAA,EACnB,MAAM,MAAU,qBAAiClX,MAAA,CAAZwT,EAAOC,IAAI,CAAC,cAAY,CAE/D0D,CAAM,CAAC3D,EAAOC,IAAI,CAAC,CAAGyD,CAAG,CAAC1D,EAAOC,IAAI,CAAC,GAExC0D,EAAO7E,eAAe,CAAG4E,EAAI5E,eAAe,CACrC6E,CACT,GAIA,MACE,GAAAlM,EAAAvH,GAAA,EAAC0I,GAASA,CAACrK,GAAG,uBACZ,GAAAkJ,EAAAvH,GAAA,EAAC4R,GAAAA,CAAevT,GAAG,2BACjB,GAAAkJ,EAAAvH,GAAA,EAACyR,GAAAA,CAAakC,IAAK5B,WACjB,GAAAxK,EAAAvH,GAAA,EAAC0R,GAAAA,UACC,GAAAnK,EAAAvH,GAAA,EAAC2R,GAAAA,UACE2B,EAAWjU,GAAG,CAAC,SAACmU,CAAAA,CAAQ,KAChBA,EAAP,MAAOA,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,IAAY,GAAZA,CAAAA,EAAAA,EAAKjK,OAAO,GAAZiK,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAActH,OAAF,EACjB,GAAA3E,EAAAvH,GAAA,EAAC4T,GAAAA,CAAkBA,CAAAA,CAAmCrN,KAAMiN,EAAIjK,OAAO,UACrE,GAAAhC,EAAAvH,GAAA,EAAC6T,GAAGA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAKL,GAAAA,CAAK7J,cAAeA,MADN,aAA0BrN,MAAA,CAAbkX,EAAIjN,IAAI,CAACU,GAAG,GAIlD,GAAA6M,EAAA3C,aAAA,EAAC0C,GAAGA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAKL,GAAAA,CAAK7J,cAAeA,EAAepK,IAAK,aAA0BjD,MAAA,CAAbkX,EAAIjN,IAAI,CAACU,GAAG,IAC3E,YAQjB,ucC3LO,IAAM8M,GAAmBjW,CAAAA,EAAAA,EAAAA,EAAAA,EAAOsD,EAAAA,CAAIA,EAAAA,UAAAA,CAAAA,oCAC3B,SAAApD,CAAA,SAAeC,EAAZA,KAAAA,CAAkBC,MAAM,CAAC2K,QAAQ,GAIvCmL,GAAgBlW,CAAAA,EAAAA,EAAAA,EAAAA,EAAOsD,EAAAA,CAAIA,EAAAA,UAAAA,CAAAA,qCAKlC6S,GAAgBnW,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,qCAK5B8C,EAAAA,CAAIA,EAKKsT,GAAkD,SAAAlW,CAAA,CAOzD,KANJmW,EAAAA,EAAAA,WAAAA,CACAC,EAAAA,EAAAA,oBAAAA,CACAC,EAAAA,EAAAA,cAAAA,CACAC,EAAAA,EAAAA,uBAAAA,CACAC,EAAAA,EAAAA,oBAAAA,CACAC,EAAAA,EAAAA,6BAAAA,CAEMxV,EAAQC,CAAAA,EAAAA,EAAAA,EAAAA,IAAND,CAAAA,CAEoBH,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IAAK,GAAnC4V,EAAqB5V,CAAAA,CAAAA,EAAAA,CAAb6V,EAAa7V,CAAAA,CAAAA,EAAAA,CACtB8V,EAAa7F,CAAAA,EAAAA,EAAAA,MAAAA,EAAO,IAAI,EACxB8F,EAAU9F,CAAAA,EAAAA,EAAAA,MAAAA,EAAO,IAAI,EAsB3B,MAnBAQ,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,UAAM,CACd,IAAMuF,EAAqB,SAAA7W,CAAA,CAAuB,KAApB8W,EAAAA,EAAAA,MAAAA,CAE1BH,EAAWpF,OAAO,EAClBqF,EAAQrF,OAAO,EACf,CAACqF,EAAQrF,OAAO,CAACwF,QAAQ,CAACD,IAC1B,CAACH,EAAWpF,OAAO,CAACwF,QAAQ,CAACD,IAE7BJ,EAAU,GAEd,EAIA,OAFAM,SAASC,gBAAgB,CAAC,QAASJ,GAE5B,UAAM,CACXG,SAASE,mBAAmB,CAAC,QAASL,EACxC,CACF,EAAG,CAACH,EAAWC,EAAYC,EAAQ,EAGjC,GAAArN,EAAAvH,GAAA,EAAAuH,EAAAwE,QAAA,WACE,GAAAxE,EAAAvH,GAAA,EAACoB,EAAAA,CAAIA,CAAAA,CAACC,WAAW,SAASyL,GAAG,MAAMnM,GAAG,eACpC,GAAA4G,EAAAvH,GAAA,EAACO,EAAAA,EAAGA,CAAAA,CAACoT,IAAKgB,WACR,GAAApN,EAAAvH,GAAA,EAACmV,GAAAA,CAAUA,CAAAA,CACTC,UACE,GAAA7N,EAAA3H,IAAA,EAACmC,EAAAA,CAAMA,CAAAA,CAACE,QA3BI,kBAAMyS,EAAU,CAACD,IA2BK9M,QAAQ,QAAQxH,MAAM,eACrDnB,EAAE,cACFuV,EAAuB,GAAK,IAAyBjY,MAAA,CAArBiY,EAAqB,QAG1DE,OAAQA,EACRhZ,QAAS,CAAE4Z,UAAW,KAAM,WAE5B,GAAA9N,EAAA3H,IAAA,EAACW,EAAAA,EAAGA,CAAAA,CAACyB,MAAO,CAAC,OAAQ,QAAQ,CAAE2R,IAAKiB,YAClC,GAAArN,EAAAvH,GAAA,EAAC+T,GAAAA,CAAiB1S,WAAW,SAAShB,EAAE,gBACtC,GAAAkH,EAAAvH,GAAA,EAACY,EAAAA,CAAIA,CAAAA,CAACqM,SAAU,GAAIF,KAAI,GAAClM,MAAM,OAAOI,QAAQ,eAAeY,GAAG,eAC7D7C,EAAE,kBAGP,GAAAuI,EAAA3H,IAAA,EAACW,EAAAA,EAAGA,CAAAA,CAACmH,OAAO,QAAQjH,UAAU,iBAC5B,GAAA8G,EAAA3H,IAAA,EAACoU,GAAAA,CAAc3S,WAAW,SAASiU,GAAG,OAAOC,GAAG,MAAM1T,GAAG,MAAM2T,GAAG,gBAChE,GAAAjO,EAAAvH,GAAA,EAACyV,GAAAA,CAAUA,CAAAA,CAAAA,GACX,GAAAlO,EAAAvH,GAAA,EAACY,EAAAA,CAAIA,CAAAA,CAACqM,SAAU,GAAIpL,GAAG,OAAOb,MAAO,CAAEO,KAAM,CAAE,EAAGwL,KAAI,YACnD/N,EAAE,uBAEL,GAAAuI,EAAAvH,GAAA,EAACiU,GAAAA,UACC,GAAA1M,EAAAvH,GAAA,EAAC0V,EAAAA,CAAMA,CAAAA,CACLrX,GAAG,qBACHsD,QAASwS,EACTvS,SAAU,UAAM,CAEd4S,EAD8BD,EAAwB,GAAmB,GAAJ,CAAM,GAG3EH,EAAqB,CAACD,EACxB,EACAhU,MAAM,YAIZ,GAAAoH,EAAA3H,IAAA,EAACoU,GAAAA,CAAc3S,WAAW,SAASiU,GAAG,OAAOC,GAAG,MAAM1T,GAAG,MAAM2T,GAAG,gBAChE,GAAAjO,EAAAvH,GAAA,EAAC2V,GAAAA,CAAYA,CAAAA,CAAAA,GACb,GAAApO,EAAAvH,GAAA,EAACY,EAAAA,CAAIA,CAAAA,CAACqM,SAAU,GAAIpL,GAAG,OAAOb,MAAO,CAAEO,KAAM,CAAE,EAAGwL,KAAI,YACnD/N,EAAE,gBAEL,GAAAuI,EAAAvH,GAAA,EAACiU,GAAAA,UACC,GAAA1M,EAAAvH,GAAA,EAAC0V,EAAAA,CAAMA,CAAAA,CACLrX,GAAG,wBACHsD,QAAS0S,EACTzS,SAAU,UAAM,CAEd4S,EAD8BD,EAAwB,GAAsB,GAAJ,CAAM,GAG9ED,EAAwB,CAACD,EAC3B,EACAlU,MAAM,yBAW5B,kDCxFAyV,GAvCkC,UAAM,CACtC,IAAoD/W,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,QAAAA,EAOjD,IAAI,KAPAgX,EAA6ChX,CAAAA,CAAAA,EAAAA,CAAzBiX,EAAyBjX,CAAAA,CAAAA,EAAAA,CAS7CkX,EAA+BC,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,GAAAA,CAAAA,EACpCH,EACE,GAAAtO,EAAAvH,GAAA,EAACiW,GAAAA,CAAsBA,CAAAA,CACrBhP,IAAK4O,EAAmB5O,GAAG,CAC3BzJ,MAAOqY,EAAmBrY,KAAK,CAC/BiJ,SAAUoP,EAAmBpP,QAAQ,CACrCO,WAAY6O,EAAmB7O,UAAU,CACzCkP,kBAAmB,GAAItD,CAAAA,GAAAA,EAAUiD,EAAmBK,iBAAiB,EACrEC,aAAcN,EAAmBM,YAAY,GAE7C,IAAI,IAV4BH,CAAAA,EAAAA,CAatC1G,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,UAAM,CACVuG,GACFE,GAGJ,EAAG,CAACF,EAAmB,EAEvBvG,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,UAAM,CACd,IAAM8G,EAAqBC,GAAAA,CAAAA,CAAAA,GAAU,CAAC,0BAClCD,IACFN,EAAsBQ,KAAKC,KAAK,CAACH,IACjCC,GAAAA,CAAAA,CAAAA,MAAa,CAAC,0BAElB,EAAG,EAAE,CACP,8hECDA,IAAMG,GAAmB1Y,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,qCAU/B,SAAAE,CAAA,SAAeC,EAAZA,KAAAA,CAAkB+J,YAAY,CAACC,EAAE,GAOlCwO,GAAkB3Y,CAAAA,EAAAA,EAAAA,EAAAA,EAAOsD,EAAAA,CAAIA,EAAAA,UAAAA,CAAAA,oCAE/B,SAAApD,CAAA,SAAeC,EAAZA,KAAAA,CAAkB+J,YAAY,CAAC0O,EAAE,GAIlCC,GAAS7Y,CAAAA,EAAAA,EAAAA,EAAAA,EAAOoC,EAAAA,CAAOA,EAAAA,UAAAA,CAAAA,oCAGzB,SAAAlC,CAAA,SAAeC,EAAZA,KAAAA,CAAkB+J,YAAY,CAACC,EAAE,GAKlC2O,GAAS9Y,CAAAA,EAAAA,EAAAA,EAAAA,EAAOoC,EAAAA,CAAOA,EAAAA,UAAAA,CAAAA,oCAGzB,SAAAlC,CAAA,SAAeC,EAAZA,KAAAA,CAAkB+J,YAAY,CAACC,EAAE,GAMlCgM,GAAgBnW,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,qCAK5B8C,EAAAA,CAAIA,EAKFiW,GAAe/Y,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,qCACzB8C,EAAAA,CAAIA,EAKJkW,GAAkBhZ,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,qCAM9B,SAAAE,CAAA,SAAeC,EAAZA,KAAAA,CAAkB+J,YAAY,CAACC,EAAE,GAMlC8O,GAAejZ,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,qCAW3B,SAAAE,CAAA,SAAeC,EAAZA,KAAAA,CAAkB+J,YAAY,CAACC,EAAE,GAUlC+O,GAAclZ,CAAAA,EAAAA,EAAAA,EAAAA,EAAOmZ,EAAAA,CAAKA,EAAAA,UAAAA,CAAAA,qCAM1BC,GAAwBpZ,CAAAA,EAAAA,EAAAA,EAAAA,EAAOsD,EAAAA,CAAIA,EAAAA,UAAAA,CAAAA,oCAGrC,SAAApD,CAAA,SAAeC,EAAZA,KAAAA,CAAkB+J,YAAY,CAAC0O,EAAE,GAKlCS,GAAmBrZ,CAAAA,EAAAA,EAAAA,EAAAA,EAAOsZ,EAAAA,CAAIA,EAAAA,UAAAA,CAAAA,sCAyVpCC,GAjViD,SAAArZ,CAAA,CAAkB,KAAfsZ,EAAAA,EAAAA,QAAAA,CACZtF,EAAAA,CAAAA,EAAAA,EAAAA,SAAAA,IAA9BuF,EAA8BvF,EAA9BuF,QAAAA,CAAUvR,EAAoBgM,EAApBhM,KAAAA,CACZhH,EAAQC,CAAAA,EAAAA,EAAAA,EAAAA,IAAND,CAAAA,CACF8K,EAAcC,CAAAA,EAAAA,EAAAA,CAAAA,IAAZD,OAAAA,CACmE0N,EAAAA,CAAAA,EAAAA,EAAAA,EAAAA,IAAnEC,EAAmED,EAAnEC,IAAAA,CAAeC,EAAoDF,EAApDE,cAAAA,CAAgBC,EAAoCH,EAApCG,UAAAA,CAAYC,EAAwBJ,EAAxBI,mBAAAA,CAC7C9F,EAAY+F,CAAAA,EAAAA,EAAAA,EAAAA,IAEShZ,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,OAA7BiZ,EAAoBjZ,CAAAA,CAAAA,EAAAA,CAAZkZ,EAAYlZ,CAAAA,CAAAA,EAAAA,CACrBmZ,EAAsB3M,CAAAA,EAAAA,EAAAA,OAAAA,EAAQ,WAAO,sBAAO4M,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAUhF,MAAM,EAAgBgF,EAAShF,MAAM,CAAG,EAAE,EAAG,CAACgF,EAAS,EAC7GjS,EAAQgS,GAAuB,CAACF,EAASE,EAAsBF,CAAM,CAE3CI,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,EAAAA,IAAoBA,GAA7CC,EAAyBD,CAAAA,CAAAA,EAAAA,CAAfE,GAAeF,CAAAA,CAAAA,EAAAA,CACxBrN,GAAqBwN,CAAAA,EAAAA,EAAAA,EAAAA,IAArBxN,OAAAA,CAC4BhM,GAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,UAAtCyZ,GAA6BzZ,EAAAA,CAAAA,EAAAA,CAAjB0Z,GAAiB1Z,EAAAA,CAAAA,EAAAA,CACI2Z,GAAAA,CAAAA,EAAAA,EAAAA,EAAAA,IAAhCC,GAAgCD,GAAhCC,WAAAA,CAAaC,GAAmBF,GAAnBE,cAAAA,CACfC,GAAoB7J,CAAAA,EAAAA,EAAAA,MAAAA,EAAO,GAE3B8J,GAAarB,EAASxS,QAAQ,CAAC,YAC/B8T,GAAatB,EAASxS,QAAQ,CAAC,WAC/BwF,GAAW,CAACsO,IAAc,CAACD,GAEjCE,CAAAA,EAAAA,EAAAA,EAAAA,IAEAC,CAAAA,EAAAA,EAAAA,EAAAA,IAEAC,KAMA,IAAoCC,GAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,EAAAA,EAAsB1O,IAAAA,GAAnD2O,GAA6BD,EAAAA,CAAAA,EAAAA,CAAjBE,GAAiBF,EAAAA,CAAAA,EAAAA,CACEpa,GAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IAAK,GAA7CsV,GAA+BtV,EAAAA,CAAAA,EAAAA,CAAlBua,GAAkBva,EAAAA,CAAAA,EAAAA,CACMA,GAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IAAK,GAAnDwV,GAAqCxV,EAAAA,CAAAA,EAAAA,CAArBwa,GAAqBxa,EAAAA,CAAAA,EAAAA,CACYA,GAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,MAA1D0V,GAAiD1V,EAAAA,CAAAA,EAAAA,CAA3Bya,GAA2Bza,EAAAA,CAAAA,EAAAA,CAGlD0a,GAAcC,EAAQlT,MAAM,CAChC,SAACC,CAAAA,CAAAA,OACCA,+CAAAA,EAAKwE,SAAS,EACdxE,+CAAAA,EAAKwE,SAAS,EACdxE,IAAAA,EAAKU,GAAG,EACRV,OAAAA,EAAKkD,UAAU,EACd,EAACkO,GAAcA,EAAapR,EAAKU,GAAG,IAGnCwS,GAAgBD,EAAQlT,MAAM,CAClC,SAACC,CAAAA,CAAAA,OACCA,+CAAAA,EAAKwE,SAAS,EACdxE,+CAAAA,EAAKwE,SAAS,EACbxE,IAAAA,EAAKU,GAAG,EAAUV,OAAAA,EAAKkD,UAAU,GAIhCiQ,GAAkBH,GAAYjT,MAAM,CACxC,SAACC,CAAAA,CAAAA,KAGiBA,EAFhBA,OAAAA,EAAK2E,QAAQ,EACZ,IAAI0H,CAAAA,GAAAA,EAAUrM,EAAK2E,QAAQ,CAAC5D,aAAa,EAAEqS,aAAa,CAAC,IACxD,GAAI/G,CAAAA,GAAAA,EAAUrM,IAAmB,GAAnBA,CAAAA,EAAAA,EAAK2E,QAAQ,CAACnE,KAAK,GAAnBR,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAqBe,aAAa,EAAEqS,aAAa,CAAC,MAGhEC,GAAsBH,GAAcnT,MAAM,CAC9C,SAACC,CAAAA,CAAAA,KAGiBA,EAFhBA,OAAAA,EAAK2E,QAAQ,EACZ,IAAI0H,CAAAA,GAAAA,EAAUrM,EAAK2E,QAAQ,CAAC5D,aAAa,EAAEqS,aAAa,CAAC,IACxD,GAAI/G,CAAAA,GAAAA,EAAUrM,IAAmB,GAAnBA,CAAAA,EAAAA,EAAK2E,QAAQ,CAACnE,KAAK,GAAnBR,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAqBe,aAAa,EAAEqS,aAAa,CAAC,MAGhEE,GAAsBC,EAAcxT,MAAM,CAC9C,SAACC,CAAAA,CAAAA,KAGiBA,EAFhBA,OAAAA,EAAK2E,QAAQ,EACZ,IAAI0H,CAAAA,GAAAA,EAAUrM,EAAK2E,QAAQ,CAAC5D,aAAa,EAAEqS,aAAa,CAAC,IACxD,GAAI/G,CAAAA,GAAAA,EAAUrM,IAAmB,GAAnBA,CAAAA,EAAAA,EAAK2E,QAAQ,CAACnE,KAAK,GAAnBR,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAqBe,aAAa,EAAEqS,aAAa,CAAC,MAGhEI,GAAY5a,CAAAA,EAAAA,EAAAA,WAAAA,EAChB,SAAC6a,CAAAA,CAA8D,CAqB7D,OAAOlU,EApB8CkU,EAAe3a,GAAG,CAAC,SAACkH,CAAAA,CAAS,CAChF,GAAI,CAACA,EAAK0T,mBAAmB,EAAI,CAAC1T,EAAK2T,mBAAmB,CACxD,OAAO3T,CACR,CAED,IAAM4T,EAAiB,GAAIvH,CAAAA,GAAAA,EAAUrM,EAAK0T,mBAAmB,EAAEG,KAAK,CAAC7T,EAAK2T,mBAAmB,EACpD3P,EAAAA,GACrC8P,CAAAA,EAAAA,EAAAA,EAAAA,EACEvQ,EACA,GAAI8I,CAAAA,GAAAA,EAAUrM,EAAK+T,UAAU,EAC7BxI,EACAqI,EACA5T,EAAKwE,SAAS,CACd6M,GAEF,CAAE2C,eAAgB,EAAG7J,aAAc,CAAE,CAAC,CATlC6J,EAAiChQ,EAAjCgQ,cAAAA,CAAgB7J,EAAiBnG,EAAjBmG,YAAAA,CAWxB,MAAO,GAAAU,EAAAzV,CAAA,KAAA0V,EAAA1V,CAAA,KAAK4K,GAAAA,CAAMiD,IAAK+Q,EAAgB7J,aAAAA,EAAchH,UAAWyQ,GAClE,GAEiDnU,EACnD,EACA,CAACA,EAAOuE,GAAUT,EAASgI,EAAW8F,EAAoB,EAOJ/Y,GAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,QAAAA,EA5G1B,IA4GmC2b,GAA1DC,GAAiD5b,EAAAA,CAAAA,EAAAA,CAA3B6b,GAA2B7b,EAAAA,CAAAA,EAAAA,CAElD8b,GAActP,CAAAA,EAAAA,EAAAA,OAAAA,EAAQ,UAAM,CAChC,IAAIuP,EAAW,EAAE,CAWjB,GAVIrQ,IACFqQ,CAAAA,EAAW1B,GAAaa,GAAUL,IAAmBK,GAAUR,GAAY,EAEzEV,IACF+B,CAAAA,EAAW1B,GAAaa,GAAUH,IAAuBG,GAAUN,GAAc,EAE/Eb,IACFgC,CAAAA,EAAW1B,GAAaa,GAAUF,IAAuBE,GAjEvCP,EAiE+D,EAG/ErF,IAAeE,GAAgB,CACjC,IAAMwG,EAA2BD,EAAStU,MAAM,CAC9C,SAACC,CAAAA,CAAAA,QAAS4N,IAAgB5N,EAAK2F,OAAO,EAAMmI,IAAkB9N,EAAKY,QAAQ,GAGvE2T,EAAiCF,EAAStU,MAAM,CACpD,SAACC,CAAAA,CAAAA,KAGiBA,EAFhBA,OAAAA,EAAK2E,QAAQ,EACZ,IAAI0H,CAAAA,GAAAA,EAAUrM,EAAK2E,QAAQ,CAAC5D,aAAa,EAAEqS,aAAa,CAAC,IACxD,GAAI/G,CAAAA,GAAAA,EAAUrM,IAAmB,GAAnBA,CAAAA,EAAAA,EAAK2E,QAAQ,CAACnE,KAAK,GAAnBR,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAqBe,aAAa,EAAEqS,aAAa,CAAC,MAGtEiB,EAAW1B,GAAaa,GAAUe,GAAkCf,GAAUc,EAAyB,CACxG,OAEMD,CACT,EAAG,CACDrB,GACAQ,GACAN,GAvFoBD,EAyFpBjP,GACAsO,GACAD,GACAiB,GACAD,GACAV,GACAQ,GACAvF,GACAE,GACD,EAEK0G,GAAsB1P,CAAAA,EAAAA,EAAAA,OAAAA,EAAQ,UAAM,CA0BxC,MAAO2P,CAzBW,SAACjV,CAAAA,CAAwD,CACzE,OAAQuS,IACN,IAAK,MACH,OAAO2C,IAAQlV,EAAO,SAACQ,CAAAA,CAAAA,QAA8BA,EAAKiD,GAAG,CAAGjD,EAAKmK,YAAY,EAAE,OACrF,KAAK,aACH,OAAOuK,IACLlV,EACA,SAACQ,CAAAA,CAAAA,QAA+BA,EAAKkD,UAAU,CAAG6I,OAAO/L,EAAKkD,UAAU,CAACyR,KAAK,CAAC,EAAG,KAAO,CAAC,EAC1F,OAEJ,KAAK,SACH,OAAOD,IACLlV,EACA,SAACQ,CAAAA,CAAAA,QAA+BA,EAAK2E,QAAQ,CAAGoH,OAAO/L,EAAK2E,QAAQ,CAACqH,QAAQ,EAAI,CAAC,EAClF,OAEJ,KAAK,YACH,OAAO0I,IAAQlV,EAAO,SAACQ,CAAAA,CAAAA,QAA8B+L,OAAO/L,EAAKmD,SAAS,GAAG,OAC/E,KAAK,SACH,OAAOuR,IAAQlV,EAAO,SAACQ,CAAAA,CAAAA,QAA8B+L,OAAO/L,EAAKU,GAAG,GAAG,OACzE,SACE,OAAOlB,CACX,CACF,GAEiB4U,IAAaO,KAAK,CAAC,EAAGT,GACzC,EAAG,CAACE,GAAarC,GAAYmC,GAAqB,CAElD9B,CAAAA,GAAkBpJ,OAAO,CAAGwL,GAAoB1e,MAAM,CAEtDiT,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,UAAM,CACVoJ,IACFgC,GAAwB,SAACS,CAAAA,CAA0B,QACjD,GAA6BxC,GAAkBpJ,OAAO,CAC7C4L,EA7Le,GA+LjBA,CADN,EAIP,EAAG,CAACzC,GAAe,EAMnB,IAAM0C,GAAgB/P,CAAAA,EAAAA,EAAAA,OAAAA,EAAQ,iBAAO,CAAE0P,oBAAAA,EAAoB,GAAI,CAACA,GAAoB,EAEpF,MACE,GAAAxT,EAAA3H,IAAA,EAACyb,GAAAA,CAAAA,CAAAA,QAAqB,EAAClgB,MAAOigB,aAC5B,GAAA7T,EAAAvH,GAAA,EAACsb,EAAAA,CAAUA,CAAAA,UACT,GAAA/T,EAAA3H,IAAA,EAAC6W,GAAAA,CAAgBtK,eAAe,0BAC9B,GAAA5E,EAAA3H,IAAA,EAACW,EAAAA,EAAGA,CAAAA,WACF,GAAAgH,EAAAvH,GAAA,EAAC2W,GAAAA,CAAOjW,GAAG,KAAKP,MAAM,MAAMU,MAAM,YAAYF,GAAG,gBAC9C3B,EAAE,WAEL,GAAAuI,EAAAvH,GAAA,EAAC4W,GAAAA,CAAOzW,MAAM,KAAKU,MAAM,gBACtB7B,EAAE,8BAEL,GAAAuI,EAAAvH,GAAA,EAACub,EAAAA,CAAuBA,CAAAA,CAACC,GAAG,iBAAiBC,SAAU,YACrD,GAAAlU,EAAA3H,IAAA,EAACmC,EAAAA,CAAMA,CAAAA,CAAC1B,EAAE,IAAIsH,QAAQ,iBACpB,GAAAJ,EAAAvH,GAAA,EAACY,EAAAA,CAAIA,CAAAA,CAACC,MAAM,UAAUkM,KAAI,GAACE,SAAS,OAAOH,GAAG,eAC3C9N,EAAE,wBAEL,GAAAuI,EAAAvH,GAAA,EAAC0b,EAAAA,CAAgBA,CAAAA,CAAC7a,MAAM,oBAI7BiJ,IAAYlG,EAAAA,EAAAA,CAAAA,GAAW,EACtB,GAAA2D,EAAAvH,GAAA,EAACO,EAAAA,EAAGA,CAAAA,UACF,GAAAgH,EAAAvH,GAAA,EAAC2b,GAAAA,EAAgBA,CAAAA,CAAAA,UAKzB,GAAApU,EAAA3H,IAAA,EAACgc,EAAAA,CAAIA,CAAAA,WACH,GAAArU,EAAA3H,IAAA,EAAC4W,GAAAA,WACC,GAAAjP,EAAA3H,IAAA,EAACmX,GAAAA,WACC,GAAAxP,EAAAvH,GAAA,EAACoB,EAAAA,CAAIA,CAAAA,CAACoU,GAAG,gBACP,GAAAjO,EAAAvH,GAAA,EAAC6b,EAAAA,CAAUA,CAAAA,CAACC,SAAS,YAAY3D,SAAUA,EAAU4D,SAAU3D,OAEjE,GAAA7Q,EAAAvH,GAAA,EAAC6G,EAAAA,CAAAA,CAAAA,cAAqB,EAACmV,wBAAyBpC,GAAoBvd,MAAM,CAAG,IAC7E,GAAAkL,EAAA3H,IAAA,EAACwB,EAAAA,CAAIA,CAAAA,CAACoU,GAAG,OAAO3T,GAAG,iBACjB,GAAA0F,EAAAvH,GAAA,EAACkU,GAAeA,CACdC,YAAaA,GACbC,qBAAsBgF,GACtB/E,eAAgBA,GAChBC,wBAAyB+E,GACzB9E,qBAAsBA,GACtBC,8BAA+B8E,KAEjC,GAAA/R,EAAA3H,IAAA,EAACqU,GAAaA,WACZ,GAAA1M,EAAAvH,GAAA,EAAC0V,EAAAA,CAAMA,CAAAA,CACLrX,GAAG,oBACHsD,QAASuX,GACTtX,SAAU,kBAAMuX,GAAc,CAACD,KAC/B/Y,MAAM,OAER,GAAAoH,EAAA3H,IAAA,EAACgB,EAAAA,CAAIA,CAAAA,WAAC,IAAE5B,EAAE,2BAIhB,GAAAuI,EAAA3H,IAAA,EAACkX,GAAAA,WACC,GAAAvP,EAAA3H,IAAA,EAACiX,GAAAA,WACC,GAAAtP,EAAAvH,GAAA,EAACY,EAAAA,CAAIA,CAAAA,CAACoM,cAAc,YAAYnM,MAAM,aAAaoM,SAAS,OAAOF,KAAI,YACpE/N,EAAE,aAEL,GAAAuI,EAAAvH,GAAA,EAACic,EAAAA,CAAMA,CAAAA,CACLxgB,QAAS,CACP,CACEqF,MAAO9B,EAAE,OACT7D,MAAO,KACT,EACA,CACE2F,MAAO9B,EAAE,OACT7D,MAAO,KACT,EACA,CACE2F,MAAO9B,EAAE,cACT7D,MAAO,YACT,EACA,CACE2F,MAAO9B,EAAE,UACT7D,MAAO,QACT,EACA,CACE2F,MAAO9B,EAAE,aACT7D,MAAO,WACT,EACA,CACE2F,MAAO9B,EAAE,UACT7D,MAAO,QACT,EACD,CACD+gB,eA5FiB,SAACC,CAAAA,CAA8B,CAC5D5D,GAAc4D,EAAOhhB,KAAK,CAC5B,OA6FU,GAAAoM,EAAA3H,IAAA,EAACiX,GAAAA,CAAa7V,MAAO,CAAEob,WAAY,EAAG,YACpC,GAAA7U,EAAAvH,GAAA,EAACY,EAAAA,CAAIA,CAAAA,CAACoM,cAAc,YAAYnM,MAAM,aAAaoM,SAAS,OAAOF,KAAI,YACpE/N,EAAE,YAEL,GAAAuI,EAAAvH,GAAA,EAACqc,EAAAA,CAAWA,CAAAA,CAACC,aAActE,EAAqBpW,SA/LlC,SAAC2a,CAAAA,CAA+C,CACxExE,EAASwE,EAAMzH,MAAM,CAAC3Z,KAAK,CAC7B,EA6LyFqhB,YAAY,0BAI9F3D,IACC,GAAAtR,EAAA3H,IAAA,EAACsX,GAAAA,WACC,GAAA3P,EAAAvH,GAAA,EAACY,EAAAA,CAAIA,CAAAA,CAACqM,SAAU,CAAC,OAAQ,IAAI,CAAE,OAAO,CAAEpM,MAAM,UAAU4b,GAAG,eACxDzd,EAAE,yCAEL,GAAAuI,EAAA3H,IAAA,EAACwB,EAAAA,CAAIA,CAAAA,WACH,GAAAmG,EAAAvH,GAAA,EAACmX,GAAAA,CAAiBrS,KAAK,aAAamI,SAAU,CAAC,OAAQ,IAAI,CAAE,OAAO,CAAEpM,MAAM,mBACzE7B,EAAE,0BAEL,GAAAuI,EAAAvH,GAAA,EAACY,EAAAA,CAAIA,CAAAA,CAACqM,SAAU,CAAC,OAAQ,IAAI,CAAE,OAAO,CAAEpM,MAAM,UAAU6b,QAAQ,mBAAU,OAG1E,GAAAnV,EAAA3H,IAAA,EAACuX,GAAAA,CACCwF,SAAQ,GACR9b,MAAM,UACNoM,SAAU,CAAC,OAAQ,IAAI,CAAE,OAAO,CAChCnI,KAAK,+DAEJ9F,EAAE,sBAAsB,aAKhCmZ,IAAayE,EAAAA,EAAAA,CAAAA,KAAc,CAC1B,GAAArV,EAAAvH,GAAA,EAAC6c,GAAKA,CAAC9W,MAAOgV,GAAqBjJ,UAAWA,EAAWnI,cApS3C,CAACmT,IAAY,CAAC,CAACA,IAAWpF,IAsSxC,GAAAnQ,EAAAvH,GAAA,EAAC+c,EAAAA,CAAUA,CAAAA,UAAEzF,GACd,CACAwF,IAAW,CAACpF,GAAkBwB,IAC7B,GAAA3R,EAAAvH,GAAA,EAACoB,EAAAA,CAAIA,CAAAA,CAAC+K,eAAe,kBACnB,GAAA5E,EAAAvH,GAAA,EAACgd,EAAAA,CAAOA,CAAAA,CAAAA,KAGXrF,GAAc,GAAApQ,EAAAvH,GAAA,EAACsB,MAAAA,CAAIqS,IAAK8E,KACzB,GAAAlR,EAAAvH,GAAA,EAACgX,GAAAA,CAAYiG,IAAI,gCAAgCC,IAAI,uBAAuBlb,MAAO,IAAK0F,OAAQ,WAIxG,qiBC9WAyV,EAvF+E,SAAAnf,CAAA,CAUzE,OATJiJ,EAAAA,EAAAA,GAAAA,CACAzJ,EAAAA,EAAAA,KAAAA,CACAwJ,EAAAA,EAAAA,UAAAA,CACAoW,EAAAA,EAAAA,QAAAA,CACA7K,EAAAA,EAAAA,QAAAA,CACA8K,EAAAA,EAAAA,gBAAAA,CACA5W,EAAAA,EAAAA,QAAAA,CACA6W,EAAAA,EAAAA,QAAAA,CACAC,EAAAA,EAAAA,MAAAA,CAEQ1S,EAAqBwN,CAAAA,EAAAA,EAAAA,EAAAA,IAArBxN,OAAAA,CACF2S,EAAmBC,CAAAA,EAAAA,EAAAA,CAAAA,IAAjBD,YAAAA,CAC8CE,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,IAA9CC,EAA8CD,EAA9CC,qBAAAA,CAAuBC,EAAuBF,EAAvBE,OAAAA,CACzB5e,EAAQC,CAAAA,EAAAA,EAAAA,EAAAA,IAAND,CAAAA,CACF8S,EAAY+F,CAAAA,EAAAA,EAAAA,EAAAA,IACZgG,EAAqBf,EAAUgB,CAAAA,EAAAA,EAAAA,EAAAA,EAAiBvL,GAAYG,EAAAA,EAAQ,CACpEqL,EAAiBF,EAAmBG,OAAO,CAAC,EAAGpL,IAAAA,UAAoB,EACnEuD,EAAe0H,EAAqBA,EAAmBI,YAAY,CAACnM,GAAW9C,QAAQ,GAAK,CAAC,CAC7FkP,EAAiBL,EAAmBlE,aAAa,CAACwE,EAAAA,CAA4BA,EAAIJ,EAAiB,WAAW,CACrEK,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAC7C,GAAqBpf,MAAAA,CAAlBkf,EAAe,KAEhB5hB,MAAA,CAFmB0C,EAClB,8HAEH,CACEqW,UAAW,QACb,GANMgJ,EAAuCD,EAAvCC,SAAAA,CAAWC,EAA4BF,EAA5BE,OAAAA,CAASC,EAAmBH,EAAnBG,cAAAA,CAiBtBC,KAAgB,GAAAC,EAAA9iB,CAAA,YAAY,KAC1B+iB,kEAAU,SAAMf,EAAsB,UAAM,CAChD,OAAOL,GACT,iBACIoB,CAAAA,MAHEA,CAAAA,EAAUC,EAAAC,IAAA,IAGZF,KAAAA,EAAAA,EAAS7R,MAAM,IACjB2Q,EACE,GAAkBlhB,MAAA,CAAf0C,EAAE,aAAa,KAClB,GAAAuI,EAAAvH,GAAA,EAAC6e,EAAAA,CAAsBA,CAAAA,CAACC,OAAQJ,EAAQK,eAAe,UACpD/f,EAAE,wDAAyD,CAAEoN,OAAQ,MAAO,MAGjFmR,MAAAA,GAAAA,WAEJ,aAbMiB,kCAeCzI,EAA+BC,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EACpC,GAAAzO,EAAAvH,GAAA,EAACiW,EAAAA,CAAsBA,CAAAA,CACrBhP,IAAKA,EACLzJ,MAAOA,EACPiJ,SAAUA,EACVO,WAAYA,EACZkP,kBAAmB3D,EACnB4D,aAAcA,OAPoBH,CAAAA,EAAAA,CAWtC,MACE,GAAAzO,EAAA3H,IAAA,EAACwB,EAAAA,CAAIA,CAAAA,CAACT,GAAG,MAAMwL,eAAe,gBAAgB9K,WAAW,mBACvD,GAAAkG,EAAA3H,IAAA,EAACwB,EAAAA,CAAIA,CAAAA,CAAC4d,cAAc,SAAS3d,WAAW,uBACrCgc,EACC,GAAA9V,EAAA3H,IAAA,EAAA2H,EAAAwE,QAAA,YACE,GAAAxE,EAAAvH,GAAA,EAACif,EAAAA,CAAWA,CAAAA,CAACtL,IAAK0K,EAAWa,gBAAgB,qBAC3C,GAAA3X,EAAAvH,GAAA,EAACE,EAAAA,CAAOA,CAAAA,CAACW,MAAOgd,EAAmBsB,EAAE,CAAC,GAAK,eAAiB,MAAM,UAAGpB,MAEtEQ,GAAkBD,KAGrB,GAAA/W,EAAAvH,GAAA,EAACE,EAAAA,CAAOA,CAAAA,CAACW,MAAOgd,EAAmBsB,EAAE,CAAC,GAAK,eAAiB,MAAM,UAAGpB,GACtE,CACA5H,EAAe,GACd,GAAA5O,EAAAvH,GAAA,EAACof,EAAAA,CAAOA,CAAAA,CAACnS,SAAS,OAAOpM,MAAM,aAAawe,SAAU,EAAGlkB,MAAOgb,EAAc5Y,KAAK,OAAO+hB,OAAO,SAGrG,GAAA/X,EAAAvH,GAAA,EAAC+B,EAAAA,CAAMA,CAAAA,CAACG,SAAU2b,EAAmBsB,EAAE,CAAC,IAAMI,EAAWtd,QAnDhC,UAAM,CAC7Bmb,EACFrH,IAEAyI,GAEJ,WA8COe,EAAYvgB,EAAE,cAAgBA,EAAE,UAAU,KAInD,kTCnFA,IAAMwgB,GAAoB1hB,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,sCA6SpC2hB,GAtS6E,SAAAzhB,CAAA,CAsBvE,aAkQoB0hB,EAAiDC,EACtDD,EAA4CC,EAxR/D1Y,EAAAA,EAAAA,GAAAA,CACAmW,EAAAA,EAAAA,QAAAA,CACApW,EAAAA,EAAAA,UAAAA,CACAxJ,EAAAA,EAAAA,KAAAA,CACAiJ,EAAAA,EAAAA,QAAAA,CACA0M,EAAAA,EAAAA,YAAAA,CACA1J,EAAAA,EAAAA,UAAAA,CACAD,EAAAA,EAAAA,GAAAA,CACAuB,EAAAA,EAAAA,SAAAA,CACA0C,EAAAA,EAAAA,UAAAA,CACAmS,EAAAA,EAAAA,eAAAA,CACAnV,EAAAA,EAAAA,OAAAA,CACAmG,EAAAA,EAAAA,aAAAA,CACAiP,EAAAA,EAAAA,gBAAAA,CACAC,EAAAA,EAAAA,qBAAAA,CACA5U,EAAAA,EAAAA,QAAAA,CACA6U,EAAAA,EAAAA,OAAAA,CACAC,EAAAA,EAAAA,SAAAA,CACAzC,EAAAA,EAAAA,MAAAA,CACA0C,EAAAA,EAAAA,SAAAA,CACAC,EAAAA,EAAAA,UAAAA,CAEMlhB,EAAQC,CAAAA,EAAAA,EAAAA,EAAAA,IAAND,CAAAA,CACFmhB,GAAWC,CAAAA,EAAAA,GAAAA,EAAAA,IACXC,GAAiBC,CAAAA,EAAAA,GAAAA,EAAAA,IACMC,GAAAA,CAAAA,EAAAA,GAAAA,CAAAA,IAArBzD,GAAqByD,GAArBzD,OAAAA,CAAShT,GAAYyW,GAAZzW,OAAAA,CACX0W,GAASC,CAAAA,EAAAA,GAAAA,CAAAA,IACPtV,GAA2CD,EAA3CC,YAAAA,CAAc7D,GAA6B4D,EAA7B5D,aAAAA,CAAeoZ,GAAcxV,EAAdwV,SAAAA,CAC/B5O,GAAY+F,CAAAA,EAAAA,EAAAA,EAAAA,IACZ8I,GAAS3O,CAAAA,EAAAA,EAAAA,SAAAA,IACT3E,GAA0BuT,CAAAA,EAAAA,EAAAA,EAAAA,EAAe3Z,GAAvCoG,mBAAAA,CACFmQ,GAAmBC,CAAAA,EAAAA,EAAAA,CAAAA,IAAjBD,YAAAA,CAC+DE,GAAAA,CAAAA,EAAAA,EAAAA,CAAAA,IAA/DC,GAA+DD,GAA/DC,qBAAAA,CAAuBkD,GAAwCnD,GAAxCmD,eAAAA,CAAiBjD,GAAuBF,GAAvBE,OAAAA,CAC1CkD,GAAmB9W,CAAAA,EAAAA,EAAAA,UAAAA,EAAWC,EAAAA,CAAwBA,EAApD6W,YAAAA,CACsCjiB,GAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,QAAAA,EAAwB,kBAAM,IAAI,MAAzEkiB,GAAuCliB,EAAAA,CAAAA,EAAAA,CAAtBmiB,GAAsBniB,EAAAA,CAAAA,EAAAA,CACxCoiB,GAAcC,CAAAA,EAAAA,GAAAA,EAAAA,EAAgCnW,GACDoW,GAAAA,CAAAA,EAAAA,GAAAA,CAAAA,EAAyB/D,GAApEgE,GAA2CD,GAA3CC,WAAAA,CAAaC,GAA8BF,GAA9BE,OAAAA,CACfC,GAAcC,CAAAA,EAAAA,GAAAA,EAAAA,IAEdC,GAAwBnW,CAAAA,EAAAA,EAAAA,OAAAA,EAAQ,UAAM,CAC1C,OAAO+V,GACHpiB,EAAE,oGAAqG,CACrGyiB,YAAajB,GAAOpU,MAAM,GAE5BpN,EAAE,+EAA+E,EACpF,CAACoiB,GAAaZ,GAAQxhB,EAAE,EAErB0iB,GAAerW,CAAAA,EAAAA,EAAAA,OAAAA,EAAQ,UAAM,CACjC,MAAO,CAAC,UAAW,WAAW,CAAClJ,IAAI,CAAC,SAACwf,CAAAA,CAAAA,QAAShB,GAAOpJ,QAAQ,CAACxS,QAAQ,CAAC4c,MAAUV,GAAY5kB,MAAM,CAAG,CACxG,EAAG,CAAC4kB,GAAaN,GAAO,EAElBiB,MAAc,GAAAnD,EAAA9iB,CAAA,WAAOkmB,CAAAA,CAAmB,KAKpCnD,sEAJJtB,EAAAA,MAAAA,MACF,SAAM0E,GAAkBD,kBAAxBlD,EAAAC,IAAA,GACAmD,kBAEgB,SAAMpE,GAAsB,kBAAMoC,EAAQ8B,aACtDnD,CAAAA,MADEA,CAAAA,EAAUC,EAAAC,IAAA,IACZF,KAAAA,EAAAA,EAAS7R,MAAM,IACjB2Q,GACE,GAAelhB,MAAA,CAAZ0C,EAAE,UAAU,KACf,GAAAuI,EAAAvH,GAAA,EAAC6e,EAAAA,CAAsBA,CAAAA,CAACC,OAAQJ,EAAQK,eAAe,UACpD/f,EAAE,8CAGPue,kCAGN,YAhB2BsE,CAAAA,CAAAA,kCAkBrBC,MAAoB,GAAArD,EAAA9iB,CAAA,WAAOqmB,CAAAA,CAAwB,KACjDtD,EACAuD,EACAJ,kEAFU,SAAMhB,GAAgB,kBAAMd,EAAQiC,oBAA9CtD,EAAUC,EAAAC,IAAA,GACVqD,EAAoB,GAAIrP,CAAAA,GAAAA,EAAUoP,GAAa5H,KAAK,CAAC8H,EAAAA,EAAqBA,EAC1EL,EAASM,CAAAA,EAAAA,EAAAA,EAAAA,EAAgB,GAAIvP,CAAAA,GAAAA,EAAUqP,GAAoB,IAE7DvD,IACF2B,GAAe3B,EAAS,CACtBxO,KAAM,eACNkS,oBAAqB,CACnBlZ,KAAM,kCACNuO,KAAM,CAAEoK,OAAAA,EAAQpb,SAAAA,CAAS,CAC3B,EACA4b,WAAY,CACVnS,KAAMoS,GAAAA,EAAAA,CAAAA,KAAwB,CAC9BzV,OAAQ0V,GAAAA,EAAAA,CAAAA,OAA6B,CACrCV,OAAAA,EACApb,SAAAA,EACAsE,UAAAA,EACAyX,MAAK,CACH,CACEC,KAAM,EACN3Y,QAAAA,GACA4Y,GAAIhE,EAAQiE,IAAI,CAChBvB,YAAAA,GACAvU,OAAQ0V,GAAAA,EAAAA,CAAAA,OAA6B,EAEvC,CACEE,KAAM,EACNC,GAAI,GACJ5Y,QAASlG,GAAAA,EAAAA,CAAAA,GAAW,CACpBiJ,OAAQ0V,GAAAA,EAAAA,CAAAA,OAA6B,EAG3C,CACF,GAEApC,GAASyC,CAAAA,EAAAA,GAAAA,EAAAA,EAAsB,CAAEF,GAAIhE,EAAQiE,IAAI,CAAE7Y,QAAAA,EAAQ,IAC3DyT,WAEJ,YAvCiCyE,CAAAA,CAAAA,kCAyC3Ba,MAAgB,GAAApE,EAAA9iB,CAAA,WAAOkmB,CAAAA,CAAmB,KAItCnD,sEAHJtB,EAAAA,MAAAA,MACF,SAAM0F,GAAoBjB,kBAA1BlD,EAAAC,IAAA,gBAEgB,SAAMjB,GAAsB,kBAAMqC,EAAU6B,aACxDnD,CAAAA,MADEA,CAAAA,EAAUC,EAAAC,IAAA,IACZF,KAAAA,EAAAA,EAAS7R,MAAM,IACjB2Q,GACE,GAAiBlhB,MAAA,CAAd0C,EAAE,YAAY,KACjB,GAAAuI,EAAAvH,GAAA,EAAC6e,EAAAA,CAAsBA,CAAAA,CAACC,OAAQJ,EAAQK,eAAe,UACpD/f,EAAE,4DAGPue,kCAGN,YAf6BsE,CAAAA,CAAAA,kCAiBvBiB,MAAsB,GAAArE,EAAA9iB,CAAA,WAAOqmB,CAAAA,CAAwB,KACnDtD,EACAuD,EACAJ,kEAFU,SAAMhB,GAAgB,kBAAMb,EAAUgC,oBAAhDtD,EAAUC,EAAAC,IAAA,GACVqD,EAAoB,GAAIrP,CAAAA,GAAAA,EAAUoP,GAAa5H,KAAK,CAAC8H,EAAAA,EAAqBA,EAC1EL,EAASM,CAAAA,EAAAA,EAAAA,EAAAA,EAAgB,GAAIvP,CAAAA,GAAAA,EAAUqP,GAAoB,IAE7DvD,IACF2B,GAAe3B,EAAS,CACtBxO,KAAM,eACNkS,oBAAqB,CACnBlZ,KAAM,oCACNuO,KAAM,CAAEoK,OAAAA,EAAQpb,SAAAA,CAAS,CAC3B,EACA4b,WAAY,CACVnS,KAAMoS,GAAAA,EAAAA,CAAAA,OAA0B,CAChCzV,OAAQ0V,GAAAA,EAAAA,CAAAA,OAA6B,CACrCV,OAAAA,EACApb,SAAAA,EACAsE,UAAAA,EACAyX,MAAK,CACH,CACEC,KAAM,EACN3Y,QAAAA,GACA4Y,GAAIhE,EAAQiE,IAAI,CAChB9V,OAAQ0V,GAAAA,EAAAA,CAAAA,OAA6B,EAEvC,CACEE,KAAM,EACN3Y,QAASlG,GAAAA,EAAAA,CAAAA,GAAW,CACpB8e,GAAI,GACJ7V,OAAQ0V,GAAAA,EAAAA,CAAAA,OAA6B,EAEvC,CACEE,KAAM,EACN3Y,QAAAA,GACA4Y,GAAI,GACJ7V,OAAQ0V,GAAAA,EAAAA,CAAAA,OAA6B,EAG3C,CACF,GAEApC,GAASyC,CAAAA,EAAAA,GAAAA,EAAAA,EAAsB,CAAEF,GAAIhE,EAAQiE,IAAI,CAAE7Y,QAAAA,EAAQ,IAC3DyT,WAEJ,YA5CmCyE,CAAAA,CAAAA,kCA8C7Be,GAAgB5jB,CAAAA,EAAAA,EAAAA,WAAAA,EAAY,GAAAsf,EAAA9iB,CAAA,YAAY,KACtC+iB,kEAAU,SAAMf,GAAsB,UAAM,CAChD,OAAOsC,GACT,iBACIvB,CAAAA,MAHEA,CAAAA,EAAUC,EAAAC,IAAA,IAGZF,KAAAA,EAAAA,EAAS7R,MAAM,IACjB2Q,GAAaxe,EAAE,oBAAqB,GAAAuI,EAAAvH,GAAA,EAAC6e,EAAAA,CAAsBA,CAAAA,CAACC,OAAQJ,EAAQK,eAAe,IAC3FxB,WAEJ,GAAG,CAAC0C,EAAWjhB,EAAGwe,GAAcG,GAAuBJ,EAAO,EAWvDyF,GAAoBhN,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EACzB,GAAAzO,EAAAvH,GAAA,EAAC6G,EAAAA,CAAAA,CAAAA,YAAmB,EAClBiW,QAASA,GACT7V,IAAKA,EACL2J,cAAeA,EACfqS,IAAK9X,GACL7D,cAAeA,GACf4b,UAAWzc,EACXgD,WAAYA,EACZ0Z,QAAShQ,EACT1I,QAASA,EACTjB,IAAKA,EACLiE,WAAYA,EACZmS,gBAAiBA,EACjB9N,UAAWA,GACXsR,kBAAmBtC,KAAiBuC,GAAAA,CAAAA,CAAAA,MAAwB,CAC5DtC,gBAAiBA,GACjBuC,0BAA2BxZ,KAAYlG,GAAAA,EAAAA,CAAAA,GAAW,EAAIkG,KAAYlG,GAAAA,EAAAA,CAAAA,WAAmB,CACrF4d,sBAAuBA,GACvBnC,SAAU,GACVqB,UAAWA,GACX6C,gBAAiBhE,GACjBiE,UAAW5B,GACXmB,cAAeA,GACfU,oBAjCwB,SAACC,CAAAA,CAAAA,OAC3B,GAAAnc,EAAAvH,GAAA,EAAC2jB,EAAAA,CAAeA,CAAAA,CACdC,mBAAoBF,EACpBG,kBAAmB/R,GAAU9C,QAAQ,GACrC3B,oBAAqBA,GACrB2T,mBAAoBA,QA8BtB,GACA,GACA,sBAA0B1kB,MAAA,CAAJ2K,IAAAA,EA5BG+O,CAAAA,EAAAA,CA+BpB8N,GAAqB9N,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAC1B,GAAAzO,EAAAvH,GAAA,EAAC6G,EAAAA,CAAAA,CAAAA,aAAoB,EACnBuc,kBAAmBtC,KAAiBuC,GAAAA,CAAAA,CAAAA,MAAwB,CAC5DJ,IAAK3b,GACLkc,UAAWX,GACXM,QAAShQ,EACT+P,UAAWzc,EACX6c,0BAA2BxZ,KAAYlG,GAAAA,EAAAA,CAAAA,GAAW,EAAIkG,KAAYlG,GAAAA,EAAAA,CAAAA,WAAmB,CACrFyb,SAAU,QARcrJ,CAAAA,EAAAA,CA6BrB+N,GAA6B/N,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAS,GAAAzO,EAAAvH,GAAA,EAACgkB,GAAAA,EAAWA,CAAAA,CAACC,YAAaC,GAAAA,EAAAA,CAAAA,YAAuB,MAA1DlO,CAAAA,EAAAA,QAcpC,EASE,GAAAzO,EAAA3H,IAAA,EAACwB,EAAAA,CAAIA,CAAAA,CAAC+K,eAAe,gBAAgB9K,WAAW,mBAC9C,GAAAkG,EAAAvH,GAAA,EAAC6G,EAAAA,CAAAA,CAAAA,QAAe,EACdwY,SAAU,GACV/X,cAAeA,GACf6c,iBAAkBzE,CAAAA,IAAgB,GAAhBA,CAAAA,EAAAA,GAAAA,EAAO,CAAC5V,GAAQ,GAAhB4V,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAkBtT,MAAM,IAAKpF,EAAWoF,MAAM,CAAGuT,IAAe,GAAfA,CAAAA,EAAAA,GAAAA,EAAM,CAAC7V,GAAQ,GAAf6V,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAiBvT,MAAM,CAAGpF,EAAWoF,MAAM,CAC9GgY,YAAa1E,CAAAA,IAAgB,GAAhBA,CAAAA,EAAAA,GAAAA,EAAO,CAAC5V,GAAQ,GAAhB4V,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAkBtT,MAAM,IAAK5O,EAAM4O,MAAM,CAAGuT,IAAe,GAAfA,CAAAA,EAAAA,GAAAA,EAAM,CAAC7V,GAAQ,GAAf6V,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAiBvT,MAAM,CAAG5O,EAAM4O,MAAM,CAC/FwE,cAAeA,EACfuC,aAAcA,EACd0M,iBAAkBA,EAClBC,sBAAuBA,EACvBuE,kBAAmBpD,GAAY5kB,MAAM,CACrCioB,mBAhCqB,UAAM,CAC/B,IAAMjoB,EAAa4kB,GAAX5kB,MAAAA,CACJA,IACEA,EAAS,EACX0nB,KAEA5D,GAASyC,CAAAA,EAAAA,GAAAA,EAAAA,EAAsB,CAAEF,GAAIzB,EAAW,CAAC,EAAE,CAACsD,IAAI,CAAEza,QAAAA,EAAQ,IAGxE,IA3BSxC,GAAc6X,EAAE,CAAC,GACtB,GAAA5X,EAAAvH,GAAA,EAAC+B,EAAAA,CAAMA,CAAAA,CAACE,QAAS+gB,GAAkB9gB,SAAUwf,YAC1C1iB,EAAE,cAGL,GAAAuI,EAAA3H,IAAA,EAAC4f,GAAAA,WACC,GAAAjY,EAAAvH,GAAA,EAACwkB,EAAAA,CAAUA,CAAAA,CAAC1X,GAAG,MAAMnF,QAAQ,WAAWzF,SAAU+e,GAAY5kB,MAAM,CAAG,EAAG4F,QAAS6hB,YACjF,GAAAvc,EAAAvH,GAAA,EAACykB,EAAAA,CAASA,CAAAA,CAAC5jB,MAAM,UAAUmB,MAAM,WAEnC,GAAAuF,EAAAvH,GAAA,EAACwkB,EAAAA,CAAUA,CAAAA,CAAC7c,QAAQ,WAAW1F,QAAS+gB,GAAkB9gB,SAAUwf,IAAgBJ,YAClF,GAAA/Z,EAAAvH,GAAA,EAAC0kB,EAAAA,CAAOA,CAAAA,CAAC7jB,MAAM,UAAUmB,MAAM,aAGpC,IAmBC,GAAAuF,EAAAvH,GAAA,EAAC+B,EAAAA,CAAMA,CAAAA,CAACyT,GAAG,MAAMxT,MAAM,OAAOE,SAAUqd,IAAa+B,GAAarf,QAAS8gB,YACxE/jB,EAAE,oBAGR,sQChTH,IAAM2lB,GAAS7mB,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,sCAInBgK,GAAkBhK,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,sCAgHlC8mB,GAjG6E,SAAA5mB,CAAA,CAMvE,KA0DOsJ,EA/DXf,EAAAA,EAAAA,IAAAA,CACAuW,EAAAA,EAAAA,OAAAA,CACA8C,EAAAA,EAAAA,eAAAA,CACAnV,EAAAA,EAAAA,OAAAA,CACAgD,EAAAA,EAAAA,UAAAA,CAEMzO,EAAQC,CAAAA,EAAAA,EAAAA,EAAAA,IAAND,CAAAA,CACAiI,EAA0DV,EAA1DU,GAAAA,CAAKzJ,EAAqD+I,EAArD/I,KAAAA,CAAOwJ,EAA8CT,EAA9CS,UAAAA,CAAYoW,EAAkC7W,EAAlC6W,QAAAA,CAAU3W,EAAwBF,EAAxBE,QAAAA,CAAUsE,EAAcxE,EAAdwE,SAAAA,CAC9CwH,EAAehM,CAAAA,EAAK2E,QAAQ,EAAI,CAAC,GAA/BqH,QAAAA,CACFpI,EAAyBH,CAAAA,EAAAA,EAAAA,UAAAA,EAAWC,EAAAA,CAAwBA,EAA1DE,kBAAAA,CACFjD,EAAUX,KAAoB8M,IAApB9M,EAAKkD,UAAU,CACgBlD,EAAAA,EAAK2E,QAAQ,CAApD5D,EAAuCf,EAAvCe,aAAAA,CAAe6D,EAAwB5E,EAAxB4E,YAAAA,CAAcpE,EAAUR,EAAVQ,KAAAA,CAErC,MACE,GAAAQ,EAAA3H,IAAA,EAAC+kB,GAAAA,WACC,GAAApd,EAAA3H,IAAA,EAACwB,EAAAA,CAAIA,CAAAA,WACH,GAAAmG,EAAAvH,GAAA,EAACY,EAAAA,CAAIA,CAAAA,CAACmM,KAAI,GAACC,cAAc,YAAYnM,MAAM,YAAYoM,SAAS,OAAOwP,GAAG,eAAM,SAGhF,GAAAlV,EAAAvH,GAAA,EAACY,EAAAA,CAAIA,CAAAA,CAACmM,KAAI,GAACC,cAAc,YAAYnM,MAAM,aAAaoM,SAAS,gBAC9DjO,EAAE,eAGNmL,EACC,GAAA5C,EAAAvH,GAAA,EAACsM,EAAAA,EAA2BA,CAAAA,CAC1BvB,UAAWA,EACXwH,SAAUA,EACVtL,IAAKA,EACLmW,SAAUA,EACV5f,MAAOA,EACPwJ,WAAYA,EACZP,SAAUA,WAET,SAAC8F,CAAAA,CAAAA,OAAU,GAAAhF,EAAAvH,GAAA,EAACwM,EAAaA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAKD,OAGjC,GAAAhF,EAAAvH,GAAA,EAACyM,EAAAA,EAAsBA,CAAAA,CACrB8F,SAAUA,EACVtL,IAAKA,EACLmW,SAAUA,EACV5f,MAAOA,EACPwJ,WAAYA,EACZP,SAAUA,WAET,SAAC8F,CAAAA,CAAAA,OAAU,GAAAhF,EAAAvH,GAAA,EAACwM,EAAaA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAKD,MAElC,CACAhG,EAAK2F,OAAO,EACX,GAAA3E,EAAAvH,GAAA,EAAC4M,EAAAA,CAAaA,CAAAA,CACZ9M,MAAO,SAAC+M,CAAAA,CAAAA,OACN,GAAAtF,EAAA3H,IAAA,EAACwB,EAAAA,CAAIA,CAAAA,WACH,GAAAmG,EAAAvH,GAAA,EAACY,EAAAA,CAAIA,CAAAA,CAACmM,KAAI,GAACC,cAAc,YAAYnM,MAAM,aAAaoM,SAAS,OAAOwP,GAAG,eACxEzd,EAAE,mBAEL,GAAAuI,EAAAvH,GAAA,EAACY,EAAAA,CAAIA,CAAAA,CAACmM,KAAI,GAACC,cAAc,YAAYnM,MAAM,YAAYoM,SAAS,gBAC7DJ,QAIPK,KAAM,SAACC,CAAAA,CAAAA,OAAc,GAAA5F,EAAAvH,GAAA,EAAC8H,GAAAA,UAAiBqF,KACvCC,QAAS7G,EAAKU,GAAG,CACjBoG,oBAAqB9G,EAAK8G,mBAAmB,CAC7CC,kBACE,IAEkD,GAFjDhG,CAAAA,EAAAA,EAAciG,IAAI,CAACpC,GAAc3D,EAAE,CAAC,GACjCF,EAAciG,IAAI,CAACpC,GACnBpE,MAAAA,EAAAA,KAAAA,EAAAA,EAAOO,aAAa,CAACiG,IAAI,CAACxG,MAAAA,EAAAA,KAAAA,EAAAA,EAAOoE,YAAY,CAAC,GAFjD7D,KAAAA,IAAAA,EAAAA,EAEsDoL,EAAAA,EAAQ,GAIpExL,EACC,GAAAK,EAAA3H,IAAA,EAACwB,EAAAA,CAAIA,CAAAA,WACH,GAAAmG,EAAAvH,GAAA,EAACY,EAAAA,CAAIA,CAAAA,CAACmM,KAAI,GAACC,cAAc,YAAYnM,MAAM,YAAYoM,SAAS,OAAOwP,GAAG,eACvElW,EAAKE,QAAQ,GAEhB,GAAAc,EAAAvH,GAAA,EAACY,EAAAA,CAAIA,CAAAA,CAACmM,KAAI,GAACC,cAAc,YAAYnM,MAAM,aAAaoM,SAAS,gBAC9DjO,EAAE,eAIP,GAAAuI,EAAAvH,GAAA,EAACkR,EAAAA,CAAQA,CAAAA,CAAClP,MAAO,GAAI0F,OAAQ,GAAI/G,GAAG,OACrC,CACA,EAEGwJ,EACF,GAAA5C,EAAAvH,GAAA,EAACwN,EAAAA,EAAoBA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAKjH,GAAAA,CAAMkE,QAASA,EAASmV,gBAAiBA,EAAiBnS,WAAYA,WAC7F,SAAClB,CAAAA,CAAAA,OAAU,GAAAhF,EAAAvH,GAAA,EAAC6kB,GAAWA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAKtY,QAG/B,GAAAhF,EAAAvH,GAAA,EAAC2N,EAAAA,EAAeA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAKpH,GAAAA,CAAMkE,QAASA,EAASmV,gBAAiBA,EAAiBnS,WAAYA,WACxF,SAAClB,CAAAA,CAAAA,OAAU,GAAAhF,EAAAvH,GAAA,EAAC6kB,GAAWA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAKtY,OAEhC,CATC,GAAAhF,EAAAvH,GAAA,EAAC8kB,EAAAA,CAAmBA,CAAAA,CAACtP,GAAG,MAAMxT,MAAM,QASrC,GAGP,iDCxGA+iB,GAAeC,CAAAA,EAAAA,EAAAA,IAAAA,EAf0B,SAACzY,CAAAA,CAAU,CAClD,IAAMvN,EAAQC,CAAAA,EAAAA,EAAAA,EAAAA,IAAND,CAAAA,CACR,MACE,GAAAuI,EAAAvH,GAAA,EAACilB,GAAAA,CAAGA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CACFtd,QAAQ,UACR3G,MAAO,CAAEoP,WAAY,MAAO,EAC5B8U,QAAO,GACPC,UAAW,GAAA5d,EAAAvH,GAAA,EAACyV,GAAAA,CAAUA,CAAAA,CAACzT,MAAM,OAAOnB,MAAM,UAAUiM,GAAG,SACnDP,GAAAA,UAEHvN,EAAE,aAGT,wMChBA,IAAmD6H,GAAAA,EAAAA,CAAAA,CAAAA,IAAW,CAAtD+G,GAA2C/G,GAA3C+G,cAAAA,CAAgBC,GAA2BhH,GAA3BgH,OAAAA,CAASE,GAAkBlH,GAAlBkH,aAAAA,CAY3BqX,GAAUtnB,CAAAA,EAAAA,EAAAA,EAAAA,EAAOsD,EAAAA,CAAIA,EAAAA,UAAAA,CAAAA,qCAMrBikB,GAAgBvnB,CAAAA,EAAAA,EAAAA,EAAAA,EAAOmnB,GAAAA,CAAGA,EAAAA,UAAAA,CAAAA,qCAuChCK,GAnC+E,SAAAtnB,CAAA,CAQzE,KAPJyM,EAAAA,EAAAA,OAAAA,CACAhB,EAAAA,EAAAA,UAAAA,CACA8b,EAAAA,EAAAA,eAAAA,CACA/nB,EAAAA,EAAAA,KAAAA,CACAwJ,EAAAA,EAAAA,UAAAA,CACAkF,EAAAA,EAAAA,OAAAA,CACA/E,EAAAA,EAAAA,QAAAA,CAEMD,EAAUuC,KAAe4J,IAAf5J,EAEhB,MACE,GAAAlC,EAAA3H,IAAA,EAACwlB,GAAAA,CAAQjZ,eAAe,gBAAgB9K,WAAW,SAASV,GAAG,iBAC5DuG,EACC,GAAAK,EAAAvH,GAAA,EAACyH,GAAAA,CAAcA,CAAAA,CAACE,QAAQ,WAAWC,aAAcpK,EAAOqK,eAAgBb,EAAYhF,MAAO,GAAI0F,OAAQ,KAEvG,GAAAH,EAAAvH,GAAA,EAACkR,EAAAA,CAAQA,CAAAA,CAACpE,GAAG,MAAM9K,MAAO,GAAI0F,OAAQ,GAAIC,QAAQ,UACnD,CACD,GAAAJ,EAAA3H,IAAA,EAACwB,EAAAA,CAAIA,CAAAA,CAAC4d,cAAc,SAAS3d,WAAW,qBACrC6F,EAAU,GAAAK,EAAAvH,GAAA,EAACE,EAAAA,CAAOA,CAAAA,CAACS,GAAG,eAAO8J,EAAQpE,KAAK,CAAC,IAAI,CAAC,EAAE,GAAc,GAAAkB,EAAAvH,GAAA,EAACkR,EAAAA,CAAQA,CAAAA,CAACvQ,GAAG,MAAMqB,MAAO,GAAI0F,OAAQ,IAAM,CAC7G,GAAAH,EAAA3H,IAAA,EAACwB,EAAAA,CAAIA,CAAAA,CAAC+K,eAAe,mBAClBjF,GAAWC,GAAY,GAAAI,EAAAvH,GAAA,EAAC+N,GAAAA,CAAcjB,GAAG,QACzC5F,GAAWgF,GAAW,GAAA3E,EAAAvH,GAAA,EAAC8N,GAAUA,CAAChB,GAAG,QACrC5F,EAAU,GAAAK,EAAAvH,GAAA,EAACO,GAAAA,EAAGA,CAAAA,UAAEglB,EAAkB,GAAAhe,EAAAvH,GAAA,EAAC4N,GAAAA,CAAAA,GAAoB,GAAArG,EAAAvH,GAAA,EAAC6N,GAAAA,CAAAA,EAAU,GAAU,IAAI,CAChF3G,EACC,GAAAK,EAAAvH,GAAA,EAACqlB,GAAAA,CAAc1d,QAAQ,qBAAa8B,IAEpC,GAAAlC,EAAAvH,GAAA,EAACkR,EAAAA,CAAQA,CAAAA,CAACrP,GAAG,MAAMG,MAAO,GAAI0F,OAAQ,IACvC,SAKX,ofC1CA,IAAM8d,GAAqB3e,EAAAA,CAAAA,CAAAA,QAAAA,CAAAA,cAAL2e,CAEhBC,GAAa3nB,CAAAA,EAAAA,EAAAA,EAAAA,EAAO4nB,EAAAA,CAAIA,EAAAA,UAAAA,CAAAA,oCAI1B,SAAA1nB,CAAA,SAAeC,EAAZA,KAAAA,CAAkB+J,YAAY,CAACC,EAAE,GAMlC0d,GAAyB7nB,CAAAA,EAAAA,EAAAA,EAAAA,EAAOsD,EAAAA,CAAIA,EAAAA,UAAAA,CAAAA,qCAMpCwkB,GAAmB9nB,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,qCAET,SAAAE,CAAA,SAAeC,EAAZA,KAAAA,CAAkBC,MAAM,CAACsT,UAAU,GAkJhEqU,GArImE,SAAA7nB,CAAA,CAO7D,KA+DmBsJ,EArEvBf,EAAAA,EAAAA,IAAAA,CACAkH,EAAAA,EAAAA,UAAAA,CACAqY,EAAAA,EAAAA,OAAAA,CACAhU,EAAAA,EAAAA,SAAAA,CACAgL,EAAAA,EAAAA,OAAAA,CACAiJ,EAAAA,EAAAA,iBAAAA,CAEM/mB,EAAQC,CAAAA,EAAAA,EAAAA,EAAAA,IAAND,CAAAA,CACF8K,EAAcC,CAAAA,EAAAA,EAAAA,CAAAA,IAAZD,OAAAA,CACkDjL,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IAAK,GAAjEmnB,EAAmDnnB,CAAAA,CAAAA,EAAAA,CAA5BonB,EAA4BpnB,CAAAA,CAAAA,EAAAA,CAEpD6K,EACJnD,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAMmD,SAAS,GAAIqc,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAmBve,EAAE,CAAC,IAAKjB,EAAKmD,SAAS,CAAC6D,IAAI,CAACwY,GAAqBxf,EAAKmD,SAAS,CAEjGwc,EACJxc,GAAaA,EAAUlC,EAAE,CAAC,GACtB,IAAiFlL,MAAA,CAA7EoN,EAAUsF,QAAQ,GAAGrD,cAAc,CAAC0H,KAAAA,EAAW,CAAE8S,sBAAuB,CAAE,IAC9E,EAAE,CAEF1b,EAAUlE,EAAKE,QAAQ,EAAIF,EAAKE,QAAQ,CAAChJ,OAAO,CAAC,YAAa,IAC9D2oB,EAAY7f,EAAK8f,IAAI,CAAG9f,EAAK8f,IAAI,CAACD,SAAS,CAAGpnB,EAAE,cAAc,CAE9D0L,EAAwBC,CAAAA,EAAAA,EAAAA,CAAAA,EAAyB,CACrDC,kBAAmBrE,EAAKS,UAAU,CAAC6D,OAAO,CAC1CC,aAAcvE,EAAK/I,KAAK,CAACqN,OAAO,CAChCf,QAAAA,CACF,GACM8V,EAAkB,GAA6BlV,MAAAA,CAA1B4b,EAAAA,EAAsBA,CAAC,KAAyBhqB,MAAA,CAAtBoO,GAC7CK,EAA8CxE,EAA9CwE,SAAAA,CAAWP,EAAmCjE,EAAnCiE,iBAAAA,CAAmB4I,EAAgB7M,EAAhB6M,WAAAA,CAChCmT,EAAiBhgB,SAAAA,EAAK/I,KAAK,CAAC4O,MAAM,CACO7F,EAAAA,EAAK2E,QAAQ,CAApD5D,EAAuCf,EAAvCe,aAAAA,CAAeP,EAAwBR,EAAxBQ,KAAAA,CAAOoE,EAAiB5E,EAAjB4E,YAAAA,CAExBC,EAAUC,CAAAA,EAAAA,EAAAA,OAAAA,EAAQ,UAAM,QAC5B,EAASlE,QAAQ,CACR,QAA0CqD,MAAAA,CAAlC3G,EAAAA,EAAe,CAACiG,EAAQ,CAAC,WAAoDwB,MAAAA,CAA3Cd,EAAkB,2BAAmDlO,MAAA,CAA1BgP,EAAAA,CAAgB,CAACxB,EAAQ,EAEhH,QAA0CiB,MAAAA,CAAlClH,EAAAA,EAAe,CAACiG,EAAQ,CAAC,WAA4BwB,MAAAA,CAAnBP,EAAU,WAAmCzO,MAAA,CAA1BgP,EAAAA,CAAgB,CAACxB,EAAQ,CAD5F,EAEA,CAACA,EAASvD,EAAKY,QAAQ,CAAE4D,EAAWP,EAAkB,EAEnDgc,EAA0BrnB,CAAAA,EAAAA,EAAAA,WAAAA,EAAY,UAAM,CAChD8mB,EAAyB,SAACQ,CAAAA,CAAAA,OAAS,CAACA,GACtC,EAAG,EAAE,EAEL,MACE,GAAAlf,EAAA3H,IAAA,EAAC6lB,GAAAA,CAAWlb,SAAUgc,YACpB,GAAAhf,EAAA3H,IAAA,EAAC+lB,GAAAA,WACC,GAAApe,EAAAvH,GAAA,EAAC0mB,GAAWA,CACVjc,QAASA,EACThB,WAAYlD,EAAKkD,UAAU,CAC3B8b,gBAAiBhf,EAAKgF,WAAW,CACjC/N,MAAO+I,EAAK/I,KAAK,CACjBwJ,WAAYT,EAAKS,UAAU,CAC3BkF,QAAS3F,EAAK2F,OAAO,CACrB/E,SAAUZ,EAAKY,QAAQ,GAExB,CAAC2e,GACA,GAAAve,EAAA3H,IAAA,EAACwB,EAAAA,CAAIA,CAAAA,CAAC+K,eAAe,gBAAgB9K,WAAW,mBAC9C,GAAAkG,EAAA3H,IAAA,EAACgB,EAAAA,CAAIA,CAAAA,WAAE5B,EAAE,OAAO,OAChB,GAAAuI,EAAAvH,GAAA,EAACY,EAAAA,CAAIA,CAAAA,CAACmM,KAAI,GAAC/L,MAAO,CAAEC,QAAS,OAAQI,WAAY,QAAS,WACvDkF,EAAKiD,GAAG,CACP,GAAAjC,EAAA3H,IAAA,EAAA2H,EAAAwE,QAAA,YACGxF,EAAK2F,OAAO,CACX,GAAA3E,EAAAvH,GAAA,EAACyQ,GAAAA,CAAUA,CAAAA,CACT3D,GAAG,MACH4D,aAAcnK,EAAKmK,YAAY,CAC/BlH,IAAKjD,EAAKiD,GAAG,CACbvC,IAAKV,MAAAA,EAAAA,KAAAA,EAAAA,EAAMU,GAAG,CACd2J,cAAerK,EAAKqK,aAAa,CACjCtD,kBACE,IAEkD,GAFjDhG,CAAAA,EAAAA,EAAciG,IAAI,CAACpC,GAAc3D,EAAE,CAAC,GACjCF,MAAAA,EAAAA,KAAAA,EAAAA,EAAeiG,IAAI,CAACpC,EAAAA,CACpBpE,MAAAA,EAAAA,KAAAA,EAAAA,EAAOO,aAAa,CAACiG,IAAI,CAACxG,MAAAA,EAAAA,KAAAA,EAAAA,EAAOoE,YAAY,CAAC,GAFjD7D,KAAAA,IAAAA,EAAAA,EAEsDoL,EAAAA,EAAQ,GAGjE,IAAI,CACR,GAAAnL,EAAAvH,GAAA,EAAC2mB,EAAAA,CAASA,CAAAA,CACRhf,QAAQ,kBACRV,IAAKV,EAAKU,GAAG,CACbkM,aAAc5M,EAAK4M,YAAY,CAC/B1M,SAAUF,EAAKE,QAAQ,CACvBgD,WAAYlD,EAAKkD,UAAU,CAC3BgB,QAASA,EACTmV,gBAAiBA,EACjB9N,UAAWA,EACXtI,IAAKjD,EAAKiD,GAAG,CACbiE,WAAYA,EACZiD,aAAcnK,EAAKmK,YAAY,CAC/BF,cAAejK,EAAK2F,OAAO,CAC3BD,eAAc,GACdC,QAAS3F,EAAK2F,OAAO,CACrB1B,kBAAmBA,EACnB4I,YAAaA,OAIjB,GAAA7L,EAAAvH,GAAA,EAACkR,EAAAA,CAAQA,CAAAA,CAACxJ,OAAQ,GAAI1F,MAAO,IAC9B,MAIP,GAAAuF,EAAA3H,IAAA,EAACwB,EAAAA,CAAIA,CAAAA,CAAC+K,eAAe,0BACnB,GAAA5E,EAAA3H,IAAA,EAACgB,EAAAA,CAAIA,CAAAA,WAAE5B,EAAE,QAAQ,OACjB,GAAAuI,EAAAvH,GAAA,EAACY,EAAAA,CAAIA,CAAAA,CAACmM,KAAI,YAAEqZ,OAEd,GAAA7e,EAAAvH,GAAA,EAAC4kB,GAAoBA,CACnBre,KAAMA,EACNkE,QAASA,EACTqS,QAASA,EACT8C,gBAAiBA,EACjBnS,WAAYA,OAIhB,GAAAlG,EAAA3H,IAAA,EAACgmB,GAAAA,WACC,GAAAre,EAAAvH,GAAA,EAAC4mB,EAAAA,CAAuBA,CAAAA,CAAC3kB,QAASukB,EAAyB7d,SAAUqd,IACpEA,GACC,GAAAze,EAAAvH,GAAA,EAACwlB,GAAAA,CACCM,QAASA,EACTe,gBAAiB5b,CAAAA,EAAAA,EAAAA,CAAAA,EAAoBF,EAAW,UAAWjB,GAC3Dgd,YAAa1b,EACb8a,oBAAqBA,EACrBzb,QAASA,EACTmV,gBAAiBA,EACjBrU,YAAahF,EAAKgF,WAAW,CAC7BC,sBAAuBjF,EAAKiF,qBAAqB,QAM7D,mZCvKAub,EAXuB,SAAC3Z,CAAAA,CAAoB,CAC1C,IAAM4Z,EAAqBC,CAAAA,EAAAA,EAAAA,EAAAA,IACrBC,EAAWC,CAAAA,EAAAA,EAAAA,EAAAA,IAMjB,MAAO,CAAE7J,SAJane,CAAAA,EAAAA,EAAAA,WAAAA,EAAY,GAAAsf,EAAA9iB,CAAA,YAAY,0CAC5C,SAAOyrB,CAAAA,EAAAA,EAAAA,EAAAA,EAAYJ,EAAoB5Z,EAAS8Z,KAClD,GAAG,CAAC9Z,EAAS4Z,EAAoBE,EAAS,CAET,CACnC,aCMMG,EAA6BxgB,EAAAA,CAAAA,CAAAA,SAAAA,CAAAA,sBAALwgB,CASjB/a,EAA8B,SAAAgb,CAAA,CAA4B,KAAzBhQ,EAAAA,EAAAA,QAAAA,CAAa/K,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAb+K,aACtCvM,EAAgBwB,EAAdxB,SAAAA,CACFwc,EAAaC,CAAAA,EAAAA,EAAAA,EAAAA,EAASzc,GAEmB0c,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAsBlb,EAAMtF,GAAG,CAAEsgB,GAAxEjK,EAAuCmK,EAAvCnK,QAAAA,CAAUC,EAA6BkK,EAA7BlK,MAAAA,CAAQF,EAAqBoK,EAArBpK,gBAAAA,CAE1B,OAAO/F,EAAS,GAAAlG,EAAAzV,CAAA,KAAA0V,EAAA1V,CAAA,KAAK4Q,GAAAA,CAAO+Q,SAAAA,EAAUD,iBAAAA,EAAkBE,OAAAA,IAC1D,EAEa9Q,EAAyB,SAAA6a,CAAA,CAA4B,KAAzBhQ,EAAAA,EAAAA,QAAAA,CAAa/K,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAb+K,aACjCgG,EAAeoK,EAAenb,EAAMtF,GAAG,EAArCqW,QAAAA,CACqBiD,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,IAArBzD,EAAqByD,EAArBzD,OAAAA,CAAShT,EAAYyW,EAAZzW,OAAAA,CACXqW,EAAWC,CAAAA,EAAAA,EAAAA,EAAAA,IAEX7C,EAASpe,CAAAA,EAAAA,EAAAA,WAAAA,EACb,kBAAMghB,EAASwH,CAAAA,EAAAA,EAAAA,EAAAA,EAAuB,CAAE7K,QAAAA,EAAS8K,KAAM,CAACrb,EAAMtF,GAAG,CAAC,CAAE6C,QAAAA,CAAQ,KAC5E,CAACgT,EAASqD,EAAUrW,EAASyC,EAAMtF,GAAG,CAAC,EAGzC,OAAOqQ,EAAS,GAAAlG,EAAAzV,CAAA,KAAA0V,EAAA1V,CAAA,KAAK4Q,GAAAA,CAAOgR,OAAAA,EAAQD,SAAAA,IACtC,EAEa9Q,EAAsF,SAAAxO,CAAA,CAW7F,OAVJiJ,EAAAA,EAAAA,GAAAA,CACAzJ,EAAAA,EAAAA,KAAAA,CACAwJ,EAAAA,EAAAA,UAAAA,CACAoW,EAAAA,EAAAA,QAAAA,CACAlS,EAAAA,EAAAA,QAAAA,CACAvB,EAAAA,EAAAA,aAAAA,CACA0T,EAAAA,EAAAA,gBAAAA,CACA5W,EAAAA,EAAAA,QAAAA,CACA6W,EAAAA,EAAAA,QAAAA,CACAC,EAAAA,EAAAA,MAAAA,CAEMve,EAAQC,CAAAA,EAAAA,EAAAA,EAAAA,IAAND,CAAAA,CACFwe,EAAmBC,CAAAA,EAAAA,EAAAA,CAAAA,IAAjBD,YAAAA,CAC8CE,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,IAA9CC,EAA8CD,EAA9CC,qBAAAA,CAAuBC,EAAuBF,EAAvBE,OAAAA,CACzB1H,EAAoB,GAAItD,CAAAA,GAAAA,EAAU1H,EAASqH,QAAQ,EACnDT,EAAY+F,CAAAA,EAAAA,EAAAA,EAAAA,IACdtF,EAAWG,EAAAA,EAAQA,CACnByD,EAAe,EACf4H,EAAiBpU,EAAgB4I,EAASyL,OAAO,CAAC,EAAGpL,IAAAA,UAAoB,EAAI,GAAArL,EAAAvH,GAAA,EAACkR,EAAAA,CAAQA,CAAAA,CAAClP,MAAO,IAAM,CAGnGkU,EAAkB2R,MAAM,KAE3B1R,EAAe5D,CADfA,EAAWuL,CAAAA,EAAAA,EAAAA,EAAAA,EAAiB5H,EAAAA,EACJ+H,YAAY,CAACnM,GAAW9C,QAAQ,GACxD+O,EAAiBxL,EAASyL,OAAO,CAAC,EAAGpL,IAAAA,UAAoB,GAW3D,IAAM4L,KAAgB,GAAAC,EAAA9iB,CAAA,YAAY,KAC1B+iB,kEAAU,SAAMf,EAAsB,UAAM,CAChD,OAAOL,GACT,iBACIoB,CAAAA,MAHEA,CAAAA,EAAUC,EAAAC,IAAA,IAGZF,KAAAA,EAAAA,EAAS7R,MAAM,IACjB2Q,EACE,GAAkBlhB,MAAA,CAAf0C,EAAE,aAAa,KAClB,GAAAuI,EAAAvH,GAAA,EAAC6e,EAAAA,CAAsBA,CAAAA,CAACC,OAAQJ,EAAQK,eAAe,UACpD/f,EAAE,wDAAyD,CAAEoN,OAAQ,MAAO,MAGjFmR,MAAAA,GAAAA,WAEJ,aAbMiB,kCAeCzI,EAA+BC,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EACpC,GAAAzO,EAAAvH,GAAA,EAACiW,EAAAA,CAAsBA,CAAAA,CACrBhP,IAAKA,EACLzJ,MAAOA,EACPiJ,SAAUA,EACVO,WAAYA,EACZkP,kBAAmBA,EACnBC,aAAcA,OAPoBH,CAAAA,EAAAA,CAWtC,MACE,GAAAzO,EAAAvH,GAAA,EAACqnB,EAAAA,CACC9U,SAAUA,EACV4D,aAAcA,EACd4H,eAAgBA,EAChBwB,UAAWA,EACX5V,cAAeA,EACf0T,iBAAkBA,EAClBmB,cA1CyB,UAAM,CAC7BpB,EACFrH,IAEAyI,GAEJ,GAuCF,6hBCxDahR,EAAuB,SAAA8Z,CAAA,CAA4B,KAAzBhQ,EAAAA,EAAAA,QAAAA,CAAa/K,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAb+K,aAC7BzM,EAAqBwN,CAAAA,EAAAA,EAAAA,EAAAA,IAArBxN,OAAAA,CAEFE,EAAgBwB,EAAdxB,SAAAA,CACFwc,EAAaC,CAAAA,EAAAA,EAAAA,EAAAA,EAASzc,GAEsB0c,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAsBlb,EAAMtF,GAAG,CAAEsgB,GAA3ExH,EAA0C0H,EAA1C1H,OAAAA,CAASC,EAAiCyH,EAAjCzH,SAAAA,CAAWC,EAAsBwH,EAAtBxH,SAAAA,CAAW1C,EAAWkK,EAAXlK,MAAAA,CAEjCmD,EAAgBnU,CAAAA,EAAMrB,QAAQ,EAAI,CAAC,GAAjCwV,SAAAA,CAEFR,EAAapD,GAAW4D,GAAaA,EAAU/G,aAAa,CAAC,GAEnE,OAAOrC,EAAS,GAAAwQ,EAAAnsB,CAAA,KAAAosB,EAAApsB,CAAA,KACX4Q,GAAAA,CACHwT,QAAAA,EACAxC,OAAAA,EACAyC,UAAAA,EACAC,UAAAA,EACAC,WAAAA,IAEJ,EAEavS,EAAkB,SAAA2Z,CAAA,CAA4B,KA3C1BC,EAAYtgB,EAAKmW,EACnBmD,EAArBzD,EAAShT,EACXiW,EACAC,EACAG,EAuC0B7I,EAAAA,EAAAA,QAAAA,CAAa/K,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAb+K,aACxBzM,EAAqBwN,CAAAA,EAAAA,EAAAA,EAAAA,IAArBxN,OAAAA,CAEFE,EAAgBwB,EAAdxB,SAAAA,CAE0Cid,GAhDnBT,EA+CZC,CAAAA,EAAAA,EAAAA,EAAAA,EAASzc,GA/Ce9D,EAgDoCsF,EAAMtF,GAAG,CAhDxCmW,EAgD0C7Q,EAAM6Q,QAAQ,CA/ChGN,EAAqByD,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,KAArBzD,OAAAA,CAAShT,EAAYyW,EAAZzW,OAAAA,CACXiW,EAAckI,CAAAA,EAAAA,EAAAA,CAAAA,EAAchhB,EAAKmW,GAA/B2C,OAAAA,CACFC,EAAgBkI,CAAAA,EAAAA,EAAAA,CAAAA,EAAgBjhB,EAAKmW,GAAnC4C,SAAAA,CACFG,EAAWC,CAAAA,EAAAA,EAAAA,EAAAA,IASV,CACLL,QAAAA,EACAC,UAAAA,EACAC,UAVoBkI,CAAAA,EAAAA,EAAAA,CAAAA,EAAeZ,EAAYzd,GAAzCmW,SAAAA,CAWN1C,OATape,CAAAA,EAAAA,EAAAA,WAAAA,EACb,kBAAMghB,EAASwH,CAAAA,EAAAA,EAAAA,EAAAA,EAAuB,CAAE7K,QAAAA,EAAS8K,KAAM,CAAC3gB,EAAI,CAAE6C,QAAAA,CAAQ,KACtE,CAACgT,EAAS7V,EAAK6C,EAASqW,EAAS,CAQnC,GA8BQJ,EAA0CiI,EAA1CjI,OAAAA,CAASC,EAAiCgI,EAAjChI,SAAAA,CAAWC,EAAsB+H,EAAtB/H,SAAAA,CAAW1C,EAAWyK,EAAXzK,MAAAA,CAEjCmD,EAAgBnU,CAAAA,EAAMrB,QAAQ,EAAI,CAAC,GAAjCwV,SAAAA,CAEFR,EAAapD,GAAW4D,GAAaA,EAAU/G,aAAa,CAAC,GAEnE,OAAOrC,EAAS,GAAAwQ,EAAAnsB,CAAA,KAAAosB,EAAApsB,CAAA,KACX4Q,GAAAA,CACHwT,QAAAA,EACAxC,OAAAA,EACAyC,UAAAA,EACAC,UAAAA,EACAC,WAAAA,IAEJ,CAuTA9hB,CAAAA,EAAA,GArTqF,SAAAJ,CAAA,CAsB/E,aAwQM0hB,EAAiDC,EAEtCD,EAA4CC,EA/RjE1Y,EAAAA,EAAAA,GAAAA,CACAuC,EAAAA,EAAAA,GAAAA,CACA4T,EAAAA,EAAAA,QAAAA,CACA3T,EAAAA,EAAAA,UAAAA,CACAhD,EAAAA,EAAAA,QAAAA,CACAgE,EAAAA,EAAAA,OAAAA,CACAM,EAAAA,EAAAA,SAAAA,CACAoI,EAAAA,EAAAA,YAAAA,CACAnM,EAAAA,EAAAA,UAAAA,CACAxJ,EAAAA,EAAAA,KAAAA,CACAmM,EAAAA,EAAAA,aAAAA,CACA8D,EAAAA,EAAAA,UAAAA,CACAmD,EAAAA,EAAAA,aAAAA,CACAiP,EAAAA,EAAAA,gBAAAA,CACAC,GAAAA,EAAAA,qBAAAA,CACA5U,GAAAA,EAAAA,QAAAA,CACAqS,GAAAA,EAAAA,MAAAA,CACAwC,GAAAA,EAAAA,OAAAA,CACAC,GAAAA,EAAAA,SAAAA,CACAC,GAAAA,EAAAA,SAAAA,CACAC,GAAAA,EAAAA,UAAAA,CAEMC,GAAWC,CAAAA,EAAAA,EAAAA,EAAAA,IACXI,GAASC,CAAAA,EAAAA,EAAAA,CAAAA,IACTQ,GAAcC,CAAAA,EAAAA,EAAAA,EAAAA,EAAgCnW,GAC9C+V,GAAmB9W,CAAAA,EAAAA,EAAAA,UAAAA,EAAWC,EAAAA,CAAwBA,EAApD6W,YAAAA,CAC2CK,GAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAyB/D,GAApEgE,GAA2CD,GAA3CC,WAAAA,CAAaC,GAA8BF,GAA9BE,OAAAA,CACfhU,GAA0BuT,CAAAA,EAAAA,EAAAA,EAAAA,EAAe3Z,GAAvCoG,mBAAAA,CACFrO,GAAQC,CAAAA,EAAAA,EAAAA,EAAAA,IAAND,CAAAA,CACFwe,GAAmBC,CAAAA,EAAAA,EAAAA,CAAAA,IAAjBD,YAAAA,CACF6C,GAAiBC,CAAAA,EAAAA,EAAAA,EAAAA,IACjBgB,GAAcC,CAAAA,EAAAA,EAAAA,EAAAA,IACmD7D,GAAAA,CAAAA,EAAAA,EAAAA,CAAAA,IAA/DC,GAA+DD,GAA/DC,qBAAAA,CAAuBkD,GAAwCnD,GAAxCmD,eAAAA,CAAiBjD,GAAuBF,GAAvBE,OAAAA,CACnB2C,GAAAA,CAAAA,EAAAA,EAAAA,CAAAA,IAArBzD,GAAqByD,GAArBzD,OAAAA,CAAShT,GAAYyW,GAAZzW,OAAAA,CAEkCoB,GAAAA,IAAY,CAAC,EAAxDC,GAA2CD,GAA3CC,YAAAA,CAAc7D,GAA6B4D,GAA7B5D,aAAAA,CAAeoZ,GAAcxV,GAAdwV,SAAAA,CAE/BC,GAAS3O,CAAAA,EAAAA,EAAAA,SAAAA,IACTF,GAAY+F,CAAAA,EAAAA,EAAAA,EAAAA,IAC4BhZ,GAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,QAAAA,EAAwB,kBAAM,IAAI,MAAzEkiB,GAAuCliB,EAAAA,CAAAA,EAAAA,CAAtBmiB,GAAsBniB,EAAAA,CAAAA,EAAAA,CAExC6L,GAAwBC,CAAAA,EAAAA,EAAAA,CAAAA,EAAyB,CACrDC,kBAAmB5D,EAAW6D,OAAO,CACrCC,aAActN,EAAMqN,OAAO,CAC3Bf,QAAAA,EACF,GACM8V,GAAkB,GAA6BlV,MAAAA,CAA1B4b,EAAAA,EAAsBA,CAAC,KAAyBhqB,MAAA,CAAtBoO,IAE/CgX,GAAerW,CAAAA,EAAAA,EAAAA,OAAAA,EAAQ,UAAM,CACjC,MAAO,CAAC,UAAW,WAAW,CAAClJ,IAAI,CAAC,SAACwf,CAAAA,CAAAA,QAAShB,GAAOpJ,QAAQ,CAACxS,QAAQ,CAAC4c,MAAUV,GAAY5kB,MAAM,CAAG,CACxG,EAAG,CAAC4kB,GAAaN,GAAO,EAElBa,GAAwBnW,CAAAA,EAAAA,EAAAA,OAAAA,EAAQ,UAAM,CAC1C,OAAO+V,GACHpiB,GAAE,oGAAqG,CACrGyiB,YAAajB,GAAOpU,MAAM,GAE5BpN,GAAE,+EAA+E,EACpF,CAACoiB,GAAaZ,GAAQxhB,GAAE,EAErB4iB,MAAc,GAAAwG,EAAAzsB,CAAA,WAAOkmB,CAAAA,CAAmB,KAKpCnD,sEAJJtB,EAAAA,MAAAA,MACF,SAAM0E,GAAkBD,kBAAxBlD,EAAAC,IAAA,GACAmD,kBAEgB,SAAMpE,GAAsB,kBAAMoC,GAAQ8B,aAEtDnD,CAAAA,MAFEA,CAAAA,EAAUC,EAAAC,IAAA,IAEZF,KAAAA,EAAAA,EAAS7R,MAAM,IACjB2Q,GACE,GAAelhB,MAAA,CAAZ0C,GAAE,UAAU,KACf,GAAAqpB,EAAAroB,GAAA,EAAC6e,EAAAA,CAAsBA,CAAAA,CAACC,OAAQJ,EAAQK,eAAe,UACpD/f,GAAE,8CAGPue,mCAGN,YAjB2BsE,CAAAA,CAAAA,kCAmBrBC,MAAoB,GAAAsG,EAAAzsB,CAAA,WAAOqmB,CAAAA,CAAwB,KACjDtD,EACAuD,EACAJ,kEAFU,SAAMhB,GAAgB,kBAAMd,GAAQiC,oBAA9CtD,EAAUC,EAAAC,IAAA,GACVqD,EAAoB,GAAIrP,CAAAA,GAAAA,EAAUoP,GAAa5H,KAAK,CAAC8H,EAAAA,EAAqBA,EAC1EL,EAASM,CAAAA,EAAAA,EAAAA,EAAAA,EAAgB,GAAIvP,CAAAA,GAAAA,EAAUqP,GAAoB,IAE7DvD,IACF2B,GAAe3B,EAAS,CACtBxO,KAAM,eACNkS,oBAAqB,CACnBlZ,KAAM,kCACNuO,KAAM,CAAEoK,OAAAA,EAAQpb,SAAAA,CAAS,CAC3B,EACA4b,WAAY,CACVnS,KAAMoS,EAAAA,EAAAA,CAAAA,KAAwB,CAC9BzV,OAAQ0V,EAAAA,EAAAA,CAAAA,OAA6B,CACrCV,OAAAA,EACApb,SAAAA,EACAsE,UAAAA,EACAyX,MAAK,CACH,CACEC,KAAM,EACN3Y,QAAAA,GACA4Y,GAAIhE,EAAQiE,IAAI,CAChBvB,YAAAA,GACAvU,OAAQ0V,EAAAA,EAAAA,CAAAA,OAA6B,EAEvC,CACEE,KAAM,EACNC,GAAI,GACJ5Y,QAASlG,EAAAA,EAAAA,CAAAA,GAAW,CACpBiJ,OAAQ0V,EAAAA,EAAAA,CAAAA,OAA6B,EAG3C,CACF,GAEApC,GAASyC,CAAAA,EAAAA,EAAAA,EAAAA,EAAsB,CAAEF,GAAIhE,EAAQiE,IAAI,CAAE7Y,QAAAA,EAAQ,IAC3DyT,YAEJ,YAvCiCyE,CAAAA,CAAAA,kCAyC3Ba,MAAgB,GAAAuF,EAAAzsB,CAAA,WAAOkmB,CAAAA,CAAmB,KAItCnD,sEAHJtB,EAAAA,MAAAA,MACF,SAAM0F,GAAoBjB,kBAA1BlD,EAAAC,IAAA,gBAEgB,SAAMjB,GAAsB,kBAAMqC,GAAU6B,aACxDnD,CAAAA,MADEA,CAAAA,EAAUC,EAAAC,IAAA,IACZF,KAAAA,EAAAA,EAAS7R,MAAM,IACjB2Q,GACE,GAAiBlhB,MAAA,CAAd0C,GAAE,YAAY,KACjB,GAAAqpB,EAAAroB,GAAA,EAAC6e,EAAAA,CAAsBA,CAAAA,CAACC,OAAQJ,EAAQK,eAAe,UACpD/f,GAAE,4DAGPue,mCAGN,YAf6BsE,CAAAA,CAAAA,kCAiBvBiB,MAAsB,GAAAsF,EAAAzsB,CAAA,WAAOqmB,CAAAA,CAAwB,KACnDtD,EACAuD,EACAJ,kEAFU,SAAMhB,GAAgB,kBAAMb,GAAUgC,oBAAhDtD,EAAUC,EAAAC,IAAA,GACVqD,EAAoB,GAAIrP,CAAAA,GAAAA,EAAUoP,GAAa5H,KAAK,CAAC8H,EAAAA,EAAqBA,EAC1EL,EAASM,CAAAA,EAAAA,EAAAA,EAAAA,EAAgB,GAAIvP,CAAAA,GAAAA,EAAUqP,GAAoB,IAE7DvD,IACF2B,GAAe3B,EAAS,CACtBxO,KAAM,eACNkS,oBAAqB,CACnBlZ,KAAM,oCACNuO,KAAM,CAAEoK,OAAAA,EAAQpb,SAAAA,CAAS,CAC3B,EACA4b,WAAY,CACVnS,KAAMoS,EAAAA,EAAAA,CAAAA,OAA0B,CAChCzV,OAAQ0V,EAAAA,EAAAA,CAAAA,OAA6B,CACrCV,OAAAA,EACApb,SAAAA,EACAsE,UAAAA,EACAyX,MAAK,CACH,CACEC,KAAM,EACN3Y,QAAAA,GACA4Y,GAAIhE,EAAQiE,IAAI,CAChB9V,OAAQ0V,EAAAA,EAAAA,CAAAA,OAA6B,EAEvC,CACEE,KAAM,EACN3Y,QAASlG,EAAAA,EAAAA,CAAAA,GAAW,CACpB8e,GAAI,GACJ7V,OAAQ0V,EAAAA,EAAAA,CAAAA,OAA6B,EAEvC,CACEE,KAAM,EACN3Y,QAAAA,GACA4Y,GAAI,GACJ7V,OAAQ0V,EAAAA,EAAAA,CAAAA,OAA6B,EAG3C,CACF,GAEApC,GAASyC,CAAAA,EAAAA,EAAAA,EAAAA,EAAsB,CAAEF,GAAIhE,EAAQiE,IAAI,CAAE7Y,QAAAA,EAAQ,IAC3DyT,YAEJ,YA5CmCyE,CAAAA,CAAAA,kCAuD7Be,GAAgB5jB,CAAAA,EAAAA,EAAAA,WAAAA,EAAY,GAAAipB,EAAAzsB,CAAA,YAAY,KACtC+iB,kEAAU,SAAMf,GAAsB,kBAAMsC,qBAC9CvB,CAAAA,MADEA,CAAAA,EAAUC,EAAAC,IAAA,IACZF,KAAAA,EAAAA,EAAS7R,MAAM,IACjB2Q,GAAaxe,GAAE,oBAAqB,GAAAqpB,EAAAroB,GAAA,EAAC6e,EAAAA,CAAsBA,CAAAA,CAACC,OAAQJ,EAAQK,eAAe,IAC3FxB,YAEJ,GAAG,CAAC0C,GAAWjhB,GAAGwe,GAAcG,GAAuBJ,GAAO,EAEvDyF,GAAoBhN,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EACzB,GAAAqS,EAAAroB,GAAA,EAAC6G,EAAAA,CAAAA,CAAAA,YAAmB,EAClBiW,QAASA,GACT7V,IAAKA,EACL2J,cAAeA,EACfqS,IAAK9X,GACLgY,QAAShQ,EACT1I,QAASA,EACTjB,IAAKA,EACLiE,WAAYA,EACZnG,cAAeA,GACf4b,UAAWzc,EACXgD,WAAYA,EACZmW,gBAAiBA,GACjB9N,UAAWA,GACXsR,kBAAmBtC,KAAiBuC,EAAAA,CAAAA,CAAAA,MAAwB,CAC5DtC,gBAAiBA,GACjBuC,0BAA2BxZ,KAAYlG,EAAAA,EAAAA,CAAAA,GAAW,EAAIkG,KAAYlG,EAAAA,EAAAA,CAAAA,WAAmB,CACrF4d,sBAAuBA,GACvBnC,SAAU,GACVqB,UAAWA,GACX6C,gBAAiBhE,GACjBiE,UAAW5B,GACXmB,cAAeA,GACfU,oBAzCwB,SAACC,CAAAA,CAAAA,OAC3B,GAAA2E,EAAAroB,GAAA,EAAC2jB,EAAAA,CAAeA,CAAAA,CACdC,mBAAoBF,EACpBG,kBAAmB/R,GAAU9C,QAAQ,GACrC3B,oBAAqBA,GACrB2T,mBAAoBA,QAsCtB,GACA,GACA,sBAA0B1kB,MAAA,CAAJ2K,IAAAA,EA5BG+O,CAAAA,EAAAA,CA+BpB8N,GAAqB9N,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAC1B,GAAAqS,EAAAroB,GAAA,EAAC6G,EAAAA,CAAAA,CAAAA,aAAoB,EACnBuc,kBAAmBtC,KAAiBuC,EAAAA,CAAAA,CAAAA,MAAwB,CAC5DJ,IAAK3b,GACLkc,UAAWX,GACXM,QAAShQ,EACT+P,UAAWzc,EACX4Y,SAAU,GACViE,0BAA2BxZ,KAAYlG,EAAAA,EAAAA,CAAAA,GAAW,EAAIkG,KAAYlG,EAAAA,EAAAA,CAAAA,WAAmB,MAR7DoS,CAAAA,EAAAA,CAYrB+N,GAA6B/N,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAS,GAAAqS,EAAAroB,GAAA,EAACgkB,EAAAA,EAAWA,CAAAA,CAACC,YAAaC,EAAAA,EAAAA,CAAAA,YAAuB,MAA1DlO,CAAAA,EAAAA,QAapC,GAQI,CAACkK,IAAc5Y,GAAc6X,EAAE,CAAC,GAC3B,GAAAkJ,EAAAroB,GAAA,EAAC6G,EAAAA,CAAAA,CAAAA,SAAAA,CAAAA,iBAAkC,EAAC0Y,UAAWA,IAAa+B,GAAayB,cAAeA,KAG5FpZ,EAIDrC,GAAcE,EAAE,CAAC,GAEjB,GAAA6gB,EAAAroB,GAAA,EAAC6G,EAAAA,CAAAA,CAAAA,SAAAA,CAAAA,qBAAsC,EACrCJ,SAAUA,EACV6hB,oBAAqBrH,GAAY5kB,MAAM,CAAG,EAC1CksB,mBAAoB7G,IAAgBJ,GACpCwC,kBAAmBA,GACnBd,iBAAkBA,YAElB,GAAAqF,EAAAroB,GAAA,EAAC6G,EAAAA,CAAAA,CAAAA,QAAe,EACdwY,SAAU,GACV/X,cAAeA,GACf6c,iBACEzE,CAAAA,IAAgB,GAAhBA,CAAAA,EAAAA,EAAAA,EAAO,CAAC5V,GAAQ,GAAhB4V,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAkBtT,MAAM,IAAKpF,EAAWoF,MAAM,CAAGuT,IAAe,GAAfA,CAAAA,EAAAA,EAAAA,EAAM,CAAC7V,GAAQ,GAAf6V,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAiBvT,MAAM,CAAGpF,EAAWoF,MAAM,CAE9FgY,YAAa1E,CAAAA,IAAgB,GAAhBA,CAAAA,EAAAA,EAAAA,EAAO,CAAC5V,GAAQ,GAAhB4V,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAkBtT,MAAM,IAAK5O,EAAM4O,MAAM,CAAGuT,IAAe,GAAfA,CAAAA,EAAAA,EAAAA,EAAM,CAAC7V,GAAQ,GAAf6V,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAiBvT,MAAM,CAAG5O,EAAM4O,MAAM,CAC/FwE,cAAeA,EACfuC,aAAcA,EACd0M,iBAAkBA,EAClBC,sBAAuBA,GACvBuE,kBAAmBpD,GAAY5kB,MAAM,CACrCioB,mBAhDmB,UAAM,CAC/B,IAAMjoB,EAAa4kB,GAAX5kB,MAAAA,CACJA,IACEA,EAAS,EACX0nB,KAEA5D,GAASyC,CAAAA,EAAAA,EAAAA,EAAAA,EAAsB,CAAEF,GAAIzB,EAAW,CAAC,EAAE,CAACsD,IAAI,CAAEza,QAAAA,EAAQ,IAGxE,MA8CE,GAAAue,EAAAroB,GAAA,EAAC6G,EAAAA,CAAAA,CAAAA,SAAAA,CAAAA,cAA+B,EAC9BJ,SAAUA,EACVib,aAAcA,GACdsB,iBAAkBA,KAlCb,GAAAqF,EAAAroB,GAAA,EAAC6G,EAAAA,CAAAA,CAAAA,SAAAA,CAAAA,uBAAwC,KAX9C,GAAAwhB,EAAAroB,GAAA,EAAC6G,EAAAA,CAAAA,CAAAA,SAAAA,CAAAA,iBAAkC,WACjC,GAAAwhB,EAAAroB,GAAA,EAAC8kB,EAAAA,CAAmBA,CAAAA,CAAC9iB,MAAM,UAGhC,wZCjXUwmB,EAAuB,SAAC1L,CAAAA,CAAkBhT,CAAAA,CAAqB,CAC1E,IAAM2e,EAAmBC,EAAAA,CAAAA,CAAAA,SAAqB,CAAC5e,GAAWlG,EAAAA,EAAAA,CAAAA,WAAmB,CAAGA,EAAAA,EAAAA,CAAAA,GAAW,CAK3F,MAAO,CACL+kB,cALeC,CAAAA,EAAAA,EAAAA,EAAAA,EAAO9L,GAAWhT,GAAW,CAAC,gBAAiBgT,EAAShT,EAAQ,CAAE,GAAA2U,EAAA9iB,CAAA,sDACjFktB,MAAAA,GAAAA,CAAAA,EAAAA,EAAAA,EAAAA,EAAmB/L,EAAS2L,SADtBhR,IAAAA,CAOV,aCDAqR,EAV6B,SAAC1b,CAAAA,CAAiBub,CAAAA,CAA0B,CACvE,IAAMI,EAAWC,CAAAA,EAAAA,EAAAA,EAAAA,EAAqBL,GAMtC,MAAO,CAAErL,SAJane,CAAAA,EAAAA,EAAAA,WAAAA,EAAY,GAAAsf,EAAA9iB,CAAA,YAAY,0CAC5C,SAAOotB,EAASE,OAAO,CAAC7b,KAC1B,GAAG,CAAC2b,EAAU3b,EAAQ,CAEW,CACnC,8ICsBA,IAAM8b,EAAeprB,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,oCAI3B,SAAAE,CAAA,SAAeC,EAAZA,KAAAA,CAAkB+J,YAAY,CAACC,EAAE,GA+IxCkhB,EAjIqE,SAAAnrB,CAAA,CAQ/D,KAPJiJ,EAAAA,EAAAA,GAAAA,CACAzJ,EAAAA,EAAAA,KAAAA,CACAiJ,EAAAA,EAAAA,QAAAA,CACAO,EAAAA,EAAAA,UAAAA,CACAkP,EAAAA,EAAAA,iBAAAA,CACAC,EAAAA,EAAAA,YAAAA,CACA5X,EAAAA,EAAAA,SAAAA,CAEMS,EAAQC,CAAAA,EAAAA,EAAAA,EAAAA,IAAND,CAAAA,CACFwe,EAAmBC,CAAAA,EAAAA,EAAAA,CAAAA,IAAjBD,YAAAA,CACqC+C,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,IAArCzD,EAAqCyD,EAArCzD,OAAAA,CAAShT,EAA4ByW,EAA5BzW,OAAAA,CAASsf,EAAmB7I,EAAnB6I,cAAAA,CACpBC,EAAyBC,CAAAA,EAAAA,EAAAA,CAAAA,IAAvBD,kBAAAA,CAEF/L,EAAeiM,EAAqBtiB,EADhBuhB,EAAqB1L,EAAShT,GAAhD6e,aAAAA,EACArL,QAAAA,CAC8CI,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,IAA9CC,EAA8CD,EAA9CC,qBAAAA,CAAuBC,EAAuBF,EAAvBE,OAAAA,CAGzBG,EAAiBxL,CADNuL,EAAAA,EAAAA,EAAAA,EAAiB5H,GACF8H,OAAO,CAAC,EAAGpL,EAAAA,SAAAA,CAAAA,UAAoB,EAGzD4W,EAAUC,EADEf,CAAAA,CAAAA,SAAqB,CAAC5e,GACZlG,EAAAA,EAAAA,CAAAA,WAAmB,CAAGA,EAAAA,EAAAA,CAAAA,GAAW,CACvD8lB,EAAere,CAAAA,EAAAA,EAAAA,OAAAA,EAAQ,kBAAMvB,IAAY0f,GAAS,CAAC1f,EAAS0f,EAAQ,EAEpEG,EAAexqB,CAAAA,EAAAA,EAAAA,WAAAA,EAAY,UAAM,CACrCZ,MAAAA,GAAAA,GACF,EAAG,CAACA,EAAU,EAYRigB,GAAgBrf,CAAAA,EAAAA,EAAAA,WAAAA,EAAY,GAAAsf,EAAA9iB,CAAA,YAAY,KACtC+iB,kEAAU,SAAMf,EAAsB,kBAAML,oBAC9CoB,CAAAA,MADEA,CAAAA,EAAUC,EAAAC,IAAA,IACZF,KAAAA,EAAAA,EAAS7R,MAAM,IACjB2Q,EACE,GAAkBlhB,MAAA,CAAf0C,EAAE,aAAa,KAClB,GAAAuI,EAAAvH,GAAA,EAAC6e,EAAAA,CAAsBA,CAAAA,CAACC,OAAQJ,EAAQK,eAAe,UACpD/f,EAAE,wDAAyD,CAAEoN,OAAQ,MAAO,MAGjFud,WAEJ,GAAG,CAAC3qB,EAAGse,EAAUK,EAAuBH,EAAcmM,EAAa,EAEnE,MACE,GAAApiB,EAAAvH,GAAA,EAAC4pB,EAAAA,EAAKA,CAAAA,CACJ9pB,MAAO4pB,EAAe1qB,EAAE,gBAAkBA,EAAE,0BAA0B,CACtEgC,MAAO,CAAEV,SAAU,OAAQ,EAC3B/B,UAAWorB,WAEX,GAAApiB,EAAA3H,IAAA,EAACwB,EAAAA,CAAIA,CAAAA,CAAC4d,cAAc,mBAClB,GAAAzX,EAAA3H,IAAA,EAACwB,EAAAA,CAAIA,CAAAA,CAAC+K,eAAe,gBAAgBxL,GAAG,iBACtC,GAAA4G,EAAAvH,GAAA,EAACkpB,EAAAA,UACC,GAAA3hB,EAAAvH,GAAA,EAACyH,EAAAA,CAAcA,CAAAA,CACbzF,MAAO,GACP0F,OAAQ,GACRC,QAAQ,WACRC,aAAcpK,EACdqK,eAAgBb,MAGpB,GAAAO,EAAAvH,GAAA,EAACY,EAAAA,CAAIA,CAAAA,CAACmM,KAAI,GAACE,SAAS,gBACjBxG,OAGJ,CAACijB,GACA,GAAAniB,EAAAvH,GAAA,EAAC6pB,EAAAA,CAAOA,CAAAA,CAAClpB,GAAG,OAAOgH,QAAQ,UAAUmiB,KAAM,GAAOzpB,EAAE,oBAClD,GAAAkH,EAAAvH,GAAA,EAAC+pB,EAAAA,CAAWA,CAAAA,UACV,GAAAxiB,EAAA3H,IAAA,EAACoqB,EAAAA,CAAOA,CAAAA,CAACC,IAAI,iBACX,GAAA1iB,EAAA3H,IAAA,EAACoqB,EAAAA,CAAOA,CAAAA,CAACC,IAAI,gBACX,GAAA1iB,EAAAvH,GAAA,EAACkqB,EAAAA,CAASA,CAAAA,CAACpgB,QAASA,IAAW,IAAC,GAAAvC,EAAAvH,GAAA,EAAC0b,EAAAA,CAAgBA,CAAAA,CAAC7a,MAAM,YACxD,GAAA0G,EAAAvH,GAAA,EAACkqB,EAAAA,CAASA,CAAAA,CAACpgB,QAASlG,EAAAA,EAAAA,CAAAA,GAAW,MAEjC,GAAA2D,EAAAvH,GAAA,EAACmqB,OAAAA,UAAMnrB,EAAE,uCAKjB,GAAAuI,EAAA3H,IAAA,EAACwqB,EAAAA,EAAaA,CAAAA,CAAC1N,QAAQ,iBACrB,GAAAnV,EAAA3H,IAAA,EAACW,EAAAA,EAAGA,CAAAA,CAACI,GAAG,gBACN,GAAA4G,EAAAvH,GAAA,EAACY,EAAAA,CAAIA,CAAAA,CAACqM,SAAS,OAAOpM,MAAM,YAAYkM,KAAI,GAACrM,GAAG,gBAC7C1B,EAAE,UAEL,GAAAuI,EAAAvH,GAAA,EAACY,EAAAA,CAAIA,CAAAA,CAACqM,SAAS,OAAOpM,MAAM,aAAagB,GAAG,MAAMkL,KAAI,GAACrM,GAAG,gBACvD1B,EAAE,eAGP,GAAAuI,EAAA3H,IAAA,EAACW,EAAAA,EAAGA,CAAAA,WACF,GAAAgH,EAAAvH,GAAA,EAACY,EAAAA,CAAIA,CAAAA,CAACqM,SAAS,OAAOod,WAAW,OAAOtd,KAAI,YACzCgR,IAEH,GAAAxW,EAAAvH,GAAA,EAACof,EAAAA,CAAOA,CAAAA,CACNze,GAAG,OACH2e,OAAO,IACP/hB,KAAK,OACL8hB,SAAU,EACVlkB,MAAOgb,EACPlJ,SAAS,OACTpM,MAAM,eAEP6oB,EACC,GAAAniB,EAAAvH,GAAA,EAAC+B,EAAAA,CAAMA,CAAAA,CACLC,MAAM,OACN2F,QAAQ,YACRzF,SAAUooB,GAAa,CAACxN,GAAWsM,EACnCmB,QAASD,EAAY,GAAA/iB,EAAAvH,GAAA,EAACwqB,EAAAA,CAAaA,CAAAA,CAACC,KAAI,GAAC5pB,MAAM,iBAAoB,IAAI,CACvEoB,QAASuc,YAER8L,EAAYtrB,EAAE,cAAgBA,EAAE,UAAU,GAG7C,GAAAuI,EAAAvH,GAAA,EAAC+B,EAAAA,CAAMA,CAAAA,CAACC,MAAM,OAAO2F,QAAQ,YAAY1F,QA1FzB,UAAM,KAC5B2C,EAAAA,CAAAA,IAAe,GAAfA,CAAAA,EAAAA,OAAO8lB,QAAQ,GAAf9lB,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAiB+lB,aAAa,IAAK,IACrCtU,EAAAA,CAAAA,CAAAA,GAAU,CACR,yBACAC,KAAKsU,SAAS,CAAC,CAAE3jB,IAAAA,EAAKzJ,MAAAA,EAAOiJ,SAAAA,EAAUO,WAAAA,EAAYkP,kBAAAA,EAAmBC,aAAAA,CAAa,IAGvFkT,EAAmBG,EACrB,WAmFexqB,EAAE,8BAEN,WAMb,6DG9CK6rB,EAALA,gJFjGAC,EA5B+B,SAAC1d,CAAAA,CAAiBmQ,CAAAA,CAAW,CAC1D,IAAMwN,EAAsBC,CAAAA,EAAAA,EAAAA,EAAAA,IAC6BtN,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,IAAjDC,EAAiDD,EAAjDC,qBAAAA,CAAuBC,EAA0BF,EAA1BE,OAAAA,CACzBqN,EAAuBC,CAAAA,EAAAA,EAAAA,CAAAA,IAArBD,gBAAAA,CAsBR,MAAO,CAAEE,SApBQhsB,CAAAA,EAAAA,EAAAA,WAAAA,EAAY,GAAAsf,EAAA9iB,CAAA,YAAY,KACjC+iB,kEAAU,SAAMf,EAAsB,UAAM,CAChD,OAAOsN,EAAiBF,EAAqB,WAAY,CAAC3d,EAAQ,CAAE,CAAEge,SAAUC,EAAAA,EAAsBA,EACxG,iBAEI3M,CAAAA,MAJEA,CAAAA,EAAUC,EAAAC,IAAA,IAIZF,KAAAA,EAAAA,EAAS7R,MAAM,GAAI0Q,GACrBA,UAEJ,GAAG,CAACnQ,EAAS2d,EAAqBE,EAAkBtN,EAAuBJ,EAAO,EAY/D+N,WAVAnsB,CAAAA,EAAAA,EAAAA,WAAAA,EAAY,GAAAsf,EAAA9iB,CAAA,YAAY,KACnC+iB,kEAAU,SAAMf,EAAsB,UAAM,CAChD,OAAOsN,EAAiBF,EAAqB,WAAY,CAAC3d,EAAQ,CAAE,CAAEge,SAAUC,EAAAA,EAAsBA,EACxG,iBAEI3M,CAAAA,MAJEA,CAAAA,EAAUC,EAAAC,IAAA,IAIZF,KAAAA,EAAAA,EAAS7R,MAAM,GAAI0Q,GACrBA,UAEJ,GAAG,CAACnQ,EAAS2d,EAAqBE,EAAkBtN,EAAuBJ,EAAO,EAEnDgO,aAAAA,CAAa,CAC9C,wQChBA,IAAM7iB,EAAY5K,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,qCAUtB0tB,EAAiB,UAAM,CAC3B,IAAMxsB,EAAQC,CAAAA,EAAAA,EAAAA,EAAAA,IAAND,CAAAA,CAER,MACE,GAAAuI,EAAA3H,IAAA,EAAA2H,EAAAwE,QAAA,YACG/M,EACE,sKAEH,GAAAuI,EAAAvH,GAAA,EAACgJ,EAAAA,CAAYA,CAAAA,CACXlE,KAAK,6GACL6X,SAAQ,YAEP3d,EAAE,kBAIX,EAqCAysB,EAnCsD,SAAAnE,CAAA,CAA8C,KAA3CxnB,EAAAA,EAAAA,KAAAA,CAAO4rB,EAAAA,EAAAA,WAAAA,CAAaC,EAAAA,EAAAA,MAAAA,CAAWpf,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAA/BzM,QAAO4rB,cAAaC,WACrEnc,EAAenF,CAAAA,EAAAA,EAAAA,CAAAA,IAAbmF,QAAAA,CACJoc,EAAM,IAAI,CAEiCxN,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAW,GAAA7W,EAAAvH,GAAA,EAACwrB,EAAAA,CAAAA,GAAmB,GAAAna,EAAA1V,CAAA,GAC5E0Z,UAAW,OACP7F,GAAY,CAAEqc,YAAa,IAAK,IAF9BxN,EAAuCD,EAAvCC,SAAAA,CAAWC,EAA4BF,EAA5BE,OAAAA,CAASC,EAAmBH,EAAnBG,cAAAA,CAW5B,OANIoN,EACFC,EAAMD,EACIG,IAASvf,IACnBqf,CAAAA,EAAM,GAAArkB,EAAAvH,GAAA,EAAC+B,EAAAA,CAAMA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAKwK,GAAAA,EAIlB,GAAAhF,EAAA3H,IAAA,EAAA2H,EAAAwE,QAAA,YACE,GAAAxE,EAAA3H,IAAA,EAAC8I,EAAAA,WACC,GAAAnB,EAAA3H,IAAA,EAACwB,EAAAA,CAAIA,CAAAA,WACH,GAAAmG,EAAAvH,GAAA,EAACE,EAAAA,CAAOA,CAAAA,CAAC4M,GAAG,eAAOhN,IACnB,GAAAyH,EAAAvH,GAAA,EAACif,EAAAA,CAAWA,CAAAA,CAACtL,IAAK0K,WAChB,GAAA9W,EAAAvH,GAAA,EAAC+rB,EAAAA,CAAQA,CAAAA,CAAC/pB,MAAM,OAAO0F,OAAO,WAE/B6W,GAAkBD,KAGrB,GAAA/W,EAAAvH,GAAA,EAACY,EAAAA,CAAIA,CAAAA,CAACC,MAAM,aAAaoM,SAAS,gBAC/Bye,OAGJE,IAGP,w0ECrDO,IAAMI,GAAgBluB,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,qCAe1BmuB,GAAcnuB,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,qCAYxBouB,GAAiBpuB,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,oCAiBd,SAAAE,CAAA,MAAGC,EAAAA,EAAAA,KAAAA,QAAuBkuB,EAAhBA,QAAAA,CAA2BluB,EAAMC,MAAM,CAACkuB,UAAU,CAAGnuB,EAAMC,MAAM,CAACgE,QAAQ,EAExG,SAAAlE,CAAA,SAAeC,EAAZA,KAAAA,CAAkB+J,YAAY,CAAC0O,EAAE,EAMtCsV,GACc,SAAAhuB,CAAA,MAAGC,EAAAA,EAAAA,KAAAA,QAAuBkuB,EAAhBA,QAAAA,CAA2BluB,EAAMC,MAAM,CAACkuB,UAAU,CAAGnuB,EAAMC,MAAM,CAACgE,QAAQ,EAElG+pB,GACS,SAAAjuB,CAAA,MAAGC,EAAAA,EAAAA,KAAAA,CAAOouB,EAAAA,EAAAA,MAAAA,CAAQF,EAAAA,EAAAA,QAAAA,QACzBE,EAASpuB,EAAMC,MAAM,CAACouB,OAAO,CAAGH,EAAWluB,EAAMC,MAAM,CAACkuB,UAAU,CAAGnuB,EAAMC,MAAM,CAACgE,QAAQ,GAInFqqB,GAAYzuB,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,oCAWX,SAAAE,CAAA,SAAeC,EAAZA,KAAAA,CAAkBC,MAAM,CAACsT,UAAU,GAIjDgb,GAAU1uB,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,oCAEjB,SAAAE,CAAA,SAAeC,EAAZA,KAAAA,CAAkBC,MAAM,CAACkS,UAAU,EAChC,SAAApS,CAAA,SAAeC,EAAZA,KAAAA,CAAkBC,MAAM,CAACsT,UAAU,EAGjD,SAAAxT,CAAA,SAAeC,EAAZA,KAAAA,CAAkBC,MAAM,CAACkuB,UAAU,EAM7C,SAAApuB,CAAA,SAAeC,EAAZA,KAAAA,CAAkB+J,YAAY,CAAC0O,EAAE,GAI3B+V,GAAW3uB,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,qCACrB4uB,GAAc5uB,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,oCAchC+sB,EAAAA,EAAAA,GAAAA,CAAAA,EAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EACH,qBADGA,CAAAA,CAAAA,EAEH,mBAFGA,CAAAA,CAAAA,EAGH,iBAGK,IAAM8B,GAAsD,SAAA3uB,CAAA,CAM7D,OALJupB,EAAAA,EAAAA,UAAAA,CACAjgB,EAAAA,EAAAA,aAAAA,CACA/I,EAAAA,EAAAA,SAAAA,CACAquB,EAAAA,EAAAA,SAAAA,CACA3lB,EAAAA,EAAAA,GAAAA,CAE6BsZ,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,IAArBzD,EAAqByD,EAArBzD,OAAAA,CAAShT,EAAYyW,EAAZzW,OAAAA,CAC2BjL,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,QAAAA,EAAgBgsB,EAAMgC,OAAO,KAAlEC,EAAqCjuB,CAAAA,CAAAA,EAAAA,CAArBkuB,EAAqBluB,CAAAA,CAAAA,EAAAA,CACVA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IAAK,GAAzCmuB,EAA2BnuB,CAAAA,CAAAA,EAAAA,CAAhBouB,EAAgBpuB,CAAAA,CAAAA,EAAAA,CACEA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IAAK,GAA3CqhB,EAA6BrhB,CAAAA,CAAAA,EAAAA,CAAjBquB,EAAiBruB,CAAAA,CAAAA,EAAAA,CAC9BG,EAAQC,CAAAA,EAAAA,EAAAA,EAAAA,IAAND,CAAAA,CACFwjB,EAA+BnX,CAAAA,EAAAA,EAAAA,OAAAA,EACnC,eAAOlI,SAAAA,EAAA,GACL,GAAAgqB,EAAAxxB,CAAA,EADKwH,EACJ0nB,EAAMgC,OAAO,CAAG7tB,EAAE,YACnB,GAAAmuB,EAAAxxB,CAAA,EAFKwH,EAEJ0nB,EAAMuC,MAAM,CAAGpuB,EAAE,WAClB,GAAAmuB,EAAAxxB,CAAA,EAHKwH,EAGJ0nB,EAAMwC,KAAK,CAAGruB,EAAE,UAHZmE,CAAA,EAKP,CAACnE,EAAE,EAECsuB,EAAwCjiB,CAAAA,EAAAA,EAAAA,OAAAA,EAC5C,eAAOlI,SAAAA,EAAA,GACL,GAAAgqB,EAAAxxB,CAAA,EADKwH,EACJ0nB,EAAMgC,OAAO,CAAG7tB,EAAE,oCACnB,GAAAmuB,EAAAxxB,CAAA,EAFKwH,EAEJ0nB,EAAMuC,MAAM,CAAGpuB,EAAE,sCAClB,GAAAmuB,EAAAxxB,CAAA,EAHKwH,EAGJ0nB,EAAMwC,KAAK,CAAGruB,EAAE,qCAHZmE,CAAA,EAKP,CAACnE,EAAE,EAECuuB,EAAqBliB,CAAAA,EAAAA,EAAAA,OAAAA,EAAQ,kBAAMyF,OAAOC,IAAI,CAACuc,IAAiB,CAACA,EAAe,EAChFE,EAAcniB,CAAAA,EAAAA,EAAAA,OAAAA,EAAQ,UAAM,CAChC,MAAOoiB,CAAAA,EAAAA,GAAAA,EAAAA,EAAsBnmB,EAC/B,EAAG,CAACA,EAAc,EACZomB,EAAmBC,CAAAA,EAAAA,GAAAA,CAAAA,EAA6B7Q,EAAShT,GAAvD4jB,YAAAA,CAC+BjG,EAAAA,CAAAA,EAAAA,GAAAA,CAAAA,EAAsBxgB,EAAKsgB,GAA1DtH,EAA+BwH,EAA/BxH,SAAAA,CAAW1C,EAAoBkK,EAApBlK,MAAAA,CAAQwC,EAAY0H,EAAZ1H,OAAAA,CAErB6N,EAAaC,CAAAA,EAAAA,EAAAA,EAAAA,EAAsBH,GACEhQ,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,IAAnCC,EAAmCD,EAAnCC,qBAAAA,CAAuBC,GAAYF,EAAZE,OAAAA,CACzBJ,GAAmBC,CAAAA,EAAAA,EAAAA,CAAAA,IAAjBD,YAAAA,CAEuCY,GAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAC7C,GAAA7W,EAAAvH,GAAA,EAACY,EAAAA,CAAIA,CAAAA,UACF5B,EACC,sKAGJ,CACEqW,UAAW,OACb,GARMgJ,GAAuCD,GAAvCC,SAAAA,CAAWC,GAA4BF,GAA5BE,OAAAA,CAASC,GAAmBH,GAAnBG,cAAAA,CAW5BjP,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,UAAM,CACTse,GACLA,EAAWE,UAAU,CAACvG,EAAW1c,OAAO,EAAEkjB,IAAI,CAAC,SAACC,CAAAA,CAAY,CAC1Dd,EAAcc,EAChB,EACF,EAAG,CAACzG,EAAYqG,EAAW,EAE3B,IAAMK,MAAe,GAAAxP,EAAA9iB,CAAA,YAAY,KASvB+iB,EASEA,qEAjBNoO,IAAmBjC,EAAMgC,OAAO,CAAhCC,MAAAA,aACFG,EAAa,IACbL,EAAUY,EAAa,UAAM,CACvBtN,EAAY6M,EAAkBlC,EAAMwC,KAAK,EACxCN,EAAkBlC,EAAMuC,MAAM,EACnCH,EAAa,GACf,mBACSH,IAAmBjC,EAAMuC,MAAM,CAA/BN,MAAAA,MACO,SAAMnP,EAAsBsC,iBACxCvB,CAAAA,MADEA,CAAAA,EAAUC,EAAAC,IAAA,IACZF,KAAAA,EAAAA,EAAS7R,MAAM,IACjB2Q,GAAaxe,EAAE,oBAAqB,GAAAuI,EAAAvH,GAAA,EAAC6e,EAAAA,CAAsBA,CAAAA,CAACC,OAAQJ,EAAQK,eAAe,IAC3FgO,EAAkBlC,EAAMwC,KAAK,EAC7B9P,kBAGF0P,EAAa,qBAEK,iCAAMtP,EAAsB,kBAAMoC,EAAQyN,mBACtD9O,CAAAA,MADEA,CAAAA,EAAUC,EAAAC,IAAA,IACZF,KAAAA,EAAAA,EAAS7R,MAAM,IACjB2Q,GACE,GAAelhB,MAAA,CAAZ0C,EAAE,UAAU,KACf,GAAAuI,EAAAvH,GAAA,EAAC6e,EAAAA,CAAsBA,CAAAA,CAACC,OAAQJ,EAAQK,eAAe,UACpD/f,EAAE,8CAGPue,IACAhf,MAAAA,GAAAA,yBAGF2vB,QAAQC,KAAK,CADNA,EAAAA,IAAAA,wBAGPlB,EAAa,2BAGnB,aAnCMgB,kCAoCN,MACE,GAAA1mB,EAAA3H,IAAA,EAACgqB,EAAAA,EAAKA,CAAAA,CAAC9pB,MAAOd,EAAE,yBAA0BgD,MAAM,QAAQzD,UAAWA,YAChEggB,IAAkBD,GACnB,GAAA/W,EAAA3H,IAAA,EAAC4sB,GAAAA,CAAQ7Y,IAAK0K,aACZ,GAAA9W,EAAAvH,GAAA,EAACysB,GAAAA,UAAUztB,EAAE,uFACb,GAAAuI,EAAAvH,GAAA,EAAC0sB,GAAAA,UACC,GAAAnlB,EAAAvH,GAAA,EAAC+rB,EAAAA,CAAQA,CAAAA,CAAAA,QAGb,GAAAxkB,EAAAvH,GAAA,EAACO,EAAAA,EAAGA,CAAAA,CAAC6tB,GAAI,GAAIC,GAAI,GAAI5R,GAAI,YACtB8Q,EAAmBluB,GAAG,CAAC,SAACojB,CAAAA,CAAM6L,CAAAA,CAAU,CACvC,MACE,GAAA/mB,EAAA3H,IAAA,EAACssB,GAAAA,CAECG,OAAQ5J,IAASqK,EAAeyB,QAAQ,GACxCpC,SAAUqC,SAAS/L,GAAQ+L,SAAS1B,EAAeyB,QAAQ,cAE1D9L,IAASqK,EAAeyB,QAAQ,GAC/B,GAAAhnB,EAAAvH,GAAA,EAACyuB,EAAAA,CAAQA,CAAAA,CAACzsB,MAAO,KAEjB,GAAAuF,EAAAvH,GAAA,EAACgsB,GAAAA,UACEwC,SAAS/L,GAAQ+L,SAAS1B,EAAeyB,QAAQ,IAChD,GAAAhnB,EAAAvH,GAAA,EAAC0uB,EAAAA,CAAaA,CAAAA,CAAC7tB,MAAM,QAAQmB,MAAO,KAEpCssB,EAAQ,CACT,EAEJ,CACD,GAAA/mB,EAAAvH,GAAA,EAACisB,GAAAA,UAAazJ,CAAK,CAACC,EAAK,KAfpBA,EAkBX,KAEF,GAAAlb,EAAA3H,IAAA,EAAC2sB,GAAAA,WACC,GAAAhlB,EAAA3H,IAAA,EAACgB,EAAAA,CAAIA,CAAAA,CAACD,GAAG,OAAOguB,UAAU,mBACvB7B,EAAiB,EAAE,KAAG9tB,EAAEsuB,CAAc,CAACR,EAAe,KAKzD,GAAAvlB,EAAAvH,GAAA,EAAC+B,EAAAA,CAAMA,CAAAA,CACLE,QAASgsB,GACTjB,UAAWA,GAAapP,GACxB5b,MAAM,OACNuoB,QAASyC,GAAapP,GAAU,GAAArW,EAAAvH,GAAA,EAACwqB,EAAAA,CAAaA,CAAAA,CAACC,KAAI,GAAC5pB,MAAM,iBAAoBwS,KAAAA,CAAS,UAEtF2Z,GAAapP,GAAU5e,EAAE,iBAAmBA,EAAEwjB,CAAK,CAACsK,EAAe,CAAC,QAK/E,EClOA8B,GAvCmF,SAAA5wB,CAAA,CAAa,OAAViJ,EAAAA,EAAAA,GAAAA,CAC9EjI,EAAQC,CAAAA,EAAAA,EAAAA,EAAAA,IAAND,CAAAA,CACFwe,EAAmBC,CAAAA,EAAAA,EAAAA,CAAAA,IAAjBD,YAAAA,CACFG,EAA4BD,CAAAA,EAAAA,EAAAA,CAAAA,IAA1BC,qBAAAA,CACqB4C,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,IAArBzD,EAAqByD,EAArBzD,OAAAA,CAAShT,EAAYyW,EAAZzW,OAAAA,CACXkW,EAAgBkI,CAAAA,EAAAA,EAAAA,CAAAA,EAAgBjhB,GAA9B+Y,SAAAA,CACF1Y,EAAoBD,CAAAA,EAAAA,EAAAA,EAAAA,EAAYJ,GAA9BK,aAAAA,CACFyD,EAAgB6V,CAAAA,EAAAA,EAAAA,EAAAA,EAAe3Z,GAA7B8D,SAAAA,CACFwc,EAAaC,CAAAA,EAAAA,EAAAA,EAAAA,EAASzc,GACtBoV,EAAWC,CAAAA,EAAAA,EAAAA,EAAAA,IAEXyO,KAA4B,GAAApQ,EAAA9iB,CAAA,WAAOkmB,CAAAA,CAAgBiN,CAAAA,CAAyB,KAC1EpQ,kEAAU,SAAMf,EAAsB,UAAM,CAChD,OAAOqC,EAAU6B,EACnB,iBACInD,CAAAA,MAHEA,CAAAA,EAAUC,EAAAC,IAAA,IAGZF,KAAAA,EAAAA,EAAS7R,MAAM,IACjB2Q,EACE,GAAiBlhB,MAAA,CAAd0C,EAAE,YAAY,KACjB,GAAAuI,EAAAvH,GAAA,EAAC6e,EAAAA,CAAsBA,CAAAA,CAACC,OAAQJ,EAAQK,eAAe,UACpD/f,EAAE,4DAGP8vB,IACA3O,EAASwH,CAAAA,EAAAA,EAAAA,EAAAA,EAAuB,CAAE7K,QAAAA,EAAS8K,KAAI,CAAG3gB,GAAM6C,QAAAA,CAAQ,WAEpE,YAdyC+X,CAAAA,CAAgBiN,CAAAA,CAAAA,kCAgBlDC,EAAoB/Y,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EACzB,GAAAzO,EAAAvH,GAAA,EAAC2sB,GAAiBA,CAChB1lB,IAAKA,EACLK,cAAeA,EACfigB,WAAYA,EACZqF,UAAWiC,OALY7Y,CAAAA,EAAAA,CAS3B,MAAO,GAAAzO,EAAAvH,GAAA,EAAC+B,EAAAA,CAAMA,CAAAA,CAACE,QAAS8sB,WAAmB/vB,EAAE,YAC/C,cCsHAgwB,GArJuE,SAAAhxB,CAAA,CAMjE,KALJoP,EAAAA,EAAAA,OAAAA,CACAtN,EAAAA,EAAAA,KAAAA,CACAoN,EAAAA,EAAAA,IAAAA,CACAI,EAAAA,EAAAA,iBAAAA,CACAD,EAAAA,EAAAA,mBAAAA,CAEMrO,EAAQC,CAAAA,EAAAA,EAAAA,EAAAA,IAAND,CAAAA,CACuEgL,EAAAA,CAAAA,EAAAA,EAAAA,UAAAA,EAAWC,GAAAA,CAAwBA,EAA1G6W,EAAuE9W,EAAvE8W,YAAAA,CAAcmO,EAAyDjlB,EAAzDilB,iBAAAA,CAAmBC,EAAsCllB,EAAtCklB,mBAAAA,CAAqBxB,EAAiB1jB,EAAjB0jB,YAAAA,CACxByB,EAAAA,EAAuB/hB,EAAS6hB,GAAhE1D,EAAgC4D,EAA9B5D,YAAAA,CAAiB6D,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAaD,EAAAA,CAA9B5D,iBACF8D,EAAwBC,CAAAA,EAAAA,EAAAA,CAAAA,EAAmB,CAAEroB,IAAKmG,EAAS0T,aAAAA,EAAc4M,aAAAA,CAAa,GACtF6B,EAA0BC,CAAAA,EAAAA,EAAAA,EAAAA,EAAwBliB,EAAmBD,GAMrEoiB,EAAyBC,CALPpiB,EAAkB6R,EAAE,CAAC,GACzCkQ,EACA/hB,EAAkB9F,EAAE,CAAC,IAAMsZ,IAAiBuC,EAAAA,CAAAA,CAAAA,MAAwB,CACpEgM,EACAE,CAAuB,EACoB5jB,cAAc,CAAC0H,KAAAA,EAAW,CAAE8S,sBAAuB,CAAE,GACpG7W,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,UAAM,CACd2f,GACF,EAAG,CAACA,EAAmBI,EAAsB,EAC7C,IAAMM,EAAYxwB,CAAAA,EAAAA,EAAAA,WAAAA,EAAY,UAAM,CAClC,OAAQ2hB,GACN,KAAKuC,EAAAA,CAAAA,CAAAA,WAA6B,CAChC,MACE,GAAA9b,EAAAvH,GAAA,EAAC4vB,EAAYA,CACX9vB,MAAO,GAAiB2vB,MAAAA,CAAdzwB,EAAE,SAAS,KAA0B1C,MAAA,CAAvBmzB,EAAuB,KAC/C/D,YAAa1sB,EAAE,6CAGrB,MAAKqkB,EAAAA,CAAAA,CAAAA,SAA2B,CAC9B,MACE,GAAA9b,EAAAvH,GAAA,EAAC4vB,EAAYA,CACX9vB,MAAO,GAAiB2vB,MAAAA,CAAdzwB,EAAE,SAAS,KAA0B1C,MAAA,CAAvBmzB,EAAuB,KAC/C/D,YAAa1sB,EAAE,uCACfgC,MAAO,CAAE6uB,WAAY,QAAS,EAC9BlE,OACE,GAAApkB,EAAAvH,GAAA,EAACub,EAAAA,CAAuBA,CAAAA,CAACC,GAAG,kBAC1B,GAAAjU,EAAA3H,IAAA,EAACmC,EAAAA,CAAMA,CAAAA,WAAC,IAAE/C,EAAE,oBAKtB,MAAKqkB,EAAAA,CAAAA,CAAAA,UAA4B,CAC/B,MACE,GAAA9b,EAAAvH,GAAA,EAAC4vB,EAAYA,CACX9vB,MAAO,GAAiB2vB,MAAAA,CAAdzwB,EAAE,SAAS,KAA0B1C,MAAA,CAAvBmzB,EAAuB,KAC/C/D,YAAa1sB,EAAE,8DACfgC,MAAO,CAAE6uB,WAAY,QAAS,EAC9BlE,OACE,GAAApkB,EAAAvH,GAAA,EAACub,EAAAA,CAAuBA,CAAAA,CAACC,GAAG,kBAC1B,GAAAjU,EAAA3H,IAAA,EAACmC,EAAAA,CAAMA,CAAAA,WAAC,IAAE/C,EAAE,oBAKtB,MAAKqkB,EAAAA,CAAAA,CAAAA,gBAAkC,CACrC,MACE,GAAA9b,EAAAvH,GAAA,EAAC4vB,EAAYA,CACX9vB,MAAO,GAA0BxD,MAAA,CAAvBmzB,EAAuB,KACjC/D,YAAa1sB,EAAE,iEACf2sB,OAAQ,GAAApkB,EAAAvH,GAAA,EAAC8vB,EAAAA,CAAiBA,CAAAA,CAACvS,OAAQ2R,EAAqBltB,MAAM,UAGpE,MAAKqhB,EAAAA,CAAAA,CAAAA,UAA4B,CAC/B,MACE,GAAA9b,EAAAvH,GAAA,EAAC4vB,EAAYA,CACX9vB,MAAO,GAA0BxD,MAAA,CAAvBmzB,EAAuB,KACjC/D,YAAa1sB,EAAE,wCACf2sB,OAAQ,GAAApkB,EAAAvH,GAAA,EAAC+vB,GAAmBA,CAAC9oB,IAAKmG,KAGxC,MAAKiW,EAAAA,CAAAA,CAAAA,KAAuB,CAC1B,MACE,GAAA9b,EAAAvH,GAAA,EAAC4vB,EAAYA,CACX9vB,MAAO,GAA0BxD,MAAA,CAAvBmzB,EAAuB,KACjC/D,YAAa1sB,EAAE,qCACfkD,SAAQ,YAEPlD,EAAE,UAGT,MAAKqkB,EAAAA,CAAAA,CAAAA,QAA0B,CAC7B,MACE,GAAA9b,EAAAvH,GAAA,EAAC4vB,EAAYA,CACX1tB,SAAUqpB,EACVtpB,QAASmtB,EAASjE,QAAQ,CAC1BrrB,MAAO,GAA0BxD,MAAA,CAAvBmzB,EAAuB,KACjCzC,UAAWzB,EACXG,YAAa1sB,EAAE,2BACfurB,QAASgB,GAAgB,GAAAhkB,EAAAvH,GAAA,EAACwqB,EAAAA,CAAaA,CAAAA,CAACC,KAAI,GAAC5pB,MAAM,0BAElD7B,EAAE,UAGT,MAAKqkB,EAAAA,CAAAA,CAAAA,MAAwB,CAC7B,KAAKA,EAAAA,CAAAA,CAAAA,gBAAkC,CACrC,MACE,GAAA9b,EAAAvH,GAAA,EAAC4vB,EAAYA,CACX1tB,SAAUqpB,EACVtpB,QAASmtB,EAAS9D,UAAU,CAC5BxrB,MAAO,GAA0BxD,MAAA,CAAvBmzB,EAAuB,KACjCzC,UAAWzB,EACXG,YAAa1sB,EAAE,UACfurB,QAASgB,GAAgB,GAAAhkB,EAAAvH,GAAA,EAACwqB,EAAAA,CAAaA,CAAAA,CAACC,KAAI,GAAC5pB,MAAM,0BAElD7B,EAAE,UAGT,MAAKqkB,EAAAA,CAAAA,CAAAA,GAAqB,CACxB,MACE,GAAA9b,EAAAvH,GAAA,EAAC4vB,EAAYA,CACX9vB,MAAO,GAA0BxD,MAAA,CAAvBmzB,EAAuB,KACjC/D,YAAa1sB,EAAE,oCACfkD,SAAQ,YAEPlD,EAAE,UAGT,SACE,OAAO,IAAI,CAEjB,EAAG,CACD8hB,EACA9hB,EACAowB,EAASjE,QAAQ,CACjBiE,EAAS9D,UAAU,CACnBC,EACAne,EACA8hB,EACAO,EACD,EAEG5iB,EAAS,IAAI,CAQjB,MANI,CAACwW,EAAAA,CAAAA,CAAAA,UAA4B,CAAEA,EAAAA,CAAAA,CAAAA,QAA0B,CAAC,CAACte,QAAQ,CAAC+b,GACtEjU,EAAS7N,EAAE,SACF,CAACqkB,EAAAA,CAAAA,CAAAA,MAAwB,CAAEA,EAAAA,CAAAA,CAAAA,gBAAkC,CAAC,CAACte,QAAQ,CAAC+b,IACjFjU,CAAAA,EAAS7N,EAAE,WAIX,GAAAuI,EAAA3H,IAAA,EAAA2H,EAAAwE,QAAA,YACGjM,GAASA,EAAM+M,GACfK,GAAQA,EAAKyiB,OAGpB,wMC3GAvxB,CAAAA,EAAA,EAAe4mB,CAAAA,EAAAA,EAAAA,IAAAA,EA1Cf,SAAoBzY,CAA0B,CAAE,CAC9C,IAAQmE,EAAsEnE,EAAtEmE,YAAAA,CAAclH,EAAwD+C,EAAxD/C,GAAAA,CAAKvC,EAAmDsF,EAAnDtF,GAAAA,CAAKqG,EAA8Cf,EAA9Ce,iBAAAA,CAAmBsD,EAA2BrE,EAA3BqE,aAAAA,CAAkBof,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAASzjB,EAAAA,CAAtEmE,eAAclH,MAAKvC,MAAKqG,oBAAmBsD,kBACZ5G,EAAAA,CAAAA,EAAAA,EAAAA,UAAAA,EAAWC,EAAAA,CAAwBA,EAAlE6W,EAA+B9W,EAA/B8W,YAAAA,CAAc4M,EAAiB1jB,EAAjB0jB,YAAAA,CAChB1uB,EAAQC,CAAAA,EAAAA,EAAAA,EAAAA,IAAND,CAAAA,CAEFixB,EAAmBC,CAAAA,EAAAA,EAAAA,EAAAA,EAAiB5iB,EAAmBsD,EAAepH,EAAKkH,GAE3EjH,EAAa6lB,CAAAA,EAAAA,EAAAA,CAAAA,EAAmB,CAAEroB,IAAAA,EAAK6Z,aAAAA,EAAc4M,aAAAA,CAAa,GAElEyC,EACJ,CAAEC,CAAAA,EAAAA,EAAAA,CAAAA,EAAkB3mB,IAClB,CAAC2mB,CAAAA,EAAAA,EAAAA,CAAAA,EAAkB5mB,IACnB6mB,CAAAA,EAAAA,EAAAA,EAAAA,EACEC,IAAU9mB,GAAO8I,OAAO7I,GAAe,EAAC2mB,EAAAA,EAAAA,CAAAA,EAAkB1f,GAA0C,EAA1B4f,IAAU5f,EAAiB,IAEzG,IAEI6f,EACJzP,IAAiBuC,EAAAA,CAAAA,CAAAA,MAAwB,CACvC,GAAoB/mB,MAAA,CAAjB6zB,EAAiB,KAEpB,GAAA9H,EAAAzoB,IAAA,EAAAyoB,EAAAtc,QAAA,YACE,GAAAsc,EAAAroB,GAAA,EAACY,EAAAA,CAAIA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAACmM,KAAI,GAAClM,MAAM,WAAcmvB,GAAAA,CAAM/iB,SAAU,GAAIhM,QAAQ,eAAe6L,GAAG,eAC1E9N,EAAE,YAEH,GAAgE1C,MAAA,CAA9DgR,EAAkB6R,EAAE,CAAC,GAAKgR,EAAmBF,CAAgB,CAAC,OAErE,CAKH,MACE,GAAA5H,EAAAzoB,IAAA,EAAAyoB,EAAAtc,QAAA,YACE,GAAAsc,EAAAroB,GAAA,EAACyV,EAAAA,CAAUA,CAAAA,CAAC/X,EAAE,MAAMmD,MAAM,YAC1B,GAAAwnB,EAAAroB,GAAA,EAACY,EAAAA,CAAIA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAACmM,KAAI,GAAClM,MAAM,WAAcmvB,GAAAA,CAAM/iB,SAAU,YAC5CsjB,OAIT,+NCzCAC,EAb4B,UAAM,CAChC,IAA6BjQ,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,IAArBzD,EAAqByD,EAArBzD,OAAAA,CAAShT,EAAYyW,EAAZzW,OAAAA,CACX4jB,EAAmBC,CAAAA,EAAAA,EAAAA,CAAAA,EAA6B7Q,EAAShT,GAAvD4jB,YAAAA,CACF+C,EAAeC,CAAAA,EAAAA,EAAAA,EAAAA,IAEIC,EAAAA,CAAAA,EAAAA,EAAAA,EAAAA,EAAe,CAACF,EAAc,YAAa,CAAC/C,EAAa,CAAC,EAA3EjW,EAAiBkZ,EAAjBlZ,IAAAA,CAER,MAAO,CACLmZ,wBAHuBD,EAAXE,MAAAA,CAIZxT,iBAAkB5F,EAAO3E,CAAAA,EAAAA,EAAAA,EAAAA,EAAiB,GAAIF,CAAAA,GAAAA,EAAU6E,EAAK8W,QAAQ,KAAO,CAAC,CAEjF,ECNe,SAAS9G,EAAsBxgB,CAAG,CAAEsgB,CAAU,CAAE,CAC7D,IAA6BhH,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,IAArBzD,EAAqByD,EAArBzD,OAAAA,CAAShT,EAAYyW,EAAZzW,OAAAA,CACX4jB,EAAmBC,CAAAA,EAAAA,EAAAA,CAAAA,EAA6B7Q,EAAShT,GAAvD4jB,YAAAA,CACFE,EAAaC,CAAAA,EAAAA,EAAAA,EAAAA,EAAsBH,GACnCvN,EAAWC,CAAAA,EAAAA,EAAAA,EAAAA,IACX8G,EAAWC,CAAAA,EAAAA,EAAAA,EAAAA,IACqC2J,EAAAA,IAA9CzT,EAA8CyT,EAA9CzT,gBAAAA,CAAkBuT,EAA4BE,EAA5BF,uBAAAA,CAEpBrT,EAASpe,CAAAA,EAAAA,EAAAA,WAAAA,EAAY,UAAM,CAC/ByxB,IACAzQ,EAASwH,CAAAA,EAAAA,EAAAA,EAAAA,EAAuB,CAAE7K,QAAAA,EAAS8K,KAAM,CAAC3gB,EAAI,CAAE6C,QAAAA,EAAS4jB,aAAAA,CAAa,GAChF,EAAG,CAAC5Q,EAAS4Q,EAAc5jB,EAAS7C,EAAKkZ,EAAUyQ,EAAwB,EAErE3Q,EAAgB8Q,CAAAA,EAAAA,EAAAA,CAAAA,EAAyBxJ,EAAYmG,GAAnDzN,SAAAA,CAiBR,MAAO,CACLF,QAhBc5gB,CAAAA,EAAAA,EAAAA,WAAAA,EACd,SAAChE,CAAAA,CAAAA,OAAU61B,CAAAA,EAAAA,EAAAA,EAAAA,EAAUpD,EAAY3mB,EAAK9L,EAAO+rB,EAAUmE,EAAAA,EAAsBA,GAC7E,CAACuC,EAAY3mB,EAAKigB,EAAS,EAe3BlH,UAZgB7gB,CAAAA,EAAAA,EAAAA,WAAAA,EAChB,SAAChE,CAAAA,CAAAA,OAAU81B,CAAAA,EAAAA,EAAAA,EAAAA,EAAYrD,EAAY3mB,EAAK9L,EAAO+rB,EAAUmE,EAAAA,EAAsBA,GAC/E,CAACuC,EAAY3mB,EAAKigB,EAAS,EAW3B5J,SARene,CAAAA,EAAAA,EAAAA,WAAAA,EACf,iBAAMioB,CAAAA,EAAAA,EAAAA,EAAAA,EAAYwG,EAAY3mB,EAAKigB,EAAUmE,EAAAA,EAAsBA,GACnE,CAACuC,EAAY3mB,EAAKigB,EAAS,EAO3BjH,UAAAA,EACA1C,OAAAA,EACAF,iBAAAA,CACF,CACF,yDChDO,IAAMhC,EAAe6V,CAAAA,EAAAA,QAAAA,aAAAA,EAAc,CAAEnW,oBAAqB,EAAE,8HCGtDoG,EAA2B,SAAC/D,CAAAA,CAAqB,CAC5D,IAA6BmD,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,IAArBzD,EAAqByD,EAArBzD,OAAAA,CAAShT,EAAYyW,EAAZzW,OAAAA,CACXqnB,EAAsB9lB,CAAAA,EAAAA,EAAAA,OAAAA,EAAQ,UAAM,CACxC,OAAO+R,GAAYtT,EAAUsnB,CAAAA,EAAAA,EAAAA,EAAAA,EAA8B,IAAI,CAAEtnB,GAAW,IAAI,EAC/E,CAACA,EAASsT,EAAS,EAEGiU,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EACvBvU,GAAWqU,GAAuB,CAAC,0BAA2BrU,EAAShT,EAAQ,CAC/E,GAAAwnB,EAAA31B,CAAA,YAAY,iEACe,SAAMw1B,EAAoBI,KAAK,CAACzU,WACzD,SAAO,CADkB6B,EAAAC,IAAA,MAE3B,IAGF,MAAO,CAAEwC,YARgBiQ,EAAjB5Z,IAAAA,CAQoB4J,QARHgQ,EAAXR,MAAAA,CAShB,iPCTO,SAAStP,GAAiB,CAC/B,IAK+C3c,EALzC4sB,EAAYC,CAAAA,EAAAA,EAAAA,EAAAA,IAAVD,KAAAA,CAC2BnZ,EAAAA,CAAAA,EAAAA,EAAAA,EAAAA,IAA3BqZ,EAA2BrZ,EAA3BqZ,WAAAA,CAAaC,EAActZ,EAAdsZ,SAAAA,CACfC,EAAQJ,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAOnzB,EAAE,IAAKwzB,EAAAA,EAAAA,CAAAA,EAAU,CACtC,MACE,CAACF,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAWtzB,EAAE,IAAKyzB,EAAAA,EAAAA,CAAAA,MAAqB,EACJC,QAAQ,IAAgB,GAAfntB,CAAAA,EAAAA,OAAO8lB,QAAQ,GAAf9lB,KAAAA,IAAAA,EAAD,OAACA,EAAoCotB,QAAQ,IACzFN,GACAE,CAEJ,CAGA,SAASK,GAAgB,CACvB,IAAM3Q,EAAcC,IAIhBtiB,EAAAA,CAAAA,EAAAA,EAAAA,EAAAA,IAFFD,EAEEC,EAFFD,CAAAA,CACAsL,EACErL,EADFqL,eAAAA,CAAmB4nB,IAAAA,CAGKrzB,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IAAK,GAAjCszB,EAAmBtzB,CAAAA,CAAAA,EAAAA,CAAZuzB,EAAYvzB,CAAAA,CAAAA,EAAAA,CAEpBwzB,EAAgBlzB,CAAAA,EAAAA,EAAAA,WAAAA,EAAY,UAAM,CACtCizB,EAAS,GACX,EAAG,EAAE,EAEL,MACE,GAAA/J,EAAAroB,GAAA,EAACsyB,EAAAA,CAAOA,CAAAA,CAAC7d,OAAQ6M,GAAe,CAAC6Q,EAAOI,oBAAqB,YAC3D,GAAAlK,EAAAroB,GAAA,EAACwyB,EAAAA,CAAeA,CAAAA,CACdn0B,GAAG,aACHO,YAAaI,EAAE,sBACfP,OACE,GAAA4pB,EAAAzoB,IAAA,EAAAyoB,EAAAtc,QAAA,YACG/M,EACC,gHAEF,GAAAqpB,EAAAroB,GAAA,EAACgJ,EAAAA,CAAYA,CAAAA,CAAClE,KAAM2tB,CAAAA,EAAAA,EAAAA,EAAAA,EAAWP,GAAO1c,GAAG,eACtCxW,EAAE,sEAITN,SAAUM,EAAE,mEACZR,OAAQ,CACN,CACEe,IAAK,oBACLuC,QAAS9C,EAAE,eACb,EACD,CACDV,UAAW+zB,KAInB,CAEO,IAAMK,EAA8D,SAAA10B,CAAA,CAAkB,KAAfsZ,EAAAA,EAAAA,QAAAA,CAC5E,MACE,GAAA+Q,EAAAzoB,IAAA,EAAAyoB,EAAAtc,QAAA,YACE,GAAAsc,EAAAroB,GAAA,EAACiyB,EAAAA,CAAAA,GACD,GAAA5J,EAAAroB,GAAA,EAAC2yB,EAAAA,CAAKA,CAAAA,UAAErb,MAGd,iJC/De,SAASsb,GAAqB,CAC3C,IAAgFC,EAAAA,CAAAA,EAAAA,EAAAA,EAAAA,IAAxEC,EAAwED,EAAxEC,iBAAAA,CAAmBC,EAAqDF,EAArDE,WAAAA,CAAaC,EAAwCH,EAAxCG,gBAAAA,CAAkBC,EAAsBJ,EAAtBI,iBAAAA,CAEpDC,EAA4B7nB,CAAAA,EAAAA,EAAAA,OAAAA,EAAQ,UAAM,CAE9C,IAAM8nB,EAAqBC,EADiBC,KAAK,CAACP,GACJxxB,GAAG,CAAC2xB,GAAmB7Y,KAAK,CAAC8H,EAAAA,EAAqBA,EAC1FoR,EAA0BP,EAAYM,KAAK,CAACF,GAC5CI,EAA2BT,EAAkBxxB,GAAG,CAAC2xB,GAAmB7Y,KAAK,CAAC8H,EAAAA,EAAqBA,EAGrG,OACEnnB,KAAKC,KAAK,CACRw4B,EAJ0ClyB,GAAG,CAACiyB,GAK3CF,KAAK,CAAC,GACNjZ,KAAK,CAAC,GAAIxH,CAAAA,GAAAA,EAAU6gB,EAAAA,EAAAA,CAAAA,QAAwB,KAC5CnyB,GAAG,CAAC,GAAIsR,CAAAA,GAAAA,EAAU8gB,EAAAA,EAAAA,CAAAA,QAAqB,IAAIpyB,GAAG,CAACqyB,CAAAA,EAAAA,EAAAA,CAAAA,EAAyB,MACxE3kB,QAAQ,KACR,CAET,EAAG,CAACgkB,EAAkBF,EAAmBG,EAAmBF,EAAY,EAYxE,MAAO,CACLa,wBAX8BvoB,CAAAA,EAAAA,EAAAA,OAAAA,EAC9B,iBAAMwoB,CAAAA,EAAAA,EAAAA,EAAAA,EAAqBX,IAC3B,CAACA,EAA0B,EAU3BY,2BAPiCzoB,CAAAA,EAAAA,EAAAA,OAAAA,EACjC,iBAAM0oB,CAAAA,EAAAA,EAAAA,EAAAA,EAAeb,IACrB,CAACA,EAA0B,EAM3BA,0BAAAA,CACF,CACF,0JCxCaa,EAAiB,SAACC,CAAAA,CAAY,CACzC,IAAMC,EAAM,IAAIvoB,KACVwoB,EAAYC,CAAAA,EAAAA,EAAAA,CAAAA,EAAWF,EAAKD,GAElC,MAAO14B,CAAAA,EAAAA,EAAAA,CAAAA,EAAkB,IAAIoQ,KAAKwoB,GAAYD,EAAK,CAAEh4B,eAAgB,OAAQ,EAC/E,EAEam4B,EAAgB,SAACJ,CAAAA,CAAY,CACxC,IAAMC,EAAM,IAAIvoB,KACVwoB,EAAYC,CAAAA,EAAAA,EAAAA,CAAAA,EAAWF,EAAKD,GAElC,MAAOK,CAAAA,EAAAA,EAAAA,CAAAA,EAAiB,IAAI3oB,KAAKwoB,GAAYD,EAC/C,EAEaK,EAAiB,SAACC,CAAAA,CAAAA,QAAUA,OAAAA,EAIzCn2B,CAAAA,EAAA,GAF6B,SAACo2B,CAAAA,CAAAA,OAAmBr4B,CAAAA,EAAAA,EAAAA,CAAAA,EAAe,CAAEo4B,MAAOR,EAAeS,EAAgB,+HCsDxGp2B,CAAAA,EAAA,EApE8D,SAAAJ,CAAA,CAAsD,KAGhGvC,EACHA,EACCA,EAL+C2Z,EAAAA,EAAAA,SAAAA,CAAW3Z,EAAAA,EAAAA,OAAAA,CAAS6b,EAAAA,EAAAA,QAAAA,CAAAA,EAAAA,EAAU7C,MAAAA,CAAAA,EAAAA,KAAAA,IAAAA,GAAcggB,EACjE51B,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,QAAAA,EAA6B,IAAI,KAApE61B,EAAmC71B,CAAAA,CAAAA,EAAAA,CAApB81B,EAAoB91B,CAAAA,CAAAA,EAAAA,CACJA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,QAAAA,EAA6B,IAAI,KAAhE+1B,EAA+B/1B,CAAAA,CAAAA,EAAAA,CAAlBg2B,EAAkBh2B,CAAAA,CAAAA,EAAAA,CAChCwW,EAAY5Z,IAAkB,GAAlBA,CAAAA,EAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAS4Z,SAAS,GAAlB5Z,KAAAA,IAAAA,EAAAA,EAAsB,QAAQ,CAC1Cq5B,EAASr5B,IAAe,GAAfA,CAAAA,EAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAASq5B,MAAM,GAAfr5B,KAAAA,IAAAA,EAAAA,EAAmB,CAAC,EAAG,GAAG,CACnCihB,EAAUjhB,IAAgB,GAAhBA,CAAAA,EAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAASihB,OAAO,GAAhBjhB,KAAAA,IAAAA,EAAAA,EAAoB,CAAEs5B,KAAM,GAAIC,MAAO,EAAG,CAAC,CAEvBn2B,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,QAAAA,EAAS4V,GAAAA,GAAtCwgB,EAA6Bp2B,CAAAA,CAAAA,EAAAA,CAAjBq2B,EAAiBr2B,CAAAA,CAAAA,EAAAA,CAE9Bs2B,EAAS,UAAM,CACnBD,EAAc,SAACzO,CAAAA,CAAAA,OAAS,CAACA,GAC3B,EAWAnX,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,UAAM,CACd4lB,EAAczgB,EAChB,EAAG,CAACA,EAAQygB,EAAc,EAE1B5lB,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,UAAM,CACd,GAAIslB,IAAoB,GAApBA,GAAwBF,IAAsB,GAAtBA,EAAwB,CAClD,IAAM7f,EAAqB,SAAA7W,CAAA,CAAuB,KAApB8W,EAAAA,EAAAA,MAAAA,CACxBA,aAAkBsgB,MAAQ,CAACR,EAAY7f,QAAQ,CAACD,IAAW,CAAC4f,EAAc3f,QAAQ,CAACD,IACrFogB,EAAc,GAElB,EAEA,OADAlgB,SAASC,gBAAgB,CAAC,QAASJ,GAC5B,UAAM,CACXG,SAASE,mBAAmB,CAAC,QAASL,EACxC,CACF,CAAC,EAEA,CAAC+f,EAAaF,EAAc,EAE/B,IAA+BW,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAUX,EAAeE,EAAa,CACnEvf,UAAAA,EACAigB,UAAW,CACT,CAAEvlB,KAAM,SAAUtU,QAAS,CAAEq5B,OAAAA,CAAO,CAAE,EACtC,CAAE/kB,KAAM,kBAAmBtU,QAAS,CAAEihB,QAAAA,CAAQ,CAAE,EACjD,GALK6Y,EAAuBF,EAAvBE,MAAAA,CAAQC,EAAeH,EAAfG,UAAAA,CAQVC,EACJ,GAAApN,EAAAroB,GAAA,EAACsB,MAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAIqS,IAAKkhB,EAAgB7zB,MAAOu0B,EAAOG,MAAM,EAAMF,EAAWE,MAAM,YAClE,mBAAOpe,EAA0BA,EAAS,CAAE6d,OAAAA,EAAQQ,KAtC5C,UAAM,CACjBT,EAAc,GAChB,EAoC+D/C,MAlCjD,UAAM,CAClB+C,EAAc,GAChB,CAgCqE,GAAK5d,CAAQ,IAI5Ese,EAASC,CAAAA,EAAAA,EAAAA,CAAAA,IACTC,EAAaF,EAASG,CAAAA,EAAAA,EAAAA,YAAAA,EAAaN,EAAMG,GAAUH,CAAI,CAE7D,MACE,GAAApN,EAAAzoB,IAAA,EAAAyoB,EAAAtc,QAAA,YACE,GAAAsc,EAAAroB,GAAA,EAACg2B,EAAAA,EAAyBA,CAAAA,CAACriB,IAAKghB,EAAkB1yB,QAASkzB,WACxD/f,IAEF6f,GAAca,IAGrB,0GCtDA13B,CAAAA,EAAA,EAbgF,SAAAkpB,CAAA,CAK1E,KAJJhQ,EAAAA,EAAAA,QAAAA,CACAlC,EAAAA,EAAAA,SAAAA,CAAAA,EAAAA,EACAX,MAAAA,CACGlI,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAHH+K,WACAlC,YACAX,WAGA,MACE,GAAA4T,EAAAroB,GAAA,EAACi2B,EAAAA,CAAQA,CAAAA,CAACx6B,QAAS,CAAE4Z,UAAW,QAAS,EAAGD,UAAWA,EAAWX,OAJpEA,KAAAA,IAAAA,GAAcggB,WAKV,GAAApM,EAAAroB,GAAA,EAACk2B,EAAAA,EAAmBA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAK3pB,GAAAA,UAAQ+K,MAGvC,q6BCdO,IAAM4e,EAAsBp4B,CAAAA,EAAAA,EAAAA,EAAAA,EAAOyC,EAAAA,EAAGA,EAAAA,UAAAA,CAAAA,mCACvB,SAAAvC,CAAA,SAAeC,EAAZA,KAAAA,CAAkBC,MAAM,CAACi4B,aAAa,EAC5C,SAAAn4B,CAAA,SAAeC,EAAZA,KAAAA,CAAkBm4B,KAAK,CAAC7kB,IAAI,EAClC,SAAAvT,CAAA,SAAeC,EAAZA,KAAAA,CAAkBo4B,OAAO,CAAC/X,OAAO,GAGvCgY,EAAmBx4B,CAAAA,EAAAA,EAAAA,EAAAA,EAAOsD,EAAAA,CAAIA,EAAAA,UAAAA,CAAAA,mCAI3B,SAAApD,CAAA,SAAeC,EAAZA,KAAAA,CAAkBC,MAAM,CAAC6J,KAAK,EAC9B,SAAA/J,CAAA,SAAeC,EAAZA,KAAAA,CAAkBm4B,KAAK,CAACG,OAAO,EACzC,SAAAv4B,CAAA,MAAGC,EAAAA,EAAAA,KAAAA,OAAY,aAAyC3B,MAAA,CAA5B2B,EAAMC,MAAM,CAACs4B,cAAc,IAGtDR,EAA4Bl4B,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,qCAKtC24B,EAAc34B,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,UAAa,oCAM7B,SAAAE,CAAA,SAAeC,EAAZA,KAAAA,CAAkBC,MAAM,CAACgL,IAAI,EAMnB,SAAAlL,CAAA,SAAeC,EAAZA,KAAAA,CAAkBC,MAAM,CAACs4B,cAAc,iTCxBlE,IAAMpR,EAAUtnB,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,oCAOd,SAAAE,CAAA,SAAeC,EAAZA,KAAAA,CAAkBC,MAAM,CAACouB,OAAO,EAqB/CluB,CAAAA,EAAA,EAjBiG,SAAAJ,CAAA,CAG3F,KAFJiE,EAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EACA0G,QAAAA,CAAAA,EAAAA,KAAAA,IAAAA,GAAgB+tB,EAEV13B,EAAQC,CAAAA,EAAAA,EAAAA,EAAAA,IAAND,CAAAA,CACF23B,EAAgBx3B,CAAAA,EAAAA,EAAAA,WAAAA,EAAY,WAAM8C,OAAAA,MAAAA,EAAAA,KAAAA,EAAAA,GAAAA,EAAa,CAACA,EAAQ,EAE9D,MACE,GAAAtC,EAAAC,IAAA,EAACwlB,EAAAA,CAAQwR,aAAY53B,EAAE,mCAAoC63B,KAAK,SAAS50B,QAAS00B,YAChF,GAAAh3B,EAAAK,GAAA,EAACY,EAAAA,CAAIA,CAAAA,CAACC,MAAM,UAAUkM,KAAI,YACZ/N,EAAE,SAAY,SAAZ,IAEf2J,EAAW,GAAAhJ,EAAAK,GAAA,EAAC82B,EAAAA,CAAaA,CAAAA,CAAAA,GAAM,GAAAn3B,EAAAK,GAAA,EAAC+2B,EAAAA,CAAeA,CAAAA,CAAAA,EAAG,GAGzD,2SCnCA,IAAMha,EAAajf,QAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,oCAa7BM,CAAAA,EAAA,EAAe2e,skBCZf,IAAMC,EAAUlf,CAAAA,EAAAA,EAAAA,EAAAA,EAAOyC,EAAAA,EAAGA,EAAAA,UAAAA,CAAAA,mCAEJ,SAAAvC,CAAA,SAAeC,EAAZA,KAAAA,CAAkBC,MAAM,CAACgE,QAAQ,EAuB1D8a,CAAAA,EAAQga,YAAY,CAAG,CACrBh1B,MAAO,OACP0F,OAAQ,MACV,EAEAtJ,EAAA,EAAe4e,mVC5Bf,IAAMia,EAAQn5B,CAAAA,EAAAA,EAAAA,EAAAA,EAAOyC,EAAAA,EAAGA,EAAAA,UAAAA,CAAAA,mCACR,SAAAvC,CAAA,MAAGC,EAAAA,EAAAA,KAAAA,QAAwBmS,EAAjBA,UAAAA,EAA+BnS,EAAMC,MAAM,CAACC,iBAAiB,GAGjF+4B,EAAQp5B,CAAAA,EAAAA,EAAAA,EAAAA,EAAO4K,EAAAA,CAASA,EAAAA,UAAAA,CAAAA,mCAY9BtK,CAAAA,EAAA,EANuE,SAAAkpB,CAAA,CACrE,KADwElX,EAAAA,EAAAA,UAAAA,CAAYkH,EAAAA,EAAAA,QAAAA,CAAa/K,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAzB6D,aAAYkH,mBACpF,GAAA3X,EAAAK,GAAA,EAACi3B,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAM7mB,WAAYA,GAAgB7D,GAAAA,UACjC,GAAA5M,EAAAK,GAAA,EAACk3B,EAAAA,UAAO5f,MACH,0WCZT,IAAM6f,EAAcr5B,CAAAA,EAAAA,EAAAA,EAAAA,EAAOs5B,EAAAA,CAAKA,EAAAA,UAAAA,CAAAA,oCAK1BC,EAAev5B,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,oCAE3B,SAAAE,CAAA,SAAeC,EAAZA,KAAAA,CAAkB+J,YAAY,CAACC,EAAE,EAyCxC7J,CAAAA,EAAA,EA9B8D,SAAAJ,CAAA,CAIxD,KAHJ4D,EAAAA,EAAAA,QAAAA,CAAAA,EAAAA,EACA4a,WAAAA,CACAF,EAAAA,EAAAA,YAAAA,CAEoCzd,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,OAAtCy4B,EAA6Bz4B,CAAAA,CAAAA,EAAAA,CAAjB04B,EAAiB14B,CAAAA,CAAAA,EAAAA,CAC9BG,EAAQC,CAAAA,EAAAA,EAAAA,EAAAA,IAAND,CAAAA,CAEFw4B,EAAoBnsB,CAAAA,EAAAA,EAAAA,OAAAA,EACxB,kBAAMosB,IAAS,SAACC,CAAAA,CAAAA,QAA2CC,EAAiBD,IAAI,MAChF,CAACC,EAAiB,EAapB,MANAroB,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,UAAM,CACVgN,GACFib,EAAcjb,EAElB,EAAG,CAACA,EAAa,EAGf,GAAA3c,EAAAK,GAAA,EAACq3B,EAAAA,UACC,GAAA13B,EAAAK,GAAA,EAACm3B,EAAAA,CAAYh8B,MAAOm8B,EAAY11B,SAZnB,SAAC81B,CAAAA,CAA2C,CAC3DH,EAAcG,EAAE5iB,MAAM,CAAC3Z,KAAK,EAC5Bq8B,EAAkBE,EACpB,EASwDlb,YAAaxd,EAvBrEwd,KAAAA,IAAAA,EAAc,SAAAob,CAAA,KA0BhB,k5DC9CA,IAAMC,EAAiB/5B,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,oCAOjB,SAAAE,CAAA,SAAeC,EAAZA,KAAAA,CAAkBo4B,OAAO,CAACyB,KAAK,EAC5B,SAAA95B,CAAA,SAAeC,EAAZA,KAAAA,CAAkBC,MAAM,CAACs4B,cAAc,EAEhD,SAAAx4B,CAAA,SAAeC,EAAZA,KAAAA,CAAkBC,MAAM,CAAC6J,KAAK,GAI3CgwB,EAAwBj6B,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,oCAKxB,SAAAE,CAAA,SAAeC,EAAZA,KAAAA,CAAkBC,MAAM,CAAC6J,KAAK,EACpC,SAAA/J,CAAA,SAAeC,EAAZA,KAAAA,CAAkB+5B,QAAQ,CAACnvB,QAAQ,EAO/C,SAAA7K,CAAA,SAAeC,EAAZA,KAAAA,CAAkB+J,YAAY,CAACC,EAAE,GAKlCgwB,EAAoBn6B,CAAAA,EAAAA,EAAAA,EAAAA,EAAOyC,EAAAA,EAAGA,EAAAA,UAAAA,CAAAA,mCAIpB,SAAAvC,CAAA,SAAeC,EAAZA,KAAAA,CAAkBC,MAAM,CAAC6J,KAAK,EAO7C,SAAA/J,CAAA,SAAeC,EAAZA,KAAAA,CAAkB+J,YAAY,CAACC,EAAE,EAIpC,SAACsE,CAAAA,CAAAA,QACDA,EAAMkI,MAAM,EACZ7L,CAAAA,EAAAA,EAAAA,EAAAA,EAAGA,IACCivB,EAC2B,SAAA75B,CAAA,SAAeC,EAAZA,KAAAA,CAAkBC,MAAM,CAACs4B,cAAc,EACvD,SAAAx4B,CAAA,SAAeC,EAAZA,KAAAA,CAAkBqgB,OAAO,CAAC4Z,SAAS,EAIpDH,EAIoB,SAAA/5B,CAAA,SAAeC,EAAZA,KAAAA,CAAkBC,MAAM,CAACs4B,cAAc,EAGhD,SAAAx4B,CAAA,SAAeC,EAAZA,KAAAA,CAAkBqgB,OAAO,CAAC4Z,SAAS,KAYtDC,EAAer6B,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,UAAS,oCAIjB,SAAAE,CAAA,SAAeC,EAAZA,KAAAA,CAAkB+5B,QAAQ,CAACnvB,QAAQ,GAG7CuvB,EAAWt6B,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,UAAS,oCAIR,SAAAE,CAAA,SAAeC,EAAZA,KAAAA,CAAkBC,MAAM,CAACs4B,cAAc,EAmF5Dp4B,CAAAA,EAAA,EAnE8E,SAAAkpB,CAAA,CAMxE,KALJ7rB,EAAAA,EAAAA,OAAAA,CACAygB,EAAAA,EAAAA,cAAAA,CAAAA,EAAAA,EACAmc,kBAAAA,CAAAA,EAAAA,KAAAA,IAAAA,EAAqB,EAAAC,CAAA,CACrBC,EAAAA,EAAAA,eAAAA,CACGhsB,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAJH9Q,UACAygB,iBACAmc,qBACAE,oBAG4B15B,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IAAK,GAAnC4V,EAAqB5V,CAAAA,CAAAA,EAAAA,CAAb6V,EAAa7V,CAAAA,CAAAA,EAAAA,CACgBA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IAAK,GAAnD25B,EAAqC35B,CAAAA,CAAAA,EAAAA,CAArB45B,EAAqB55B,CAAAA,CAAAA,EAAAA,CACUA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,QAAAA,EAASw5B,GAAAA,GAAxDK,EAA+C75B,CAAAA,CAAAA,EAAAA,CAA1B85B,EAA0B95B,CAAAA,CAAAA,EAAAA,CAEhD+5B,EAAW,SAACrc,CAAAA,CAA4C,CAC5D7H,EAAU,CAACD,GACX8H,EAAMsc,eAAe,EACvB,EA8BA,MAlBAvpB,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,UAAM,CACd,IAAMuF,EAAqB,UAAM,CAC/BH,EAAU,GACZ,EAGA,OADAM,SAASC,gBAAgB,CAAC,QAASJ,GAC5B,UAAM,CACXG,SAASE,mBAAmB,CAAC,QAASL,EACxC,CACF,EAAG,EAAE,EAELvF,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,UAAM,CACV+oB,IACFM,EAAuBN,EAAqB,GAC5CI,EAAkB,IAEtB,EAAG,CAACJ,EAAmB,EAGrB,GAAA14B,EAAAC,IAAA,EAACq4B,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAkBxjB,OAAQA,GAAYlI,GAAAA,WACrC,GAAA5M,EAAAK,GAAA,EAAC63B,EAAAA,CAAe51B,QAAS22B,WACvB,GAAAj5B,EAAAK,GAAA,EAACY,EAAAA,CAAIA,CAAAA,CAACC,MAAO,CAAC23B,GAAkBD,EAAkB,OAASllB,KAAAA,CAAS,UACjE,CAACmlB,GAAkBD,EAAkBA,EAAkB98B,CAAO,CAACi9B,EAAoB,CAAC53B,KAAK,KAG9F,GAAAnB,EAAAK,GAAA,EAAC84B,EAAAA,CAAiBA,CAAAA,CAACj4B,MAAM,OAAOoB,QAAS22B,IACzC,GAAAj5B,EAAAK,GAAA,EAAC+3B,EAAAA,UACC,GAAAp4B,EAAAK,GAAA,EAACm4B,EAAAA,UACE18B,EAAQ4D,GAAG,CAAC,SAAC8c,CAAAA,CAAQmS,CAAAA,CAAAA,QACpBiK,GAAmBjK,IAAUoK,EAC3B,GAAA/4B,EAAAK,GAAA,EAACo4B,EAAAA,CAASn2B,QAxC6B,UAAM,CACvD02B,EAuC6CrK,GAtC7C5Z,EAAU,IACV+jB,EAAkB,IAEdvc,GACFA,EAAezgB,CAAO,CAkCqB6yB,EAlCN,CAEzC,WAiCc,GAAA3uB,EAAAK,GAAA,EAACY,EAAAA,CAAIA,CAAAA,UAAEub,EAAOrb,KAAK,IAD2Bqb,EAAOrb,KAAK,EAG1D,IAAI,UAMpB,mFCjKA1C,CAAAA,EAAA,EAR0D,SAACmO,CAAAA,CAAU,CACnE,MACE,GAAA8b,EAAAroB,GAAA,EAAC+4B,EAAAA,CAAGA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAACC,QAAQ,aAAgBzsB,GAAAA,UAC3B,GAAA8b,EAAAroB,GAAA,EAACi5B,OAAAA,CAAKC,EAAE,6KAGd,mFCEA96B,CAAAA,EAAA,EAR0D,SAACmO,CAAAA,CAAU,CACnE,MACE,GAAA8b,EAAAroB,GAAA,EAAC+4B,EAAAA,CAAGA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAACC,QAAQ,aAAgBzsB,GAAAA,UAC3B,GAAA8b,EAAAroB,GAAA,EAACi5B,OAAAA,CAAKC,EAAE,+vBAGd,mFCEA96B,CAAAA,EAAA,EAR0D,SAACmO,CAAAA,CAAU,CACnE,MACE,GAAA8b,EAAAroB,GAAA,EAAC+4B,EAAAA,CAAGA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAACC,QAAQ,aAAgBzsB,GAAAA,UAC3B,GAAA8b,EAAAroB,GAAA,EAACi5B,OAAAA,CAAKC,EAAE,0tBAGd,oFCLYtc,EAALA,2MAAKA,CAAAA,EAAAA,GAAAA,CAAAA,EAAAA,CAAAA,CAAAA,GACVuc,KAAAA,CAAAA,QADUvc,EAEVwc,IAAAA,CAAAA,OASF,IAAM1wB,EAAY5K,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,oCAGxB,SAAAE,CAAA,SAAeC,EAAZA,KAAAA,CAAkB+J,YAAY,CAACC,EAAE,GAK3B4T,EAAgF,SAAA7d,CAAA,CAIvF,KAHJ8d,EAAAA,EAAAA,QAAAA,CACA3D,EAAAA,EAAAA,QAAAA,CACA4D,EAAAA,EAAAA,QAAAA,CAEMsd,EAAmBl6B,CAAAA,EAAAA,EAAAA,WAAAA,EAAY,UAAM,CACrCgZ,IAAayE,EAASwc,IAAI,EAC5Brd,EAASa,EAASwc,IAAI,CAE1B,EAAG,CAACrd,EAAU5D,EAAS,EAEjBmhB,EAAoBn6B,CAAAA,EAAAA,EAAAA,WAAAA,EAAY,UAAM,CACtCgZ,IAAayE,EAASuc,KAAK,EAC7Bpd,EAASa,EAASuc,KAAK,CAE3B,EAAG,CAACpd,EAAU5D,EAAS,EAEvB,MACE,GAAAxY,EAAAC,IAAA,EAAC8I,EAAAA,WACC,GAAA/I,EAAAK,GAAA,EAACwkB,EAAAA,CAAUA,CAAAA,CAAC7c,QAAQ,OAAOxH,MAAM,KAAK9B,GAAI,GAAY/B,MAAA,CAATwf,EAAS,YAAW7Z,QAASo3B,WACxE,GAAA15B,EAAAK,GAAA,EAACu5B,EAAAA,CAAYA,CAAAA,CAAC14B,MAAOsX,IAAayE,EAASwc,IAAI,CAAG,UAAY,cAAc,KAE9E,GAAAz5B,EAAAK,GAAA,EAACwkB,EAAAA,CAAUA,CAAAA,CAAC7c,QAAQ,OAAOxH,MAAM,KAAK9B,GAAI,GAAY/B,MAAA,CAATwf,EAAS,aAAY7Z,QAASq3B,WACzE,GAAA35B,EAAAK,GAAA,EAACw5B,EAAAA,CAAYA,CAAAA,CAAC34B,MAAOsX,IAAayE,EAASuc,KAAK,CAAG,UAAY,cAAc,OAIrF,gFCdO,IAAMxpB,EAAwC,CACnD,CACEtR,GAAI,EACJ0R,KAAM,OACNyC,SAAU,GACV1R,MAAO,EACT,EACA,CACEzC,GAAI,EACJ0R,KAAM,SACNyC,SAAU,GACV1R,MAAO,QACT,EACA,CACEzC,GAAI,EACJ0R,KAAM,MACNyC,SAAU,GACV1R,MAAO,KACT,EACA,CACEzC,GAAI,EACJ0R,KAAM,UACNyC,SAAU,GACV1R,MAAO,EACT,EACD,CAEY8O,EAAyC,CACpD,CACEvR,GAAI,EACJ0R,KAAM,OACNyC,SAAU,GACV1R,MAAO,EACT,EACA,CACEzC,GAAI,EACJ0R,KAAM,OACNyC,SAAU,GACV1R,MAAO,EACT,EACA,CACEzC,GAAI,EACJ0R,KAAM,SACNyC,SAAU,GACV1R,MAAO,QACT,EACA,CACEzC,GAAI,EACJ0R,KAAM,MACNyC,SAAU,GACV1R,MAAO,KACT,EACA,CACEzC,GAAI,EACJ0R,KAAM,YACNyC,SAAU,GACV1R,MAAO,WACT,EACA,CACEzC,GAAI,EACJ0R,KAAM,aACNyC,SAAU,GACV1R,MAAO,YACT,EACA,CACEzC,GAAI,EACJ0R,KAAM,UACNyC,SAAU,GACV1R,MAAO,EACT,EACD,gDCzGK24B,EAAW,CACfC,UAAW,CACTC,EAAG,IACHC,EAAG,GACL,CACF,CAMAx7B,CAAAA,EAAA,EAJiB,SAAC2J,CAAAA,CAAkB,CAClC,OAAOA,EAAMtK,OAAO,CAAC,oBAAqB,SAACo8B,CAAAA,CAAAA,QAAcC,IAAKL,EAAU,aAAen9B,MAAA,CAAFu9B,KAAQA,GAC/F","sources":["webpack://_N_E/../../node_modules/date-fns/esm/_lib/roundingMethods/index.js","webpack://_N_E/../../node_modules/date-fns/esm/differenceInWeeks/index.js","webpack://_N_E/../../node_modules/date-fns/esm/formatDuration/index.js","webpack://_N_E/./src/components/DisclaimerModal/index.tsx","webpack://_N_E/./src/config/constants/info.ts","webpack://_N_E/./src/state/info/constant.ts","webpack://_N_E/./src/utils/graphql.ts","webpack://_N_E/../../packages/farms/src/filterFarmsByQuery.ts","webpack://_N_E/./src/views/Farms/components/FarmTable/Farm.tsx","webpack://_N_E/./src/views/Farms/components/FarmTable/Actions/styles.ts","webpack://_N_E/./src/views/Farms/components/FarmTable/Actions/ActionPanel.tsx","webpack://_N_E/./src/views/Farms/components/FarmTable/Row.tsx","webpack://_N_E/./src/views/Farms/components/FarmTable/FarmTable.tsx","webpack://_N_E/./src/views/Farms/components/FarmTypesFilter.tsx","webpack://_N_E/./src/views/Farms/hooks/useMultiChainHarvestModal.tsx","webpack://_N_E/./src/views/Farms/Farms.tsx","webpack://_N_E/./src/views/Farms/components/FarmCard/HarvestAction.tsx","webpack://_N_E/./src/views/Farms/components/FarmCard/StakeAction.tsx","webpack://_N_E/./src/views/Farms/components/FarmCard/CardActionsContainer.tsx","webpack://_N_E/./src/views/Farms/components/YieldBooster/components/BoostedTag.tsx","webpack://_N_E/./src/views/Farms/components/FarmCard/CardHeading.tsx","webpack://_N_E/./src/views/Farms/components/FarmCard/FarmCard.tsx","webpack://_N_E/./src/views/Farms/hooks/useHarvestFarm.ts","webpack://_N_E/./src/views/Farms/components/FarmTable/Actions/HarvestAction.tsx","webpack://_N_E/./src/views/Farms/components/FarmTable/Actions/StakedAction.tsx","webpack://_N_E/./src/views/Farms/hooks/useFarmCProxyAddress.ts","webpack://_N_E/./src/views/Farms/hooks/useNonBscHarvestFarm.ts","webpack://_N_E/./src/views/Farms/components/MultiChainHarvestModal.tsx","webpack://_N_E/./src/views/Farms/components/YieldBooster/hooks/useBoosterFarmHandlers.ts","webpack://_N_E/./src/views/Farms/components/YieldBooster/components/ActionButton.tsx","webpack://_N_E/./src/views/Farms/components/BCakeMigrateModal.tsx","webpack://_N_E/./src/views/Farms/components/YieldBooster/components/MigrateActionButton.tsx","webpack://_N_E/./src/views/Farms/components/YieldBooster/components/BoostedAction.tsx","webpack://_N_E/./src/views/Farms/components/YieldBooster/components/BoostedApr.tsx","webpack://_N_E/./src/views/Farms/components/YieldBooster/hooks/useProxyCAKEBalance.ts","webpack://_N_E/./src/views/Farms/components/YieldBooster/hooks/useProxyStakedActions.ts","webpack://_N_E/./src/views/Farms/context.ts","webpack://_N_E/./src/views/Farms/hooks/useFirstTimeCrossFarming.ts","webpack://_N_E/./src/views/Farms/index.tsx","webpack://_N_E/./src/views/Pools/components/LockedPool/hooks/useAvgLockDuration.tsx","webpack://_N_E/./src/views/Pools/components/utils/formatSecondsToWeeks.ts","webpack://_N_E/../../packages/uikit/src/components/BaseMenu/BaseMenu.tsx","webpack://_N_E/../../packages/uikit/src/components/BaseMenu/InlineMenu.tsx","webpack://_N_E/../../packages/uikit/src/components/BaseMenu/styles.tsx","webpack://_N_E/../../packages/uikit/src/components/ExpandableSectionButton/ExpandableSectionButton.tsx","webpack://_N_E/../../packages/uikit/src/components/Layouts/Flex.tsx","webpack://_N_E/../../packages/uikit/src/components/Loading/Loading.tsx","webpack://_N_E/../../packages/uikit/src/components/PageHeader/PageHeader.tsx","webpack://_N_E/../../packages/uikit/src/components/SearchInput/SearchInput.tsx","webpack://_N_E/../../packages/uikit/src/components/Select/Select.tsx","webpack://_N_E/../../packages/uikit/src/components/Svg/Icons/ArrowDropDown.tsx","webpack://_N_E/../../packages/uikit/src/components/Svg/Icons/CardView.tsx","webpack://_N_E/../../packages/uikit/src/components/Svg/Icons/ListView.tsx","webpack://_N_E/../../packages/uikit/src/components/ToggleView/ToggleView.tsx","webpack://_N_E/../../packages/uikit/src/widgets/Farm/types.ts","webpack://_N_E/../../packages/utils/latinise.ts","webpack://_N_E/<anon>"],"sourcesContent":["var roundingMap = {\n  ceil: Math.ceil,\n  round: Math.round,\n  floor: Math.floor,\n  trunc: function trunc(value) {\n    return value < 0 ? Math.ceil(value) : Math.floor(value);\n  } // Math.trunc is not supported by IE\n\n};\nvar defaultRoundingMethod = 'trunc';\nexport function getRoundingMethod(method) {\n  return method ? roundingMap[method] : roundingMap[defaultRoundingMethod];\n}","import differenceInDays from \"../differenceInDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getRoundingMethod } from \"../_lib/roundingMethods/index.js\";\n/**\n * @name differenceInWeeks\n * @category Week Helpers\n * @summary Get the number of full weeks between the given dates.\n *\n * @description\n * Get the number of full weeks between two dates. Fractional weeks are\n * truncated towards zero by default.\n *\n * One \"full week\" is the distance between a local time in one day to the same\n * local time 7 days earlier or later. A full week can sometimes be less than\n * or more than 7*24 hours if a daylight savings change happens between two dates.\n *\n * To ignore DST and only measure exact 7*24-hour periods, use this instead:\n * `Math.floor(differenceInHours(dateLeft, dateRight)/(7*24))|0`.\n *\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @param {Object} [options] - an object with options.\n * @param {String} [options.roundingMethod='trunc'] - a rounding method (`ceil`, `floor`, `round` or `trunc`)\n * @returns {Number} the number of full weeks\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full weeks are between 5 July 2014 and 20 July 2014?\n * const result = differenceInWeeks(new Date(2014, 6, 20), new Date(2014, 6, 5))\n * //=> 2\n *\n * // How many full weeks are between\n * // 1 March 2020 0:00 and 6 June 2020 0:00 ?\n * // Note: because local time is used, the\n * // result will always be 8 weeks (54 days),\n * // even if DST starts and the period has\n * // only 54*24-1 hours.\n * const result = differenceInWeeks(\n *   new Date(2020, 5, 1),\n *   new Date(2020, 2, 6)\n * )\n * //=> 8\n */\n\nexport default function differenceInWeeks(dateLeft, dateRight, options) {\n  requiredArgs(2, arguments);\n  var diff = differenceInDays(dateLeft, dateRight) / 7;\n  return getRoundingMethod(options === null || options === void 0 ? void 0 : options.roundingMethod)(diff);\n}","import { getDefaultOptions } from \"../_lib/defaultOptions/index.js\";\nimport defaultLocale from \"../_lib/defaultLocale/index.js\";\nvar defaultFormat = ['years', 'months', 'weeks', 'days', 'hours', 'minutes', 'seconds'];\n/**\n * @name formatDuration\n * @category Common Helpers\n * @summary Formats a duration in human-readable format\n *\n * @description\n * Return human-readable duration string i.e. \"9 months 2 days\"\n *\n * @param {Duration} duration - the duration to format\n * @param {Object} [options] - an object with options.\n * @param {string[]} [options.format=['years', 'months', 'weeks', 'days', 'hours', 'minutes', 'seconds']] - the array of units to format\n * @param {boolean} [options.zero=false] - should zeros be included in the output?\n * @param {string} [options.delimiter=' '] - delimiter string\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {string} the formatted date string\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Format full duration\n * formatDuration({\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30\n * })\n * //=> '2 years 9 months 1 week 7 days 5 hours 9 minutes 30 seconds'\n *\n * @example\n * // Format partial duration\n * formatDuration({ months: 9, days: 2 })\n * //=> '9 months 2 days'\n *\n * @example\n * // Customize the format\n * formatDuration(\n *   {\n *     years: 2,\n *     months: 9,\n *     weeks: 1,\n *     days: 7,\n *     hours: 5,\n *     minutes: 9,\n *     seconds: 30\n *   },\n *   { format: ['months', 'weeks'] }\n * ) === '9 months 1 week'\n *\n * @example\n * // Customize the zeros presence\n * formatDuration({ years: 0, months: 9 })\n * //=> '9 months'\n * formatDuration({ years: 0, months: 9 }, { zero: true })\n * //=> '0 years 9 months'\n *\n * @example\n * // Customize the delimiter\n * formatDuration({ years: 2, months: 9, weeks: 3 }, { delimiter: ', ' })\n * //=> '2 years, 9 months, 3 weeks'\n */\n\nexport default function formatDuration(duration, options) {\n  var _ref, _options$locale, _options$format, _options$zero, _options$delimiter;\n\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 argument required, but only \".concat(arguments.length, \" present\"));\n  }\n\n  var defaultOptions = getDefaultOptions();\n  var locale = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : defaultLocale;\n  var format = (_options$format = options === null || options === void 0 ? void 0 : options.format) !== null && _options$format !== void 0 ? _options$format : defaultFormat;\n  var zero = (_options$zero = options === null || options === void 0 ? void 0 : options.zero) !== null && _options$zero !== void 0 ? _options$zero : false;\n  var delimiter = (_options$delimiter = options === null || options === void 0 ? void 0 : options.delimiter) !== null && _options$delimiter !== void 0 ? _options$delimiter : ' ';\n\n  if (!locale.formatDistance) {\n    return '';\n  }\n\n  var result = format.reduce(function (acc, unit) {\n    var token = \"x\".concat(unit.replace(/(^.)/, function (m) {\n      return m.toUpperCase();\n    }));\n    var value = duration[unit];\n\n    if (typeof value === 'number' && (zero || duration[unit])) {\n      return acc.concat(locale.formatDistance(token, value));\n    }\n\n    return acc;\n  }, []).join(delimiter);\n  return result;\n}","import { useState, useCallback, ReactNode } from 'react'\nimport {\n  ModalContainer,\n  ModalBody,\n  Text,\n  Button,\n  Flex,\n  InjectedModalProps,\n  Checkbox,\n  ModalHeader,\n  ModalTitle,\n  Heading,\n  Box,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\nimport styled from 'styled-components'\n\ninterface CheckType {\n  key: string\n  value?: boolean\n  content: string\n}\n\ninterface RiskDisclaimerProps extends InjectedModalProps {\n  onSuccess: () => void\n  checks: CheckType[]\n  header: ReactNode\n  modalHeader?: string\n  id: string\n  subtitle?: ReactNode\n  hideConfirm?: boolean\n}\n\nconst GradientModalHeader = styled(ModalHeader)`\n  background: ${({ theme }) => theme.colors.gradientBubblegum};\n  padding-bottom: 24px;\n  padding-top: 24px;\n`\n\n// TODO: Copy from src/views/Predictions/components/RiskDisclaimer.tsx\n// Will replace that with this modal.\n\nconst DisclaimerModal: React.FC<React.PropsWithChildren<RiskDisclaimerProps>> = ({\n  id,\n  onSuccess,\n  onDismiss,\n  checks,\n  header,\n  subtitle,\n  hideConfirm,\n  modalHeader,\n}) => {\n  const [checkState, setCheckState] = useState(checks || [])\n  const { t } = useTranslation()\n\n  const handleSetAcknowledgeRisk = useCallback(\n    (currentKey) => {\n      const newCheckState = checkState.map((check) => {\n        if (currentKey === check.key) {\n          return { ...check, value: !check.value }\n        }\n\n        return check\n      })\n\n      setCheckState(newCheckState)\n    },\n    [checkState],\n  )\n\n  const handleConfirm = useCallback(() => {\n    onSuccess()\n    onDismiss?.()\n  }, [onSuccess, onDismiss])\n\n  return (\n    <ModalContainer title={modalHeader || t('Welcome!')} $minWidth=\"320px\" id={id}>\n      <GradientModalHeader>\n        <ModalTitle>\n          <Heading scale=\"lg\">{modalHeader || t('Welcome!')}</Heading>\n        </ModalTitle>\n      </GradientModalHeader>\n      <ModalBody p=\"24px\" maxWidth={['100%', '100%', '100%', '400px']}>\n        <Box maxHeight=\"300px\" overflowY=\"auto\">\n          <Heading as=\"h3\" mb=\"24px\">\n            {header}\n          </Heading>\n          {subtitle && (\n            <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n              {subtitle}\n            </Text>\n          )}\n          {checkState.map((check) => (\n            <label\n              key={check.key}\n              htmlFor={check.key}\n              style={{ display: 'block', cursor: 'pointer', marginBottom: '24px' }}\n            >\n              <Flex alignItems=\"center\">\n                <div style={{ flex: 'none', alignSelf: 'flex-start', paddingTop: '8px' }}>\n                  <Checkbox\n                    id={check.key}\n                    scale=\"sm\"\n                    checked={check.value}\n                    onChange={() => handleSetAcknowledgeRisk(check.key)}\n                  />\n                </div>\n                <Text ml=\"8px\">{check.content}</Text>\n              </Flex>\n            </label>\n          ))}\n        </Box>\n        {!hideConfirm && (\n          <Button\n            id={`${id}-continue`}\n            width=\"100%\"\n            onClick={handleConfirm}\n            disabled={checkState.some((check) => !check.value)}\n          >\n            {t('Continue')}\n          </Button>\n        )}\n      </ModalBody>\n    </ModalContainer>\n  )\n}\n\nexport default DisclaimerModal\n","export const MINIMUM_SEARCH_CHARACTERS = 2\n\nexport const WEEKS_IN_YEAR = 52.1429\n\nexport const TOTAL_FEE = 0.0029\nexport const LP_HOLDERS_FEE = 0.0022\nexport const TREASURY_FEE = 0.0006\nexport const BUYBACK_FEE = 0.0001\n\nexport const PCS_V2_START = 1619136000 // April 23, 2021, 12:00:00 AM\nexport const PCS_ETH_START = 1664130827 // Sep 23, 2022, 02:33:47 AM\nexport const PCS_GOERLI_START = 1679427696\nexport const ONE_DAY_UNIX = 86400 // 24h * 60m * 60s\nexport const ONE_HOUR_SECONDS = 3600\n\nexport const ITEMS_PER_INFO_TABLE_PAGE = 10\n\n// These tokens are either incorrectly priced or have some other issues that spoil the query data\n// None of them present any interest as they have almost 0 daily trade volume\n\nexport const BSC_TOKEN_WHITELIST = []\nexport const TOKEN_BLACKLIST = [\n  // These ones are copied from v1 info\n  '0x495c7f3a713870f68f8b418b355c085dfdc412c3',\n  '0xc3761eb917cd790b30dad99f6cc5b4ff93c4f9ea',\n  '0xe31debd7abff90b06bca21010dd860d8701fd901',\n  '0xfc989fbb6b3024de5ca0144dc23c18a063942ac1',\n  '0xe40fc6ff5f2895b44268fd2e1a421e07f567e007',\n  '0xfd158609228b43aa380140b46fff3cdf9ad315de',\n  '0xc00af6212fcf0e6fd3143e692ccd4191dc308bea',\n  '0x205969b3ad459f7eba0dee07231a6357183d3fb6',\n  '0x0bd67d358636fd7b0597724aa4f20beedbf3073a',\n  '0xedf5d2a561e8a3cb5a846fbce24d2ccd88f50075',\n  '0x702b0789a3d4dade1688a0c8b7d944e5ba80fc30',\n  '0x041929a760d7049edaef0db246fa76ec975e90cc',\n  '0xba098df8c6409669f5e6ec971ac02cd5982ac108',\n  '0x1bbed115afe9e8d6e9255f18ef10d43ce6608d94',\n  '0xe99512305bf42745fae78003428dcaf662afb35d',\n  '0xbE609EAcbFca10F6E5504D39E3B113F808389056',\n  '0x847daf9dfdc22d5c61c4a857ec8733ef5950e82e',\n  '0xdbf8913dfe14536c0dae5dd06805afb2731f7e7b',\n  // These ones are newly found\n  '0xF1D50dB2C40b63D2c598e2A808d1871a40b1E653',\n  '0x4269e4090ff9dfc99d8846eb0d42e67f01c3ac8b',\n]\n\nexport const ETH_TOKEN_BLACKLIST = ['0x72b169ad8af6c4fb53056b6a2a85602ad6863864']\nexport const ETH_TOKEN_WHITELIST = [\n  '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n  '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n  '0xdac17f958d2ee523a2206206994597c13d831ec7',\n  '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n  '0x993864e43caa7f7f12953ad6feb1d1ca635b875f',\n]\n\nexport const GOERLI_TOKEN_BLACKLIST = ['0x72b169ad8af6c4fb53056b6a2a85602ad6863864']\nexport const GOERLI_TOKEN_WHITELIST = [\n  '0x65f6e06c324c7c167576756a365e221bc0657816',\n  '0xab738f29e55df25d69006aaefb638307b9b0ed3e',\n]\n","import { BLOCKS_CLIENT, BLOCKS_CLIENT_ETH, INFO_CLIENT, INFO_CLIENT_ETH } from 'config/constants/endpoints'\nimport { infoClientETH, infoClient, infoStableSwapClient } from 'utils/graphql'\n\nimport { ChainId } from '@pancakeswap/sdk'\nimport {\n  ETH_TOKEN_BLACKLIST,\n  PCS_ETH_START,\n  PCS_V2_START,\n  TOKEN_BLACKLIST,\n  BSC_TOKEN_WHITELIST,\n  ETH_TOKEN_WHITELIST,\n} from 'config/constants/info'\n\nexport type MultiChainName = 'BSC' | 'ETH'\n\nexport const multiChainQueryMainToken = {\n  BSC: 'BNB',\n  ETH: 'ETH',\n}\n\nexport const multiChainBlocksClient = {\n  BSC: BLOCKS_CLIENT,\n  ETH: BLOCKS_CLIENT_ETH,\n}\n\nexport const multiChainStartTime = {\n  BSC: PCS_V2_START,\n  ETH: PCS_ETH_START,\n}\n\nexport const multiChainId = {\n  BSC: ChainId.BSC,\n  ETH: ChainId.ETHEREUM,\n}\n\nexport const multiChainPaths = {\n  [ChainId.BSC]: '',\n  [ChainId.ETHEREUM]: '/eth',\n}\n\nexport const multiChainQueryClient = {\n  BSC: infoClient,\n  ETH: infoClientETH,\n}\n\nexport const multiChainQueryEndPoint = {\n  BSC: INFO_CLIENT,\n  ETH: INFO_CLIENT_ETH,\n}\n\nexport const multiChainScan = {\n  BSC: 'BscScan',\n  ETH: 'EtherScan',\n}\n\nexport const multiChainTokenBlackList = {\n  BSC: TOKEN_BLACKLIST,\n  ETH: ETH_TOKEN_BLACKLIST,\n}\n\nexport const multiChainTokenWhiteList = {\n  BSC: BSC_TOKEN_WHITELIST,\n  ETH: ETH_TOKEN_WHITELIST,\n}\n\nexport const getMultiChainQueryEndPointWithStableSwap = (chainName: MultiChainName) => {\n  const isStableSwap = checkIsStableSwap()\n  if (isStableSwap) return infoStableSwapClient\n  return multiChainQueryClient[chainName]\n}\n\nexport const checkIsStableSwap = () => window.location.href.includes('stableSwap')\n","import { BIT_QUERY, INFO_CLIENT, STABLESWAP_SUBGRAPH_CLIENT, INFO_CLIENT_ETH } from 'config/constants/endpoints'\nimport { GraphQLClient } from 'graphql-request'\nimport { INFO_CLIENT_WITH_CHAIN } from '../config/constants/endpoints'\n\n// Extra headers\n// Mostly for dev environment\n// No production env check since production preview might also need them\nexport const getGQLHeaders = (endpoint: string) => {\n  if (endpoint === INFO_CLIENT) {\n    return {\n      origin:\n        process.env.NEXT_PUBLIC_NODE_REAL_HEADER ||\n        // hack for inject CI secret on window\n        (typeof window !== 'undefined' &&\n          // @ts-ignore\n          window.nrHeader),\n    }\n  }\n  return undefined\n}\n\nexport const infoClient = new GraphQLClient(INFO_CLIENT)\n\nexport const infoClientWithChain = (chainId: number) => {\n  return new GraphQLClient(INFO_CLIENT_WITH_CHAIN[chainId], { headers: getGQLHeaders(INFO_CLIENT_WITH_CHAIN[chainId]) })\n}\n\nexport const infoClientETH = new GraphQLClient(INFO_CLIENT_ETH)\n\nexport const infoStableSwapClient = new GraphQLClient(STABLESWAP_SUBGRAPH_CLIENT)\n\nexport const infoServerClient = new GraphQLClient(INFO_CLIENT, {\n  timeout: 5000,\n  headers: {\n    origin: 'https://pancakeswap.finance',\n  },\n})\n\nexport const stableSwapClient = new GraphQLClient(STABLESWAP_SUBGRAPH_CLIENT)\n\nexport const bitQueryServerClient = new GraphQLClient(BIT_QUERY, {\n  headers: {\n    // only server, no `NEXT_PUBLIC` not going to expose in client\n    'X-API-KEY': process.env.BIT_QUERY_HEADER,\n  },\n  timeout: 5000,\n})\n","import latinise from '@pancakeswap/utils/latinise'\nimport { FarmWithStakedValue } from './types'\n\nexport const filterFarmsByQuery = (farms: FarmWithStakedValue[], query: string): FarmWithStakedValue[] => {\n  if (query) {\n    const queryParts = latinise(query.toLowerCase()).trim().split(' ')\n    return farms.filter((farm: FarmWithStakedValue) => {\n      const farmSymbol = latinise(farm.lpSymbol.toLowerCase())\n      return queryParts.every((queryPart) => {\n        return farmSymbol.includes(queryPart)\n      })\n    })\n  }\n  return farms\n}\n","import { useFarmUser } from 'state/farms/hooks'\nimport { Farm as FarmUI, FarmTableFarmTokenInfoProps } from '@pancakeswap/uikit'\nimport { TokenPairImage } from 'components/TokenImage'\n\nconst { FarmTokenInfo } = FarmUI.FarmTable\n\nconst Farm: React.FunctionComponent<React.PropsWithChildren<FarmTableFarmTokenInfoProps>> = ({\n  token,\n  quoteToken,\n  label,\n  pid,\n  isReady,\n  isStable,\n  isBoosted,\n}) => {\n  const { stakedBalance, proxy } = useFarmUser(pid)\n\n  return (\n    <FarmTokenInfo\n      pid={pid}\n      label={label}\n      token={token}\n      quoteToken={quoteToken}\n      isReady={isReady}\n      isStable={isStable}\n      isBoosted={isBoosted}\n      stakedBalance={proxy?.stakedBalance?.gt(0) ? proxy?.stakedBalance : stakedBalance}\n    >\n      <TokenPairImage width={40} height={40} variant=\"inverted\" primaryToken={token} secondaryToken={quoteToken} />\n    </FarmTokenInfo>\n  )\n}\n\nexport default Farm\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 12px;\n    /* max-height: 130px; */\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-right: 0;\n    margin-bottom: 0;\n    /* max-height: 130px; */\n  }\n`\n\nexport const ActionTitles = styled.div`\n  display: flex;\n  margin-bottom: 8px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import { useTranslation } from '@pancakeswap/localization'\nimport {\n  Farm as FarmUI,\n  FarmTableLiquidityProps,\n  FarmTableMultiplierProps,\n  LinkExternal,\n  Text,\n  useMatchBreakpoints,\n  Flex,\n} from '@pancakeswap/uikit'\n\nimport { FarmWithStakedValue } from '@pancakeswap/farms'\nimport { CHAIN_QUERY_NAME } from 'config/chains'\nimport { useActiveChainId } from 'hooks/useActiveChainId'\nimport { useContext, useMemo } from 'react'\nimport { multiChainPaths } from 'state/info/constant'\nimport styled, { css, keyframes } from 'styled-components'\nimport { getBlockExploreLink } from 'utils'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\n\nimport BoostedAction from '../../YieldBooster/components/BoostedAction'\nimport { YieldBoosterStateContext } from '../../YieldBooster/components/ProxyFarmContainer'\nimport Apr, { AprProps } from '../Apr'\nimport { HarvestAction, HarvestActionContainer, ProxyHarvestActionContainer } from './HarvestAction'\nimport StakedAction, { ProxyStakedContainer, StakedContainer } from './StakedAction'\nimport { ActionContainer as ActionContainerSection, ActionContent, ActionTitles } from './styles'\n\nconst { Multiplier, Liquidity } = FarmUI.FarmTable\n\nexport interface ActionPanelProps {\n  apr: AprProps\n  multiplier: FarmTableMultiplierProps\n  liquidity: FarmTableLiquidityProps\n  details: FarmWithStakedValue\n  userDataReady: boolean\n  expanded: boolean\n  alignLinksToRight?: boolean\n}\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst Container = styled.div<{ expanded }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.dropdown};\n  display: flex;\n  width: 100%;\n  flex-direction: column-reverse;\n  padding: 24px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    align-items: center;\n    padding: 16px 32px;\n  }\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  font-weight: 400;\n`\n\nconst StakeContainer = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n    flex-wrap: wrap;\n  }\n`\n\nconst InfoContainer = styled.div`\n  min-width: 200px;\n`\n\nconst ValueContainer = styled.div``\n\nconst ValueWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 4px 0px;\n`\n\nconst ActionPanel: React.FunctionComponent<React.PropsWithChildren<ActionPanelProps>> = ({\n  details,\n  apr,\n  multiplier,\n  liquidity,\n  userDataReady,\n  expanded,\n  alignLinksToRight = true,\n}) => {\n  const { chainId } = useActiveChainId()\n  const { proxyFarm, shouldUseProxyFarm } = useContext(YieldBoosterStateContext)\n\n  const farm = details\n\n  const { isDesktop } = useMatchBreakpoints()\n\n  const {\n    t,\n    currentLanguage: { locale },\n  } = useTranslation()\n  const isActive = farm.multiplier !== '0X'\n  const { quoteToken, token, stableSwapAddress } = farm\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.replace(/pancake/gi, '')\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: quoteToken.address,\n    tokenAddress: token.address,\n    chainId,\n  })\n  const { lpAddress } = farm\n  const bsc = getBlockExploreLink(lpAddress, 'address', chainId)\n  const { stakedBalance, tokenBalance, proxy } = farm.userData\n\n  const infoUrl = useMemo(() => {\n    if (farm.isStable) {\n      return `/info${multiChainPaths[chainId]}/pairs/${stableSwapAddress}?type=stableSwap&chain=${CHAIN_QUERY_NAME[chainId]}`\n    }\n    return `/info${multiChainPaths[chainId]}/pairs/${lpAddress}?chain=${CHAIN_QUERY_NAME[chainId]}`\n  }, [chainId, farm.isStable, lpAddress, stableSwapAddress])\n\n  return (\n    <Container expanded={expanded}>\n      <InfoContainer>\n        <ValueContainer>\n          {farm.isCommunity && farm.auctionHostingEndDate && (\n            <ValueWrapper>\n              <Text>{t('Auction Hosting Ends')}</Text>\n              <Text paddingLeft=\"4px\">\n                {new Date(farm.auctionHostingEndDate).toLocaleString(locale, {\n                  month: 'short',\n                  day: 'numeric',\n                  year: 'numeric',\n                })}\n              </Text>\n            </ValueWrapper>\n          )}\n          {!isDesktop && (\n            <>\n              <ValueWrapper>\n                <Text>{t('APR')}</Text>\n                <Apr {...apr} useTooltipText={false} boosted={farm.boosted} />\n              </ValueWrapper>\n              <ValueWrapper>\n                <Text>{t('Multiplier')}</Text>\n                <Multiplier {...multiplier} />\n              </ValueWrapper>\n              <ValueWrapper>\n                <Text>{t('Liquidity')}</Text>\n                <Liquidity {...liquidity} />\n              </ValueWrapper>\n            </>\n          )}\n        </ValueContainer>\n        {isActive && (\n          <Flex mb=\"2px\" justifyContent={alignLinksToRight ? 'flex-end' : 'flex-start'}>\n            <StakeContainer>\n              <StyledLinkExternal href={`/add/${liquidityUrlPathParts}`}>\n                {t('Get %symbol%', { symbol: lpLabel })}\n              </StyledLinkExternal>\n            </StakeContainer>\n          </Flex>\n        )}\n        <Flex mb=\"2px\" justifyContent={alignLinksToRight ? 'flex-end' : 'flex-start'}>\n          <StyledLinkExternal href={infoUrl}>{t('See Pair Info')}</StyledLinkExternal>\n        </Flex>\n        <Flex mb=\"2px\" justifyContent={alignLinksToRight ? 'flex-end' : 'flex-start'}>\n          <StyledLinkExternal isBscScan href={bsc}>\n            {t('View Contract')}\n          </StyledLinkExternal>\n        </Flex>\n      </InfoContainer>\n      <ActionContainer>\n        {shouldUseProxyFarm ? (\n          <ProxyHarvestActionContainer {...proxyFarm} userDataReady={userDataReady}>\n            {(props) => <HarvestAction {...props} />}\n          </ProxyHarvestActionContainer>\n        ) : (\n          <HarvestActionContainer {...farm} userDataReady={userDataReady}>\n            {(props) => <HarvestAction {...props} />}\n          </HarvestActionContainer>\n        )}\n        {farm?.boosted && (\n          <ActionContainerSection style={{ minHeight: 124.5 }}>\n            <BoostedAction\n              title={(status) => (\n                <ActionTitles>\n                  <Text mr=\"3px\" bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n                    {t('Yield Booster')}\n                  </Text>\n                  <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\">\n                    {status}\n                  </Text>\n                </ActionTitles>\n              )}\n              desc={(actionBtn) => <ActionContent>{actionBtn}</ActionContent>}\n              farmPid={farm?.pid}\n              lpTokenStakedAmount={farm?.lpTokenStakedAmount}\n              userBalanceInFarm={\n                stakedBalance.plus(tokenBalance).gt(0)\n                  ? stakedBalance.plus(tokenBalance)\n                  : proxy.stakedBalance.plus(proxy.tokenBalance)\n              }\n            />\n          </ActionContainerSection>\n        )}\n        {shouldUseProxyFarm ? (\n          <ProxyStakedContainer {...proxyFarm} userDataReady={userDataReady} lpLabel={lpLabel} displayApr={apr.value}>\n            {(props) => <StakedAction {...props} />}\n          </ProxyStakedContainer>\n        ) : (\n          <StakedContainer {...farm} userDataReady={userDataReady} lpLabel={lpLabel} displayApr={apr.value}>\n            {(props) => <StakedAction {...props} />}\n          </StakedContainer>\n        )}\n      </ActionContainer>\n    </Container>\n  )\n}\n\nexport default ActionPanel\n","import { useEffect, useState, createElement, useRef } from 'react'\nimport styled from 'styled-components'\nimport { FarmWithStakedValue } from '@pancakeswap/farms'\nimport {\n  Flex,\n  useMatchBreakpoints,\n  Skeleton,\n  Farm as FarmUI,\n  FarmTableEarnedProps,\n  FarmTableLiquidityProps,\n  FarmTableMultiplierProps,\n  FarmTableFarmTokenInfoProps,\n  MobileColumnSchema,\n  DesktopColumnSchema,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { useFarmUser } from 'state/farms/hooks'\nimport { useDelayedUnmount } from '@pancakeswap/hooks'\n\nimport Apr, { AprProps } from './Apr'\nimport Farm from './Farm'\nimport ActionPanel from './Actions/ActionPanel'\nimport BoostedApr from '../YieldBooster/components/BoostedApr'\n\nconst { FarmAuctionTag, CoreTag, BoostedTag, StableFarmTag } = FarmUI.Tags\nconst { CellLayout, Details, Multiplier, Liquidity, Earned } = FarmUI.FarmTable\n\nexport interface RowProps {\n  apr: AprProps\n  farm: FarmTableFarmTokenInfoProps\n  earned: FarmTableEarnedProps\n  multiplier: FarmTableMultiplierProps\n  liquidity: FarmTableLiquidityProps\n  details: FarmWithStakedValue\n  type: 'core' | 'community'\n  initialActivity?: boolean\n}\n\ninterface RowPropsWithLoading extends RowProps {\n  userDataReady: boolean\n}\n\nconst cells = {\n  apr: Apr,\n  farm: Farm,\n  earned: Earned,\n  details: Details,\n  multiplier: Multiplier,\n  liquidity: Liquidity,\n}\n\nconst CellInner = styled.div`\n  padding: 24px 0px;\n  display: flex;\n  width: 100%;\n  align-items: center;\n  padding-right: 8px;\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    padding-right: 32px;\n  }\n`\n\nconst StyledTr = styled.tr`\n  cursor: pointer;\n  &:not(:last-child) {\n    border-bottom: 2px solid ${({ theme }) => theme.colors.disabled};\n  }\n`\n\nconst EarnedMobileCell = styled.td`\n  padding: 16px 0 24px 16px;\n`\n\nconst AprMobileCell = styled.td`\n  padding-top: 16px;\n  padding-bottom: 24px;\n`\n\nconst FarmMobileCell = styled.td`\n  padding-top: 24px;\n`\n\nconst Row: React.FunctionComponent<React.PropsWithChildren<RowPropsWithLoading>> = (props) => {\n  const { details, initialActivity, userDataReady } = props\n  const { stakedBalance, proxy, tokenBalance } = props.details.userData\n  const hasSetInitialValue = useRef(false)\n  const hasStakedAmount = !!useFarmUser(details.pid).stakedBalance.toNumber()\n  const [actionPanelExpanded, setActionPanelExpanded] = useState(hasStakedAmount)\n  const shouldRenderChild = useDelayedUnmount(actionPanelExpanded, 300)\n  const { t } = useTranslation()\n\n  const toggleActionPanel = () => {\n    setActionPanelExpanded(!actionPanelExpanded)\n  }\n\n  useEffect(() => {\n    setActionPanelExpanded(hasStakedAmount)\n  }, [hasStakedAmount])\n  useEffect(() => {\n    if (initialActivity && hasSetInitialValue.current === false) {\n      setActionPanelExpanded(initialActivity)\n      hasSetInitialValue.current = true\n    }\n  }, [initialActivity])\n\n  const { isDesktop, isMobile } = useMatchBreakpoints()\n\n  const isSmallerScreen = !isDesktop\n  const tableSchema = isSmallerScreen ? MobileColumnSchema : DesktopColumnSchema\n  const columnNames = tableSchema.map((column) => column.name)\n\n  const handleRenderRow = () => {\n    if (!isMobile) {\n      return (\n        <StyledTr onClick={toggleActionPanel}>\n          {Object.keys(props).map((key) => {\n            const columnIndex = columnNames.indexOf(key)\n            if (columnIndex === -1) {\n              return null\n            }\n\n            switch (key) {\n              case 'type':\n                return (\n                  <td key={key}>\n                    {userDataReady ? (\n                      <CellInner style={{ width: '140px' }}>\n                        {props[key] === 'community' ? <FarmAuctionTag scale=\"sm\" /> : <CoreTag scale=\"sm\" />}\n                        {props?.details?.isStable ? <StableFarmTag scale=\"sm\" ml=\"6px\" /> : null}\n                        {props?.details?.boosted ? <BoostedTag scale=\"sm\" ml=\"6px\" /> : null}\n                      </CellInner>\n                    ) : (\n                      <Skeleton width={60} height={24} />\n                    )}\n                  </td>\n                )\n              case 'details':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout>\n                        <Details actionPanelToggled={actionPanelExpanded} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              case 'apr':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={t('APR')}>\n                        <Apr\n                          {...props.apr}\n                          hideButton={isSmallerScreen}\n                          strikethrough={props?.details?.boosted}\n                          boosted={props?.details?.boosted}\n                        />\n                        {props?.details?.boosted && userDataReady ? (\n                          <BoostedApr\n                            lpRewardsApr={props?.apr?.lpRewardsApr}\n                            apr={props?.apr?.originalValue}\n                            pid={props.farm?.pid}\n                            lpTotalSupply={props.details?.lpTotalSupply}\n                            userBalanceInFarm={\n                              stakedBalance.plus(tokenBalance).gt(0)\n                                ? stakedBalance.plus(tokenBalance)\n                                : proxy.stakedBalance.plus(proxy.tokenBalance)\n                            }\n                          />\n                        ) : null}\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              default:\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={t(tableSchema[columnIndex].label)}>\n                        {createElement(cells[key], { ...props[key], userDataReady })}\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n            }\n          })}\n        </StyledTr>\n      )\n    }\n\n    return (\n      <>\n        <tr style={{ cursor: 'pointer' }} onClick={toggleActionPanel}>\n          <FarmMobileCell colSpan={3}>\n            <Flex justifyContent=\"space-between\" alignItems=\"center\">\n              <Farm {...props.farm} />\n              {props.type === 'community' ? (\n                <FarmAuctionTag marginRight=\"16px\" scale=\"sm\" />\n              ) : (\n                <Flex mr=\"16px\">\n                  <CoreTag scale=\"sm\" />\n                  {props?.details?.isStable ? (\n                    <StableFarmTag style={{ background: 'none', verticalAlign: 'bottom' }} scale=\"sm\" ml=\"4px\" />\n                  ) : null}\n                  {props?.details?.boosted ? (\n                    <BoostedTag style={{ background: 'none', verticalAlign: 'bottom' }} scale=\"sm\" ml=\"4px\" />\n                  ) : null}\n                </Flex>\n              )}\n            </Flex>\n          </FarmMobileCell>\n        </tr>\n        <StyledTr onClick={toggleActionPanel}>\n          <td width=\"33%\">\n            <EarnedMobileCell>\n              <CellLayout label={t('Earned')}>\n                <Earned {...props.earned} userDataReady={userDataReady} />\n              </CellLayout>\n            </EarnedMobileCell>\n          </td>\n          <td width=\"33%\">\n            <AprMobileCell>\n              <CellLayout label={t('APR')}>\n                <Apr\n                  {...props.apr}\n                  hideButton\n                  strikethrough={props?.details?.boosted}\n                  boosted={props?.details?.boosted}\n                />\n                {props?.details?.boosted && userDataReady ? (\n                  <BoostedApr\n                    lpRewardsApr={props?.apr?.lpRewardsApr}\n                    apr={props?.apr?.originalValue}\n                    pid={props.farm?.pid}\n                    lpTotalSupply={props.details?.lpTotalSupply}\n                    userBalanceInFarm={\n                      stakedBalance.plus(tokenBalance).gt(0)\n                        ? stakedBalance.plus(tokenBalance)\n                        : proxy.stakedBalance.plus(proxy.tokenBalance)\n                    }\n                  />\n                ) : null}\n              </CellLayout>\n            </AprMobileCell>\n          </td>\n          <td width=\"33%\">\n            <CellInner style={{ justifyContent: 'flex-end' }}>\n              <Details actionPanelToggled={actionPanelExpanded} />\n            </CellInner>\n          </td>\n        </StyledTr>\n      </>\n    )\n  }\n\n  return (\n    <>\n      {handleRenderRow()}\n      {shouldRenderChild && (\n        <tr>\n          <td colSpan={7}>\n            <ActionPanel {...props} expanded={actionPanelExpanded} alignLinksToRight={isMobile} />\n          </td>\n        </tr>\n      )}\n    </>\n  )\n}\n\nexport default Row\n","import { useRef, useMemo } from 'react'\nimport styled from 'styled-components'\nimport { RowType, DesktopColumnSchema } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from '@pancakeswap/utils/formatBalance'\nimport latinise from '@pancakeswap/utils/latinise'\nimport { BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport { useRouter } from 'next/router'\nimport { FarmWithStakedValue } from '@pancakeswap/farms'\nimport { getDisplayApr } from '../getDisplayApr'\n\nimport Row, { RowProps } from './Row'\nimport ProxyFarmContainer from '../YieldBooster/components/ProxyFarmContainer'\n\nexport interface ITableProps {\n  farms: FarmWithStakedValue[]\n  userDataReady: boolean\n  cakePrice: BigNumber\n  sortColumn?: string\n}\n\nconst Container = styled.div`\n  width: 100%;\n  background: ${({ theme }) => theme.card.background};\n  border-radius: 16px;\n  margin: 16px 0px;\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst TableWrapper = styled.div`\n  overflow: visible;\n  scroll-margin-top: 64px;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nconst StyledTable = styled.table`\n  border-collapse: collapse;\n  font-size: 14px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n`\n\nconst TableBody = styled.tbody`\n  & tr {\n    td {\n      font-size: 16px;\n      vertical-align: middle;\n    }\n\n    :last-child {\n      td[colspan='7'] {\n        > div {\n          border-bottom-left-radius: 16px;\n          border-bottom-right-radius: 16px;\n        }\n      }\n    }\n  }\n`\nconst TableContainer = styled.div`\n  position: relative;\n`\n\nconst FarmTable: React.FC<React.PropsWithChildren<ITableProps>> = ({ farms, cakePrice, userDataReady }) => {\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const { query } = useRouter()\n\n  const columns = useMemo(\n    () =>\n      DesktopColumnSchema.map((column) => ({\n        id: column.id,\n        name: column.name,\n        label: column.label,\n        sort: (a: RowType<RowProps>, b: RowType<RowProps>) => {\n          switch (column.name) {\n            case 'farm':\n              return b.id - a.id\n            case 'apr':\n              if (a.original.apr.value && b.original.apr.value) {\n                return Number(a.original.apr.value) - Number(b.original.apr.value)\n              }\n\n              return 0\n            case 'earned':\n              return a.original.earned.earnings - b.original.earned.earnings\n            default:\n              return 1\n          }\n        },\n        sortable: column.sortable,\n      })),\n    [],\n  )\n\n  const getFarmEarnings = (farm) => {\n    let earnings = BIG_ZERO\n    const existingEarnings = new BigNumber(farm.userData.earnings)\n\n    if (farm.boosted) {\n      const proxyEarnings = new BigNumber(farm.userData?.proxy?.earnings)\n\n      earnings = proxyEarnings.gt(0) ? proxyEarnings : existingEarnings\n    } else {\n      earnings = existingEarnings\n    }\n\n    return getBalanceNumber(earnings)\n  }\n\n  const generateRow = (farm) => {\n    const { token, quoteToken } = farm\n    const tokenAddress = token.address\n    const quoteTokenAddress = quoteToken.address\n    const lpLabel = farm.lpSymbol && farm.lpSymbol.replace(/pancake/gi, '')\n    const lowercaseQuery = latinise(typeof query?.search === 'string' ? query.search.toLowerCase() : '')\n    const initialActivity = latinise(lpLabel?.toLowerCase()) === lowercaseQuery\n    const row: RowProps = {\n      apr: {\n        value: getDisplayApr(farm.apr, farm.lpRewardsApr),\n        pid: farm.pid,\n        multiplier: farm.multiplier,\n        lpLabel,\n        lpSymbol: farm.lpSymbol,\n        lpTokenPrice: farm.lpTokenPrice,\n        tokenAddress,\n        quoteTokenAddress,\n        cakePrice,\n        lpRewardsApr: farm.lpRewardsApr,\n        originalValue: farm.apr,\n        stableSwapAddress: farm.stableSwapAddress,\n        stableLpFee: farm.stableLpFee,\n      },\n      farm: {\n        label: lpLabel,\n        pid: farm.pid,\n        token: farm.token,\n        quoteToken: farm.quoteToken,\n        isReady: farm.multiplier !== undefined,\n        isStable: farm.isStable,\n        isBoosted: farm.boosted,\n      },\n      earned: {\n        earnings: getFarmEarnings(farm),\n        pid: farm.pid,\n      },\n      liquidity: {\n        liquidity: farm?.liquidity,\n      },\n      multiplier: {\n        multiplier: farm.multiplier,\n      },\n      type: farm.isCommunity ? 'community' : 'core',\n      details: farm,\n      initialActivity,\n    }\n\n    return row\n  }\n\n  const rowData = farms.map((farm) => generateRow(farm))\n\n  const generateSortedRow = (row) => {\n    // @ts-ignore\n    const newRow: RowProps = {}\n    columns.forEach((column) => {\n      if (!(column.name in row)) {\n        throw new Error(`Invalid row data, ${column.name} not found`)\n      }\n      newRow[column.name] = row[column.name]\n    })\n    newRow.initialActivity = row.initialActivity\n    return newRow\n  }\n\n  const sortedRows = rowData.map(generateSortedRow)\n\n  return (\n    <Container id=\"farms-table\">\n      <TableContainer id=\"table-container\">\n        <TableWrapper ref={tableWrapperEl}>\n          <StyledTable>\n            <TableBody>\n              {sortedRows.map((row) => {\n                return row?.details?.boosted ? (\n                  <ProxyFarmContainer key={`table-row-${row.farm.pid}`} farm={row.details}>\n                    <Row {...row} userDataReady={userDataReady} />\n                  </ProxyFarmContainer>\n                ) : (\n                  <Row {...row} userDataReady={userDataReady} key={`table-row-${row.farm.pid}`} />\n                )\n              })}\n            </TableBody>\n          </StyledTable>\n        </TableWrapper>\n      </TableContainer>\n    </Container>\n  )\n}\n\nexport default FarmTable\n","import { useEffect, useState, useRef } from 'react'\nimport { Box, Button, RocketIcon, CurrencyIcon, Flex, Text, InlineMenu, Toggle } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from '@pancakeswap/localization'\n\ninterface FarmTypesFilterProps {\n  boostedOnly: boolean\n  handleSetBoostedOnly: (value: boolean) => void\n  stableSwapOnly: boolean\n  handleSetStableSwapOnly: (value: boolean) => void\n  farmTypesEnableCount: number\n  handleSetFarmTypesEnableCount: (value: number) => void\n}\n\nexport const FarmTypesWrapper = styled(Flex)`\n  background: ${({ theme }) => theme.colors.dropdown};\n  border-radius: 24px 24px 0 0;\n`\n\nexport const StyledItemRow = styled(Flex)`\n  cursor: pointer;\n  user-select: none;\n`\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nexport const FarmTypesFilter: React.FC<FarmTypesFilterProps> = ({\n  boostedOnly,\n  handleSetBoostedOnly,\n  stableSwapOnly,\n  handleSetStableSwapOnly,\n  farmTypesEnableCount,\n  handleSetFarmTypesEnableCount,\n}) => {\n  const { t } = useTranslation()\n\n  const [isOpen, setIsOpen] = useState(false)\n  const wrapperRef = useRef(null)\n  const menuRef = useRef(null)\n  const handleMenuClick = () => setIsOpen(!isOpen)\n\n  useEffect(() => {\n    const handleClickOutside = ({ target }: Event) => {\n      if (\n        wrapperRef.current &&\n        menuRef.current &&\n        !menuRef.current.contains(target) &&\n        !wrapperRef.current.contains(target)\n      ) {\n        setIsOpen(false)\n      }\n    }\n\n    document.addEventListener('click', handleClickOutside)\n\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [setIsOpen, wrapperRef, menuRef])\n\n  return (\n    <>\n      <Flex alignItems=\"center\" mr=\"4px\" mb=\"4px\">\n        <Box ref={wrapperRef}>\n          <InlineMenu\n            component={\n              <Button onClick={handleMenuClick} variant=\"light\" scale=\"sm\">\n                {t('Farm Types')}\n                {farmTypesEnableCount > 0 && `(${farmTypesEnableCount})`}\n              </Button>\n            }\n            isOpen={isOpen}\n            options={{ placement: 'top' }}\n          >\n            <Box width={['100%', '345px']} ref={menuRef}>\n              <FarmTypesWrapper alignItems=\"center\" p=\"16px\">\n                <Text fontSize={20} bold color=\"text\" display=\"inline-block\" ml=\"8px\">\n                  {t('Farm Types')}\n                </Text>\n              </FarmTypesWrapper>\n              <Box height=\"240px\" overflowY=\"auto\">\n                <StyledItemRow alignItems=\"center\" px=\"16px\" py=\"8px\" ml=\"8px\" mt=\"8px\">\n                  <RocketIcon />\n                  <Text fontSize={16} ml=\"10px\" style={{ flex: 1 }} bold>\n                    {t('Booster Available')}\n                  </Text>\n                  <ToggleWrapper>\n                    <Toggle\n                      id=\"boosted-only-farms\"\n                      checked={boostedOnly}\n                      onChange={() => {\n                        const totalFarmsEnableCount = farmTypesEnableCount + (!boostedOnly ? 1 : -1)\n                        handleSetFarmTypesEnableCount(totalFarmsEnableCount)\n\n                        handleSetBoostedOnly(!boostedOnly)\n                      }}\n                      scale=\"sm\"\n                    />\n                  </ToggleWrapper>\n                </StyledItemRow>\n                <StyledItemRow alignItems=\"center\" px=\"16px\" py=\"8px\" ml=\"8px\" mt=\"8px\">\n                  <CurrencyIcon />\n                  <Text fontSize={16} ml=\"10px\" style={{ flex: 1 }} bold>\n                    {t('StableSwap')}\n                  </Text>\n                  <ToggleWrapper>\n                    <Toggle\n                      id=\"stableSwap-only-farms\"\n                      checked={stableSwapOnly}\n                      onChange={() => {\n                        const totalFarmsEnableCount = farmTypesEnableCount + (!stableSwapOnly ? 1 : -1)\n                        handleSetFarmTypesEnableCount(totalFarmsEnableCount)\n\n                        handleSetStableSwapOnly(!stableSwapOnly)\n                      }}\n                      scale=\"sm\"\n                    />\n                  </ToggleWrapper>\n                </StyledItemRow>\n              </Box>\n            </Box>\n          </InlineMenu>\n        </Box>\n      </Flex>\n    </>\n  )\n}\n","import Cookie from 'js-cookie'\nimport { Token } from '@pancakeswap/swap-sdk-core'\nimport { useEffect, useState } from 'react'\nimport { useModal } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport MultiChainHarvestModal from '../components/MultiChainHarvestModal'\n\nconst useMultiChainHarvestModal = () => {\n  const [harvestModalParams, setHarvestModalParams] = useState<{\n    pid: number\n    token: Token\n    quoteToken: Token\n    lpSymbol: string\n    earningsBigNumber: BigNumber\n    earningsBusd: number\n  }>(null)\n\n  const [onPresentNonBscHarvestModal] = useModal(\n    harvestModalParams ? (\n      <MultiChainHarvestModal\n        pid={harvestModalParams.pid}\n        token={harvestModalParams.token}\n        lpSymbol={harvestModalParams.lpSymbol}\n        quoteToken={harvestModalParams.quoteToken}\n        earningsBigNumber={new BigNumber(harvestModalParams.earningsBigNumber)}\n        earningsBusd={harvestModalParams.earningsBusd}\n      />\n    ) : null,\n  )\n\n  useEffect(() => {\n    if (harvestModalParams) {\n      onPresentNonBscHarvestModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [harvestModalParams])\n\n  useEffect(() => {\n    const harvestModalCookie = Cookie.get('multiChainHarvestModal')\n    if (harvestModalCookie) {\n      setHarvestModalParams(JSON.parse(harvestModalCookie))\n      Cookie.remove('multiChainHarvestModal')\n    }\n  }, [])\n}\n\nexport default useMultiChainHarvestModal\n","import { useEffect, useCallback, useState, useMemo, useRef } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { useAccount } from 'wagmi'\nimport {\n  Image,\n  Heading,\n  Toggle,\n  Text,\n  Button,\n  ArrowForwardIcon,\n  Flex,\n  Link,\n  Box,\n  Farm as FarmUI,\n  Loading,\n  SearchInput,\n  Select,\n  OptionProps,\n  FlexLayout,\n  PageHeader,\n  NextLinkFromReactRouter,\n  ToggleView,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport Page from 'components/Layout/Page'\nimport { useFarms, usePollFarmsWithUserData, usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVaultUserData } from 'state/pools/hooks'\nimport { useIntersectionObserver } from '@pancakeswap/hooks'\nimport { DeserializedFarm, FarmWithStakedValue, filterFarmsByQuery } from '@pancakeswap/farms'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { getFarmApr } from 'utils/apr'\nimport orderBy from 'lodash/orderBy'\nimport { useUserFarmStakedOnly, useUserFarmsViewMode } from 'state/user/hooks'\nimport { ViewMode } from 'state/user/actions'\nimport { useRouter } from 'next/router'\nimport { useActiveChainId } from 'hooks/useActiveChainId'\nimport Table from './components/FarmTable/FarmTable'\nimport { BCakeBoosterCard } from './components/BCakeBoosterCard'\nimport { FarmTypesFilter } from './components/FarmTypesFilter'\nimport { FarmsContext } from './context'\nimport useMultiChainHarvestModal from './hooks/useMultiChainHarvestModal'\n\nconst ControlContainer = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    margin-bottom: 0;\n  }\n`\nconst FarmFlexWrapper = styled(Flex)`\n  flex-wrap: wrap;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-wrap: nowrap;\n  }\n`\nconst FarmH1 = styled(Heading)`\n  font-size: 32px;\n  margin-bottom: 8px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 64px;\n    margin-bottom: 24px;\n  }\n`\nconst FarmH2 = styled(Heading)`\n  font-size: 16px;\n  margin-bottom: 8px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 24px;\n    margin-bottom: 18px;\n  }\n`\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst StyledImage = styled(Image)`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 58px;\n`\n\nconst FinishedTextContainer = styled(Flex)`\n  padding-bottom: 32px;\n  flex-direction: column;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n  }\n`\n\nconst FinishedTextLink = styled(Link)`\n  font-weight: 400;\n  white-space: nowrap;\n  text-decoration: underline;\n`\n\nconst NUMBER_OF_FARMS_VISIBLE = 12\n\nconst Farms: React.FC<React.PropsWithChildren> = ({ children }) => {\n  const { pathname, query: urlQuery } = useRouter()\n  const { t } = useTranslation()\n  const { chainId } = useActiveChainId()\n  const { data: farmsLP, userDataLoaded, poolLength, regularCakePerBlock } = useFarms()\n  const cakePrice = usePriceCakeBusd()\n\n  const [_query, setQuery] = useState('')\n  const normalizedUrlSearch = useMemo(() => (typeof urlQuery?.search === 'string' ? urlQuery.search : ''), [urlQuery])\n  const query = normalizedUrlSearch && !_query ? normalizedUrlSearch : _query\n\n  const [viewMode, setViewMode] = useUserFarmsViewMode()\n  const { address: account } = useAccount()\n  const [sortOption, setSortOption] = useState('hot')\n  const { observerRef, isIntersecting } = useIntersectionObserver()\n  const chosenFarmsLength = useRef(0)\n\n  const isArchived = pathname.includes('archived')\n  const isInactive = pathname.includes('history')\n  const isActive = !isInactive && !isArchived\n\n  useCakeVaultUserData()\n\n  usePollFarmsWithUserData()\n\n  useMultiChainHarvestModal()\n\n  // Users with no wallet connected should see 0 as Earned amount\n  // Connected users should see loading indicator until first userData has loaded\n  const userDataReady = !account || (!!account && userDataLoaded)\n\n  const [stakedOnly, setStakedOnly] = useUserFarmStakedOnly(isActive)\n  const [boostedOnly, setBoostedOnly] = useState(false)\n  const [stableSwapOnly, setStableSwapOnly] = useState(false)\n  const [farmTypesEnableCount, setFarmTypesEnableCount] = useState(0)\n\n  // NOTE: Temporarily inactive aBNBc-BNB LP on FE\n  const activeFarms = farmsLP.filter(\n    (farm) =>\n      farm.lpAddress !== '0x272c2CF847A49215A3A1D4bFf8760E503A06f880' &&\n      farm.lpAddress !== '0xB6040A9F294477dDAdf5543a24E5463B8F2423Ae' &&\n      farm.pid !== 0 &&\n      farm.multiplier !== '0X' &&\n      (!poolLength || poolLength > farm.pid),\n  )\n\n  const inactiveFarms = farmsLP.filter(\n    (farm) =>\n      farm.lpAddress === '0xB6040A9F294477dDAdf5543a24E5463B8F2423Ae' ||\n      farm.lpAddress === '0x272c2CF847A49215A3A1D4bFf8760E503A06f880' ||\n      (farm.pid !== 0 && farm.multiplier === '0X'),\n  )\n  const archivedFarms = farmsLP\n\n  const stakedOnlyFarms = activeFarms.filter(\n    (farm) =>\n      farm.userData &&\n      (new BigNumber(farm.userData.stakedBalance).isGreaterThan(0) ||\n        new BigNumber(farm.userData.proxy?.stakedBalance).isGreaterThan(0)),\n  )\n\n  const stakedInactiveFarms = inactiveFarms.filter(\n    (farm) =>\n      farm.userData &&\n      (new BigNumber(farm.userData.stakedBalance).isGreaterThan(0) ||\n        new BigNumber(farm.userData.proxy?.stakedBalance).isGreaterThan(0)),\n  )\n\n  const stakedArchivedFarms = archivedFarms.filter(\n    (farm) =>\n      farm.userData &&\n      (new BigNumber(farm.userData.stakedBalance).isGreaterThan(0) ||\n        new BigNumber(farm.userData.proxy?.stakedBalance).isGreaterThan(0)),\n  )\n\n  const farmsList = useCallback(\n    (farmsToDisplay: DeserializedFarm[]): FarmWithStakedValue[] => {\n      const farmsToDisplayWithAPR: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        if (!farm.lpTotalInQuoteToken || !farm.quoteTokenPriceBusd) {\n          return farm\n        }\n\n        const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(farm.quoteTokenPriceBusd)\n        const { cakeRewardsApr, lpRewardsApr } = isActive\n          ? getFarmApr(\n              chainId,\n              new BigNumber(farm.poolWeight),\n              cakePrice,\n              totalLiquidity,\n              farm.lpAddress,\n              regularCakePerBlock,\n            )\n          : { cakeRewardsApr: 0, lpRewardsApr: 0 }\n\n        return { ...farm, apr: cakeRewardsApr, lpRewardsApr, liquidity: totalLiquidity }\n      })\n\n      return filterFarmsByQuery(farmsToDisplayWithAPR, query)\n    },\n    [query, isActive, chainId, cakePrice, regularCakePerBlock],\n  )\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value)\n  }\n\n  const [numberOfFarmsVisible, setNumberOfFarmsVisible] = useState(NUMBER_OF_FARMS_VISIBLE)\n\n  const chosenFarms = useMemo(() => {\n    let chosenFs = []\n    if (isActive) {\n      chosenFs = stakedOnly ? farmsList(stakedOnlyFarms) : farmsList(activeFarms)\n    }\n    if (isInactive) {\n      chosenFs = stakedOnly ? farmsList(stakedInactiveFarms) : farmsList(inactiveFarms)\n    }\n    if (isArchived) {\n      chosenFs = stakedOnly ? farmsList(stakedArchivedFarms) : farmsList(archivedFarms)\n    }\n\n    if (boostedOnly || stableSwapOnly) {\n      const boostedOrStableSwapFarms = chosenFs.filter(\n        (farm) => (boostedOnly && farm.boosted) || (stableSwapOnly && farm.isStable),\n      )\n\n      const stakedBoostedOrStableSwapFarms = chosenFs.filter(\n        (farm) =>\n          farm.userData &&\n          (new BigNumber(farm.userData.stakedBalance).isGreaterThan(0) ||\n            new BigNumber(farm.userData.proxy?.stakedBalance).isGreaterThan(0)),\n      )\n\n      chosenFs = stakedOnly ? farmsList(stakedBoostedOrStableSwapFarms) : farmsList(boostedOrStableSwapFarms)\n    }\n\n    return chosenFs\n  }, [\n    activeFarms,\n    farmsList,\n    inactiveFarms,\n    archivedFarms,\n    isActive,\n    isInactive,\n    isArchived,\n    stakedArchivedFarms,\n    stakedInactiveFarms,\n    stakedOnly,\n    stakedOnlyFarms,\n    boostedOnly,\n    stableSwapOnly,\n  ])\n\n  const chosenFarmsMemoized = useMemo(() => {\n    const sortFarms = (farms: FarmWithStakedValue[]): FarmWithStakedValue[] => {\n      switch (sortOption) {\n        case 'apr':\n          return orderBy(farms, (farm: FarmWithStakedValue) => farm.apr + farm.lpRewardsApr, 'desc')\n        case 'multiplier':\n          return orderBy(\n            farms,\n            (farm: FarmWithStakedValue) => (farm.multiplier ? Number(farm.multiplier.slice(0, -1)) : 0),\n            'desc',\n          )\n        case 'earned':\n          return orderBy(\n            farms,\n            (farm: FarmWithStakedValue) => (farm.userData ? Number(farm.userData.earnings) : 0),\n            'desc',\n          )\n        case 'liquidity':\n          return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.liquidity), 'desc')\n        case 'latest':\n          return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.pid), 'desc')\n        default:\n          return farms\n      }\n    }\n\n    return sortFarms(chosenFarms).slice(0, numberOfFarmsVisible)\n  }, [chosenFarms, sortOption, numberOfFarmsVisible])\n\n  chosenFarmsLength.current = chosenFarmsMemoized.length\n\n  useEffect(() => {\n    if (isIntersecting) {\n      setNumberOfFarmsVisible((farmsCurrentlyVisible) => {\n        if (farmsCurrentlyVisible <= chosenFarmsLength.current) {\n          return farmsCurrentlyVisible + NUMBER_OF_FARMS_VISIBLE\n        }\n        return farmsCurrentlyVisible\n      })\n    }\n  }, [isIntersecting])\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const providerValue = useMemo(() => ({ chosenFarmsMemoized }), [chosenFarmsMemoized])\n\n  return (\n    <FarmsContext.Provider value={providerValue}>\n      <PageHeader>\n        <FarmFlexWrapper justifyContent=\"space-between\">\n          <Box>\n            <FarmH1 as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n              {t('Farms')}\n            </FarmH1>\n            <FarmH2 scale=\"lg\" color=\"text\">\n              {t('Stake LP tokens to earn.')}\n            </FarmH2>\n            <NextLinkFromReactRouter to=\"/farms/auction\" prefetch={false}>\n              <Button p=\"0\" variant=\"text\">\n                <Text color=\"primary\" bold fontSize=\"16px\" mr=\"4px\">\n                  {t('Community Auctions')}\n                </Text>\n                <ArrowForwardIcon color=\"primary\" />\n              </Button>\n            </NextLinkFromReactRouter>\n          </Box>\n          {chainId === ChainId.BSC && (\n            <Box>\n              <BCakeBoosterCard />\n            </Box>\n          )}\n        </FarmFlexWrapper>\n      </PageHeader>\n      <Page>\n        <ControlContainer>\n          <ViewControls>\n            <Flex mt=\"20px\">\n              <ToggleView idPrefix=\"clickFarm\" viewMode={viewMode} onToggle={setViewMode} />\n            </Flex>\n            <FarmUI.FarmTabButtons hasStakeInFinishedFarms={stakedInactiveFarms.length > 0} />\n            <Flex mt=\"20px\" ml=\"16px\">\n              <FarmTypesFilter\n                boostedOnly={boostedOnly}\n                handleSetBoostedOnly={setBoostedOnly}\n                stableSwapOnly={stableSwapOnly}\n                handleSetStableSwapOnly={setStableSwapOnly}\n                farmTypesEnableCount={farmTypesEnableCount}\n                handleSetFarmTypesEnableCount={setFarmTypesEnableCount}\n              />\n              <ToggleWrapper>\n                <Toggle\n                  id=\"staked-only-farms\"\n                  checked={stakedOnly}\n                  onChange={() => setStakedOnly(!stakedOnly)}\n                  scale=\"sm\"\n                />\n                <Text> {t('Staked only')}</Text>\n              </ToggleWrapper>\n            </Flex>\n          </ViewControls>\n          <FilterContainer>\n            <LabelWrapper>\n              <Text textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\" bold>\n                {t('Sort by')}\n              </Text>\n              <Select\n                options={[\n                  {\n                    label: t('Hot'),\n                    value: 'hot',\n                  },\n                  {\n                    label: t('APR'),\n                    value: 'apr',\n                  },\n                  {\n                    label: t('Multiplier'),\n                    value: 'multiplier',\n                  },\n                  {\n                    label: t('Earned'),\n                    value: 'earned',\n                  },\n                  {\n                    label: t('Liquidity'),\n                    value: 'liquidity',\n                  },\n                  {\n                    label: t('Latest'),\n                    value: 'latest',\n                  },\n                ]}\n                onOptionChange={handleSortOptionChange}\n              />\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\" bold>\n                {t('Search')}\n              </Text>\n              <SearchInput initialValue={normalizedUrlSearch} onChange={handleChangeQuery} placeholder=\"Search Farms\" />\n            </LabelWrapper>\n          </FilterContainer>\n        </ControlContainer>\n        {isInactive && (\n          <FinishedTextContainer>\n            <Text fontSize={['16px', null, '20px']} color=\"failure\" pr=\"4px\">\n              {t(\"Don't see the farm you are staking?\")}\n            </Text>\n            <Flex>\n              <FinishedTextLink href=\"/migration\" fontSize={['16px', null, '20px']} color=\"failure\">\n                {t('Go to migration page')}\n              </FinishedTextLink>\n              <Text fontSize={['16px', null, '20px']} color=\"failure\" padding=\"0px 4px\">\n                or\n              </Text>\n              <FinishedTextLink\n                external\n                color=\"failure\"\n                fontSize={['16px', null, '20px']}\n                href=\"https://v1-farms.pancakeswap.finance/farms/history\"\n              >\n                {t('check out v1 farms')}.\n              </FinishedTextLink>\n            </Flex>\n          </FinishedTextContainer>\n        )}\n        {viewMode === ViewMode.TABLE ? (\n          <Table farms={chosenFarmsMemoized} cakePrice={cakePrice} userDataReady={userDataReady} />\n        ) : (\n          <FlexLayout>{children}</FlexLayout>\n        )}\n        {account && !userDataLoaded && stakedOnly && (\n          <Flex justifyContent=\"center\">\n            <Loading />\n          </Flex>\n        )}\n        {poolLength && <div ref={observerRef} />}\n        <StyledImage src=\"/images/decorations/3dpan.png\" alt=\"Pancake illustration\" width={120} height={103} />\n      </Page>\n    </FarmsContext.Provider>\n  )\n}\n\nexport default Farms\n","import { useTranslation } from '@pancakeswap/localization'\nimport {\n  Button,\n  Flex,\n  Heading,\n  TooltipText,\n  useToast,\n  useTooltip,\n  useModal,\n  Balance,\n  FARMS_SMALL_AMOUNT_THRESHOLD,\n} from '@pancakeswap/uikit'\nimport { useAccount } from 'wagmi'\nimport BigNumber from 'bignumber.js'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport useCatchTxError from 'hooks/useCatchTxError'\n\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport { getBalanceAmount } from '@pancakeswap/utils/formatBalance'\nimport { Token } from '@pancakeswap/sdk'\nimport MultiChainHarvestModal from 'views/Farms/components/MultiChainHarvestModal'\n\ninterface FarmCardActionsProps {\n  pid?: number\n  token?: Token\n  quoteToken?: Token\n  earnings?: BigNumber\n  vaultPid?: number\n  proxyCakeBalance?: number\n  lpSymbol?: string\n  onReward?: () => Promise<TransactionResponse>\n  onDone?: () => void\n}\n\nconst HarvestAction: React.FC<React.PropsWithChildren<FarmCardActionsProps>> = ({\n  pid,\n  token,\n  quoteToken,\n  vaultPid,\n  earnings,\n  proxyCakeBalance,\n  lpSymbol,\n  onReward,\n  onDone,\n}) => {\n  const { address: account } = useAccount()\n  const { toastSuccess } = useToast()\n  const { fetchWithCatchTxError, loading: pendingTx } = useCatchTxError()\n  const { t } = useTranslation()\n  const cakePrice = usePriceCakeBusd()\n  const rawEarningsBalance = account ? getBalanceAmount(earnings) : BIG_ZERO\n  const displayBalance = rawEarningsBalance.toFixed(5, BigNumber.ROUND_DOWN)\n  const earningsBusd = rawEarningsBalance ? rawEarningsBalance.multipliedBy(cakePrice).toNumber() : 0\n  const tooltipBalance = rawEarningsBalance.isGreaterThan(FARMS_SMALL_AMOUNT_THRESHOLD) ? displayBalance : '< 0.00001'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    `${tooltipBalance} ${t(\n      `CAKE has been harvested to the farm booster contract and will be automatically sent to your wallet upon the next harvest.`,\n    )}`,\n    {\n      placement: 'bottom',\n    },\n  )\n\n  const onClickHarvestButton = () => {\n    if (vaultPid) {\n      onPresentNonBscHarvestModal()\n    } else {\n      handleHarvest()\n    }\n  }\n\n  const handleHarvest = async () => {\n    const receipt = await fetchWithCatchTxError(() => {\n      return onReward()\n    })\n    if (receipt?.status) {\n      toastSuccess(\n        `${t('Harvested')}!`,\n        <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n          {t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'CAKE' })}\n        </ToastDescriptionWithTx>,\n      )\n      onDone?.()\n    }\n  }\n\n  const [onPresentNonBscHarvestModal] = useModal(\n    <MultiChainHarvestModal\n      pid={pid}\n      token={token}\n      lpSymbol={lpSymbol}\n      quoteToken={quoteToken}\n      earningsBigNumber={earnings}\n      earningsBusd={earningsBusd}\n    />,\n  )\n\n  return (\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\">\n        {proxyCakeBalance ? (\n          <>\n            <TooltipText ref={targetRef} decorationColor=\"secondary\">\n              <Heading color={rawEarningsBalance.eq(0) ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\n            </TooltipText>\n            {tooltipVisible && tooltip}\n          </>\n        ) : (\n          <Heading color={rawEarningsBalance.eq(0) ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\n        )}\n        {earningsBusd > 0 && (\n          <Balance fontSize=\"12px\" color=\"textSubtle\" decimals={2} value={earningsBusd} unit=\" USD\" prefix=\"~\" />\n        )}\n      </Flex>\n      <Button disabled={rawEarningsBalance.eq(0) || pendingTx} onClick={onClickHarvestButton}>\n        {pendingTx ? t('Harvesting') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestAction\n","import { useTranslation } from '@pancakeswap/localization'\nimport { AddIcon, Button, Flex, IconButton, MinusIcon, useModal, useToast, Farm as FarmUI } from '@pancakeswap/uikit'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport useCatchTxError from 'hooks/useCatchTxError'\nimport BCakeCalculator from 'views/Farms/components/YieldBooster/components/BCakeCalculator'\nimport { useCallback, useContext, useState, useMemo } from 'react'\nimport styled from 'styled-components'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { useRouter } from 'next/router'\nimport { usePriceCakeBusd, useFarmFromPid } from 'state/farms/hooks'\nimport { useAppDispatch } from 'state'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ChainId, WNATIVE, NATIVE } from '@pancakeswap/sdk'\nimport BigNumber from 'bignumber.js'\nimport { useIsBloctoETH } from 'views/Farms'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\nimport useNativeCurrency from 'hooks/useNativeCurrency'\nimport { formatLpBalance } from '@pancakeswap/utils/formatBalance'\nimport { pickFarmTransactionTx } from 'state/global/actions'\nimport { useTransactionAdder, useNonBscFarmPendingTransaction } from 'state/transactions/hooks'\nimport { FarmTransactionStatus, NonBscFarmStepType } from 'state/transactions/actions'\nimport WalletModal, { WalletView } from 'components/Menu/UserMenu/WalletModal'\nimport { FarmWithStakedValue } from '@pancakeswap/farms'\nimport { YieldBoosterStateContext } from '../YieldBooster/components/ProxyFarmContainer'\nimport { YieldBoosterState } from '../YieldBooster/hooks/useYieldBoosterState'\nimport { useFirstTimeCrossFarming } from '../../hooks/useFirstTimeCrossFarming'\n\ninterface FarmCardActionsProps extends FarmWithStakedValue {\n  lpLabel?: string\n  addLiquidityUrl?: string\n  displayApr?: string\n  onStake?: (value: string) => Promise<TransactionResponse>\n  onUnstake?: (value: string) => Promise<TransactionResponse>\n  onDone?: () => void\n  onApprove?: () => Promise<TransactionResponse>\n  isApproved?: boolean\n}\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n  svg {\n    width: 20px;\n  }\n`\n\nconst StakeAction: React.FC<React.PropsWithChildren<FarmCardActionsProps>> = ({\n  pid,\n  vaultPid,\n  quoteToken,\n  token,\n  lpSymbol,\n  lpTokenPrice,\n  multiplier,\n  apr,\n  lpAddress,\n  displayApr,\n  addLiquidityUrl,\n  lpLabel,\n  lpTotalSupply,\n  tokenAmountTotal,\n  quoteTokenAmountTotal,\n  userData,\n  onStake,\n  onUnstake,\n  onDone,\n  onApprove,\n  isApproved,\n}) => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const addTransaction = useTransactionAdder()\n  const { account, chainId } = useActiveWeb3React()\n  const native = useNativeCurrency()\n  const { tokenBalance, stakedBalance, allowance } = userData\n  const cakePrice = usePriceCakeBusd()\n  const router = useRouter()\n  const { lpTokenStakedAmount } = useFarmFromPid(pid)\n  const { toastSuccess } = useToast()\n  const { fetchWithCatchTxError, fetchTxResponse, loading: pendingTx } = useCatchTxError()\n  const { boosterState } = useContext(YieldBoosterStateContext)\n  const [bCakeMultiplier, setBCakeMultiplier] = useState<number | null>(() => null)\n  const pendingFarm = useNonBscFarmPendingTransaction(lpAddress)\n  const { isFirstTime, refresh: refreshFirstTime } = useFirstTimeCrossFarming(vaultPid)\n  const isBloctoETH = useIsBloctoETH()\n\n  const crossChainWarningText = useMemo(() => {\n    return isFirstTime\n      ? t('A small amount of %nativeToken% is required for the first-time setup of cross-chain CAKE farming.', {\n          nativeToken: native.symbol,\n        })\n      : t('For safety, cross-chain transactions will take around 30 minutes to confirm.')\n  }, [isFirstTime, native, t])\n\n  const isStakeReady = useMemo(() => {\n    return ['history', 'archived'].some((item) => router.pathname.includes(item)) || pendingFarm.length > 0\n  }, [pendingFarm, router])\n\n  const handleStake = async (amount: string) => {\n    if (vaultPid) {\n      await handleNonBscStake(amount)\n      refreshFirstTime()\n    } else {\n      const receipt = await fetchWithCatchTxError(() => onStake(amount))\n      if (receipt?.status) {\n        toastSuccess(\n          `${t('Staked')}!`,\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('Your funds have been staked in the farm')}\n          </ToastDescriptionWithTx>,\n        )\n        onDone()\n      }\n    }\n  }\n\n  const handleNonBscStake = async (amountValue: string) => {\n    const receipt = await fetchTxResponse(() => onStake(amountValue))\n    const amountAsBigNumber = new BigNumber(amountValue).times(DEFAULT_TOKEN_DECIMAL)\n    const amount = formatLpBalance(new BigNumber(amountAsBigNumber), 18)\n\n    if (receipt) {\n      addTransaction(receipt, {\n        type: 'non-bsc-farm',\n        translatableSummary: {\n          text: 'Stake %amount% %lpSymbol% Token',\n          data: { amount, lpSymbol },\n        },\n        nonBscFarm: {\n          type: NonBscFarmStepType.STAKE,\n          status: FarmTransactionStatus.PENDING,\n          amount,\n          lpSymbol,\n          lpAddress,\n          steps: [\n            {\n              step: 1,\n              chainId,\n              tx: receipt.hash,\n              isFirstTime,\n              status: FarmTransactionStatus.PENDING,\n            },\n            {\n              step: 2,\n              tx: '',\n              chainId: ChainId.BSC,\n              status: FarmTransactionStatus.PENDING,\n            },\n          ],\n        },\n      })\n\n      dispatch(pickFarmTransactionTx({ tx: receipt.hash, chainId }))\n      onDone()\n    }\n  }\n\n  const handleUnstake = async (amount: string) => {\n    if (vaultPid) {\n      await handleNonBscUnStake(amount)\n    } else {\n      const receipt = await fetchWithCatchTxError(() => onUnstake(amount))\n      if (receipt?.status) {\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('Your earnings have also been harvested to your wallet')}\n          </ToastDescriptionWithTx>,\n        )\n        onDone()\n      }\n    }\n  }\n\n  const handleNonBscUnStake = async (amountValue: string) => {\n    const receipt = await fetchTxResponse(() => onUnstake(amountValue))\n    const amountAsBigNumber = new BigNumber(amountValue).times(DEFAULT_TOKEN_DECIMAL)\n    const amount = formatLpBalance(new BigNumber(amountAsBigNumber), 18)\n\n    if (receipt) {\n      addTransaction(receipt, {\n        type: 'non-bsc-farm',\n        translatableSummary: {\n          text: 'Unstake %amount% %lpSymbol% Token',\n          data: { amount, lpSymbol },\n        },\n        nonBscFarm: {\n          type: NonBscFarmStepType.UNSTAKE,\n          status: FarmTransactionStatus.PENDING,\n          amount,\n          lpSymbol,\n          lpAddress,\n          steps: [\n            {\n              step: 1,\n              chainId,\n              tx: receipt.hash,\n              status: FarmTransactionStatus.PENDING,\n            },\n            {\n              step: 2,\n              chainId: ChainId.BSC,\n              tx: '',\n              status: FarmTransactionStatus.PENDING,\n            },\n            {\n              step: 3,\n              chainId,\n              tx: '',\n              status: FarmTransactionStatus.PENDING,\n            },\n          ],\n        },\n      })\n\n      dispatch(pickFarmTransactionTx({ tx: receipt.hash, chainId }))\n      onDone()\n    }\n  }\n\n  const handleApprove = useCallback(async () => {\n    const receipt = await fetchWithCatchTxError(() => {\n      return onApprove()\n    })\n    if (receipt?.status) {\n      toastSuccess(t('Contract Enabled'), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\n      onDone()\n    }\n  }, [onApprove, t, toastSuccess, fetchWithCatchTxError, onDone])\n\n  const bCakeCalculatorSlot = (calculatorBalance) => (\n    <BCakeCalculator\n      targetInputBalance={calculatorBalance}\n      earningTokenPrice={cakePrice.toNumber()}\n      lpTokenStakedAmount={lpTokenStakedAmount}\n      setBCakeMultiplier={setBCakeMultiplier}\n    />\n  )\n\n  const [onPresentDeposit] = useModal(\n    <FarmUI.DepositModal\n      account={account}\n      pid={pid}\n      lpTotalSupply={lpTotalSupply}\n      max={tokenBalance}\n      stakedBalance={stakedBalance}\n      tokenName={lpSymbol}\n      multiplier={multiplier}\n      lpPrice={lpTokenPrice}\n      lpLabel={lpLabel}\n      apr={apr}\n      displayApr={displayApr}\n      addLiquidityUrl={addLiquidityUrl}\n      cakePrice={cakePrice}\n      showActiveBooster={boosterState === YieldBoosterState.ACTIVE}\n      bCakeMultiplier={bCakeMultiplier}\n      showCrossChainFarmWarning={chainId !== ChainId.BSC && chainId !== ChainId.BSC_TESTNET}\n      crossChainWarningText={crossChainWarningText}\n      decimals={18}\n      allowance={allowance}\n      enablePendingTx={pendingTx}\n      onConfirm={handleStake}\n      handleApprove={handleApprove}\n      bCakeCalculatorSlot={bCakeCalculatorSlot}\n    />,\n    true,\n    true,\n    `farm-deposit-modal-${pid}`,\n  )\n\n  const [onPresentWithdraw] = useModal(\n    <FarmUI.WithdrawModal\n      showActiveBooster={boosterState === YieldBoosterState.ACTIVE}\n      max={stakedBalance}\n      onConfirm={handleUnstake}\n      lpPrice={lpTokenPrice}\n      tokenName={lpSymbol}\n      showCrossChainFarmWarning={chainId !== ChainId.BSC && chainId !== ChainId.BSC_TESTNET}\n      decimals={18}\n    />,\n  )\n\n  const renderStakingButtons = () => {\n    return stakedBalance.eq(0) ? (\n      <Button onClick={onPresentDeposit} disabled={isStakeReady}>\n        {t('Stake LP')}\n      </Button>\n    ) : (\n      <IconButtonWrapper>\n        <IconButton mr=\"6px\" variant=\"tertiary\" disabled={pendingFarm.length > 0} onClick={onPresentWithdraw}>\n          <MinusIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n        <IconButton variant=\"tertiary\" onClick={onPresentDeposit} disabled={isStakeReady || isBloctoETH}>\n          <AddIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n      </IconButtonWrapper>\n    )\n  }\n\n  const [onPresentTransactionModal] = useModal(<WalletModal initialView={WalletView.TRANSACTIONS} />)\n\n  const onClickLoadingIcon = () => {\n    const { length } = pendingFarm\n    if (length) {\n      if (length > 1) {\n        onPresentTransactionModal()\n      } else {\n        dispatch(pickFarmTransactionTx({ tx: pendingFarm[0].txid, chainId }))\n      }\n    }\n  }\n\n  // TODO: Move this out to prevent unnecessary re-rendered\n  if (!isApproved) {\n    return (\n      <Button mt=\"8px\" width=\"100%\" disabled={pendingTx || isBloctoETH} onClick={handleApprove}>\n        {t('Enable Contract')}\n      </Button>\n    )\n  }\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <FarmUI.StakedLP\n        decimals={18}\n        stakedBalance={stakedBalance}\n        quoteTokenSymbol={WNATIVE[chainId]?.symbol === quoteToken.symbol ? NATIVE[chainId]?.symbol : quoteToken.symbol}\n        tokenSymbol={WNATIVE[chainId]?.symbol === token.symbol ? NATIVE[chainId]?.symbol : token.symbol}\n        lpTotalSupply={lpTotalSupply}\n        lpTokenPrice={lpTokenPrice}\n        tokenAmountTotal={tokenAmountTotal}\n        quoteTokenAmountTotal={quoteTokenAmountTotal}\n        pendingFarmLength={pendingFarm.length}\n        onClickLoadingIcon={onClickLoadingIcon}\n      />\n      {renderStakingButtons()}\n    </Flex>\n  )\n}\n\nexport default StakeAction\n","import { useTranslation } from '@pancakeswap/localization'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport { BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useContext } from 'react'\nimport styled from 'styled-components'\nimport { FarmWithStakedValue } from '@pancakeswap/farms'\nimport { HarvestActionContainer, ProxyHarvestActionContainer } from '../FarmTable/Actions/HarvestAction'\nimport { ProxyStakedContainer, StakedContainer } from '../FarmTable/Actions/StakedAction'\nimport BoostedAction from '../YieldBooster/components/BoostedAction'\nimport { YieldBoosterStateContext } from '../YieldBooster/components/ProxyFarmContainer'\nimport HarvestAction from './HarvestAction'\nimport StakeAction from './StakeAction'\n\nconst Action = styled.div`\n  padding-top: 16px;\n`\n\nconst ActionContainer = styled.div`\n  margin-bottom: 8px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\ninterface FarmCardActionsProps {\n  farm: FarmWithStakedValue\n  account?: string\n  addLiquidityUrl?: string\n  lpLabel?: string\n  displayApr?: string\n}\n\nconst CardActions: React.FC<React.PropsWithChildren<FarmCardActionsProps>> = ({\n  farm,\n  account,\n  addLiquidityUrl,\n  lpLabel,\n  displayApr,\n}) => {\n  const { t } = useTranslation()\n  const { pid, token, quoteToken, vaultPid, lpSymbol, lpAddress } = farm\n  const { earnings } = farm.userData || {}\n  const { shouldUseProxyFarm } = useContext(YieldBoosterStateContext)\n  const isReady = farm.multiplier !== undefined\n  const { stakedBalance, tokenBalance, proxy } = farm.userData\n\n  return (\n    <Action>\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n          CAKE\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Earned')}\n        </Text>\n      </Flex>\n      {shouldUseProxyFarm ? (\n        <ProxyHarvestActionContainer\n          lpAddress={lpAddress}\n          earnings={earnings}\n          pid={pid}\n          vaultPid={vaultPid}\n          token={token}\n          quoteToken={quoteToken}\n          lpSymbol={lpSymbol}\n        >\n          {(props) => <HarvestAction {...props} />}\n        </ProxyHarvestActionContainer>\n      ) : (\n        <HarvestActionContainer\n          earnings={earnings}\n          pid={pid}\n          vaultPid={vaultPid}\n          token={token}\n          quoteToken={quoteToken}\n          lpSymbol={lpSymbol}\n        >\n          {(props) => <HarvestAction {...props} />}\n        </HarvestActionContainer>\n      )}\n      {farm.boosted && (\n        <BoostedAction\n          title={(status) => (\n            <Flex>\n              <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\" pr=\"4px\">\n                {t('Yield Booster')}\n              </Text>\n              <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\">\n                {status}\n              </Text>\n            </Flex>\n          )}\n          desc={(actionBtn) => <ActionContainer>{actionBtn}</ActionContainer>}\n          farmPid={farm.pid}\n          lpTokenStakedAmount={farm.lpTokenStakedAmount}\n          userBalanceInFarm={\n            (stakedBalance.plus(tokenBalance).gt(0)\n              ? stakedBalance.plus(tokenBalance)\n              : proxy?.stakedBalance.plus(proxy?.tokenBalance)) ?? BIG_ZERO\n          }\n        />\n      )}\n      {isReady ? (\n        <Flex>\n          <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n            {farm.lpSymbol}\n          </Text>\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n            {t('Staked')}\n          </Text>\n        </Flex>\n      ) : (\n        <Skeleton width={80} height={18} mb=\"4px\" />\n      )}\n      {!account ? (\n        <ConnectWalletButton mt=\"8px\" width=\"100%\" />\n      ) : shouldUseProxyFarm ? (\n        <ProxyStakedContainer {...farm} lpLabel={lpLabel} addLiquidityUrl={addLiquidityUrl} displayApr={displayApr}>\n          {(props) => <StakeAction {...props} />}\n        </ProxyStakedContainer>\n      ) : (\n        <StakedContainer {...farm} lpLabel={lpLabel} addLiquidityUrl={addLiquidityUrl} displayApr={displayApr}>\n          {(props) => <StakeAction {...props} />}\n        </StakedContainer>\n      )}\n    </Action>\n  )\n}\n\nexport default CardActions\n","import { RocketIcon, Tag, TagProps } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { memo } from 'react'\n\ninterface BoostedTag extends TagProps {\n  // Add Object to bypass typescript warning\n  style?: object\n}\n\nconst BoostedTag: React.FC<BoostedTag> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag\n      variant=\"success\"\n      style={{ background: 'none' }}\n      outline\n      startIcon={<RocketIcon width=\"18px\" color=\"success\" mr=\"4px\" />}\n      {...props}\n    >\n      {t('Boosted')}\n    </Tag>\n  )\n}\n\nexport default memo(BoostedTag)\n","import styled from 'styled-components'\nimport { Tag, Flex, Heading, Box, Skeleton, Farm as FarmUI } from '@pancakeswap/uikit'\nimport { Token } from '@pancakeswap/sdk'\nimport { TokenPairImage } from 'components/TokenImage'\nimport BoostedTag from '../YieldBooster/components/BoostedTag'\n\nconst { FarmAuctionTag, CoreTag, StableFarmTag } = FarmUI.Tags\n\nexport interface ExpandableSectionProps {\n  lpLabel?: string\n  multiplier?: string\n  isCommunityFarm?: boolean\n  token: Token\n  quoteToken: Token\n  boosted?: boolean\n  isStable?: boolean\n}\n\nconst Wrapper = styled(Flex)`\n  svg {\n    margin-right: 4px;\n  }\n`\n\nconst MultiplierTag = styled(Tag)`\n  margin-left: 4px;\n`\n\nconst CardHeading: React.FC<React.PropsWithChildren<ExpandableSectionProps>> = ({\n  lpLabel,\n  multiplier,\n  isCommunityFarm,\n  token,\n  quoteToken,\n  boosted,\n  isStable,\n}) => {\n  const isReady = multiplier !== undefined\n\n  return (\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\n      {isReady ? (\n        <TokenPairImage variant=\"inverted\" primaryToken={token} secondaryToken={quoteToken} width={64} height={64} />\n      ) : (\n        <Skeleton mr=\"8px\" width={63} height={63} variant=\"circle\" />\n      )}\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n        {isReady ? <Heading mb=\"4px\">{lpLabel.split(' ')[0]}</Heading> : <Skeleton mb=\"4px\" width={60} height={18} />}\n        <Flex justifyContent=\"center\">\n          {isReady && isStable && <StableFarmTag mr=\"4px\" />}\n          {isReady && boosted && <BoostedTag mr=\"4px\" />}\n          {isReady ? <Box>{isCommunityFarm ? <FarmAuctionTag /> : <CoreTag />}</Box> : null}\n          {isReady ? (\n            <MultiplierTag variant=\"secondary\">{multiplier}</MultiplierTag>\n          ) : (\n            <Skeleton ml=\"4px\" width={42} height={28} />\n          )}\n        </Flex>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default CardHeading\n","import { FarmWithStakedValue } from '@pancakeswap/farms'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { Card, ExpandableSectionButton, Farm as FarmUI, Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport { BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport BigNumber from 'bignumber.js'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport { CHAIN_QUERY_NAME } from 'config/chains'\nimport { useActiveChainId } from 'hooks/useActiveChainId'\nimport { useCallback, useMemo, useState } from 'react'\nimport { multiChainPaths } from 'state/info/constant'\nimport styled from 'styled-components'\nimport { getBlockExploreLink } from 'utils'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport ApyButton from './ApyButton'\nimport CardActionsContainer from './CardActionsContainer'\nimport CardHeading from './CardHeading'\n\nimport BoostedApr from '../YieldBooster/components/BoostedApr'\n\nconst { DetailsSection } = FarmUI.FarmCard\n\nconst StyledCard = styled(Card)`\n  align-self: baseline;\n  max-width: 100%;\n  margin: 0 0 24px 0;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-width: 350px;\n    margin: 0 12px 46px;\n  }\n`\n\nconst FarmCardInnerContainer = styled(Flex)`\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n`\n\nconst ExpandingWrapper = styled.div`\n  padding: 24px;\n  border-top: 2px solid ${({ theme }) => theme.colors.cardBorder};\n  overflow: hidden;\n`\n\ninterface FarmCardProps {\n  farm: FarmWithStakedValue\n  displayApr: string\n  removed: boolean\n  cakePrice?: BigNumber\n  account?: string\n  originalLiquidity?: BigNumber\n}\n\nconst FarmCard: React.FC<React.PropsWithChildren<FarmCardProps>> = ({\n  farm,\n  displayApr,\n  removed,\n  cakePrice,\n  account,\n  originalLiquidity,\n}) => {\n  const { t } = useTranslation()\n  const { chainId } = useActiveChainId()\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n\n  const liquidity =\n    farm?.liquidity && originalLiquidity?.gt(0) ? farm.liquidity.plus(originalLiquidity) : farm.liquidity\n\n  const totalValueFormatted =\n    liquidity && liquidity.gt(0)\n      ? `$${liquidity.toNumber().toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n      : ''\n\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.replace(/pancake/gi, '')\n  const earnLabel = farm.dual ? farm.dual.earnLabel : t('CAKE + Fees')\n\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: farm.quoteToken.address,\n    tokenAddress: farm.token.address,\n    chainId,\n  })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n  const { lpAddress, stableSwapAddress, stableLpFee } = farm\n  const isPromotedFarm = farm.token.symbol === 'CAKE'\n  const { stakedBalance, proxy, tokenBalance } = farm.userData\n\n  const infoUrl = useMemo(() => {\n    if (farm.isStable) {\n      return `/info${multiChainPaths[chainId]}/pairs/${stableSwapAddress}?type=stableSwap&chain=${CHAIN_QUERY_NAME[chainId]}`\n    }\n    return `/info${multiChainPaths[chainId]}/pairs/${lpAddress}?chain=${CHAIN_QUERY_NAME[chainId]}`\n  }, [chainId, farm.isStable, lpAddress, stableSwapAddress])\n\n  const toggleExpandableSection = useCallback(() => {\n    setShowExpandableSection((prev) => !prev)\n  }, [])\n\n  return (\n    <StyledCard isActive={isPromotedFarm}>\n      <FarmCardInnerContainer>\n        <CardHeading\n          lpLabel={lpLabel}\n          multiplier={farm.multiplier}\n          isCommunityFarm={farm.isCommunity}\n          token={farm.token}\n          quoteToken={farm.quoteToken}\n          boosted={farm.boosted}\n          isStable={farm.isStable}\n        />\n        {!removed && (\n          <Flex justifyContent=\"space-between\" alignItems=\"center\">\n            <Text>{t('APR')}:</Text>\n            <Text bold style={{ display: 'flex', alignItems: 'center' }}>\n              {farm.apr ? (\n                <>\n                  {farm.boosted ? (\n                    <BoostedApr\n                      mr=\"4px\"\n                      lpRewardsApr={farm.lpRewardsApr}\n                      apr={farm.apr}\n                      pid={farm?.pid}\n                      lpTotalSupply={farm.lpTotalSupply}\n                      userBalanceInFarm={\n                        (stakedBalance.plus(tokenBalance).gt(0)\n                          ? stakedBalance?.plus(tokenBalance)\n                          : proxy?.stakedBalance.plus(proxy?.tokenBalance)) ?? BIG_ZERO\n                      }\n                    />\n                  ) : null}\n                  <ApyButton\n                    variant=\"text-and-button\"\n                    pid={farm.pid}\n                    lpTokenPrice={farm.lpTokenPrice}\n                    lpSymbol={farm.lpSymbol}\n                    multiplier={farm.multiplier}\n                    lpLabel={lpLabel}\n                    addLiquidityUrl={addLiquidityUrl}\n                    cakePrice={cakePrice}\n                    apr={farm.apr}\n                    displayApr={displayApr}\n                    lpRewardsApr={farm.lpRewardsApr}\n                    strikethrough={farm.boosted}\n                    useTooltipText\n                    boosted={farm.boosted}\n                    stableSwapAddress={stableSwapAddress}\n                    stableLpFee={stableLpFee}\n                  />\n                </>\n              ) : (\n                <Skeleton height={24} width={80} />\n              )}\n            </Text>\n          </Flex>\n        )}\n        <Flex justifyContent=\"space-between\">\n          <Text>{t('Earn')}:</Text>\n          <Text bold>{earnLabel}</Text>\n        </Flex>\n        <CardActionsContainer\n          farm={farm}\n          lpLabel={lpLabel}\n          account={account}\n          addLiquidityUrl={addLiquidityUrl}\n          displayApr={displayApr}\n        />\n      </FarmCardInnerContainer>\n\n      <ExpandingWrapper>\n        <ExpandableSectionButton onClick={toggleExpandableSection} expanded={showExpandableSection} />\n        {showExpandableSection && (\n          <DetailsSection\n            removed={removed}\n            scanAddressLink={getBlockExploreLink(lpAddress, 'address', chainId)}\n            infoAddress={infoUrl}\n            totalValueFormatted={totalValueFormatted}\n            lpLabel={lpLabel}\n            addLiquidityUrl={addLiquidityUrl}\n            isCommunity={farm.isCommunity}\n            auctionHostingEndDate={farm.auctionHostingEndDate}\n          />\n        )}\n      </ExpandingWrapper>\n    </StyledCard>\n  )\n}\n\nexport default FarmCard\n","import { useCallback } from 'react'\nimport { harvestFarm } from 'utils/calls'\nimport { useMasterchef } from 'hooks/useContract'\nimport { useGasPrice } from 'state/user/hooks'\n\nconst useHarvestFarm = (farmPid: number) => {\n  const masterChefContract = useMasterchef()\n  const gasPrice = useGasPrice()\n\n  const handleHarvest = useCallback(async () => {\n    return harvestFarm(masterChefContract, farmPid, gasPrice)\n  }, [farmPid, masterChefContract, gasPrice])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestFarm\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { Skeleton, useToast, useModal, Farm as FarmUI } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport useCatchTxError from 'hooks/useCatchTxError'\nimport { useERC20 } from 'hooks/useContract'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/farms'\n\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCallback } from 'react'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport { getBalanceAmount } from '@pancakeswap/utils/formatBalance'\nimport MultiChainHarvestModal from 'views/Farms/components/MultiChainHarvestModal'\nimport { FarmWithStakedValue } from '@pancakeswap/farms'\nimport useHarvestFarm from '../../../hooks/useHarvestFarm'\nimport useProxyStakedActions from '../../YieldBooster/hooks/useProxyStakedActions'\n\nconst { FarmTableHarvestAction } = FarmUI.FarmTable\n\ninterface HarvestActionProps extends FarmWithStakedValue {\n  userDataReady: boolean\n  onReward?: () => Promise<TransactionResponse>\n  proxyCakeBalance?: number\n  onDone?: () => void\n}\n\nexport const ProxyHarvestActionContainer = ({ children, ...props }) => {\n  const { lpAddress } = props\n  const lpContract = useERC20(lpAddress)\n\n  const { onReward, onDone, proxyCakeBalance } = useProxyStakedActions(props.pid, lpContract)\n\n  return children({ ...props, onReward, proxyCakeBalance, onDone })\n}\n\nexport const HarvestActionContainer = ({ children, ...props }) => {\n  const { onReward } = useHarvestFarm(props.pid)\n  const { account, chainId } = useActiveWeb3React()\n  const dispatch = useAppDispatch()\n\n  const onDone = useCallback(\n    () => dispatch(fetchFarmUserDataAsync({ account, pids: [props.pid], chainId })),\n    [account, dispatch, chainId, props.pid],\n  )\n\n  return children({ ...props, onDone, onReward })\n}\n\nexport const HarvestAction: React.FunctionComponent<React.PropsWithChildren<HarvestActionProps>> = ({\n  pid,\n  token,\n  quoteToken,\n  vaultPid,\n  userData,\n  userDataReady,\n  proxyCakeBalance,\n  lpSymbol,\n  onReward,\n  onDone,\n}) => {\n  const { t } = useTranslation()\n  const { toastSuccess } = useToast()\n  const { fetchWithCatchTxError, loading: pendingTx } = useCatchTxError()\n  const earningsBigNumber = new BigNumber(userData.earnings)\n  const cakePrice = usePriceCakeBusd()\n  let earnings = BIG_ZERO\n  let earningsBusd = 0\n  let displayBalance = userDataReady ? earnings.toFixed(5, BigNumber.ROUND_DOWN) : <Skeleton width={60} />\n\n  // If user didn't connect wallet default balance will be 0\n  if (!earningsBigNumber.isZero()) {\n    earnings = getBalanceAmount(earningsBigNumber)\n    earningsBusd = earnings.multipliedBy(cakePrice).toNumber()\n    displayBalance = earnings.toFixed(5, BigNumber.ROUND_DOWN)\n  }\n\n  const onClickHarvestButton = () => {\n    if (vaultPid) {\n      onPresentNonBscHarvestModal()\n    } else {\n      handleHarvest()\n    }\n  }\n\n  const handleHarvest = async () => {\n    const receipt = await fetchWithCatchTxError(() => {\n      return onReward()\n    })\n    if (receipt?.status) {\n      toastSuccess(\n        `${t('Harvested')}!`,\n        <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n          {t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'CAKE' })}\n        </ToastDescriptionWithTx>,\n      )\n      onDone?.()\n    }\n  }\n\n  const [onPresentNonBscHarvestModal] = useModal(\n    <MultiChainHarvestModal\n      pid={pid}\n      token={token}\n      lpSymbol={lpSymbol}\n      quoteToken={quoteToken}\n      earningsBigNumber={earningsBigNumber}\n      earningsBusd={earningsBusd}\n    />,\n  )\n\n  return (\n    <FarmTableHarvestAction\n      earnings={earnings}\n      earningsBusd={earningsBusd}\n      displayBalance={displayBalance}\n      pendingTx={pendingTx}\n      userDataReady={userDataReady}\n      proxyCakeBalance={proxyCakeBalance}\n      handleHarvest={onClickHarvestButton}\n    />\n  )\n}\n\nexport default HarvestAction\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { useModal, useToast, Farm as FarmUI } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport { BASE_ADD_LIQUIDITY_URL, DEFAULT_TOKEN_DECIMAL } from 'config'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useCatchTxError from 'hooks/useCatchTxError'\nimport { useERC20 } from 'hooks/useContract'\nimport { useRouter } from 'next/router'\nimport { useCallback, useContext, useState, useMemo } from 'react'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { useTransactionAdder, useNonBscFarmPendingTransaction } from 'state/transactions/hooks'\nimport { FarmTransactionStatus, NonBscFarmStepType } from 'state/transactions/actions'\nimport { pickFarmTransactionTx } from 'state/global/actions'\nimport { usePriceCakeBusd, useFarmFromPid } from 'state/farms/hooks'\nimport BCakeCalculator from 'views/Farms/components/YieldBooster/components/BCakeCalculator'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport BigNumber from 'bignumber.js'\nimport useNativeCurrency from 'hooks/useNativeCurrency'\nimport { formatLpBalance } from '@pancakeswap/utils/formatBalance'\nimport { ChainId, WNATIVE, NATIVE } from '@pancakeswap/sdk'\nimport WalletModal, { WalletView } from 'components/Menu/UserMenu/WalletModal'\nimport { useAccount } from 'wagmi'\nimport { useIsBloctoETH } from 'views/Farms'\nimport { FarmWithStakedValue } from '@pancakeswap/farms'\nimport useApproveFarm from '../../../hooks/useApproveFarm'\nimport useStakeFarms from '../../../hooks/useStakeFarms'\nimport useUnstakeFarms from '../../../hooks/useUnstakeFarms'\nimport { YieldBoosterStateContext } from '../../YieldBooster/components/ProxyFarmContainer'\nimport useProxyStakedActions from '../../YieldBooster/hooks/useProxyStakedActions'\nimport { YieldBoosterState } from '../../YieldBooster/hooks/useYieldBoosterState'\nimport { useFirstTimeCrossFarming } from '../../../hooks/useFirstTimeCrossFarming'\n\ninterface StackedActionProps extends FarmWithStakedValue {\n  userDataReady: boolean\n  lpLabel?: string\n  displayApr?: string\n  onStake?: (value: string) => Promise<TransactionResponse>\n  onUnstake?: (value: string) => Promise<TransactionResponse>\n  onDone?: () => void\n  onApprove?: () => Promise<TransactionResponse>\n  isApproved?: boolean\n  shouldUseProxyFarm?: boolean\n}\n\nexport function useStakedActions(lpContract, pid, vaultPid) {\n  const { account, chainId } = useActiveWeb3React()\n  const { onStake } = useStakeFarms(pid, vaultPid)\n  const { onUnstake } = useUnstakeFarms(pid, vaultPid)\n  const dispatch = useAppDispatch()\n\n  const { onApprove } = useApproveFarm(lpContract, chainId)\n\n  const onDone = useCallback(\n    () => dispatch(fetchFarmUserDataAsync({ account, pids: [pid], chainId })),\n    [account, pid, chainId, dispatch],\n  )\n\n  return {\n    onStake,\n    onUnstake,\n    onApprove,\n    onDone,\n  }\n}\n\nexport const ProxyStakedContainer = ({ children, ...props }) => {\n  const { address: account } = useAccount()\n\n  const { lpAddress } = props\n  const lpContract = useERC20(lpAddress)\n\n  const { onStake, onUnstake, onApprove, onDone } = useProxyStakedActions(props.pid, lpContract)\n\n  const { allowance } = props.userData || {}\n\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n\n  return children({\n    ...props,\n    onStake,\n    onDone,\n    onUnstake,\n    onApprove,\n    isApproved,\n  })\n}\n\nexport const StakedContainer = ({ children, ...props }) => {\n  const { address: account } = useAccount()\n\n  const { lpAddress } = props\n  const lpContract = useERC20(lpAddress)\n  const { onStake, onUnstake, onApprove, onDone } = useStakedActions(lpContract, props.pid, props.vaultPid)\n\n  const { allowance } = props.userData || {}\n\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n\n  return children({\n    ...props,\n    onStake,\n    onDone,\n    onUnstake,\n    onApprove,\n    isApproved,\n  })\n}\n\nconst Staked: React.FunctionComponent<React.PropsWithChildren<StackedActionProps>> = ({\n  pid,\n  apr,\n  vaultPid,\n  multiplier,\n  lpSymbol,\n  lpLabel,\n  lpAddress,\n  lpTokenPrice,\n  quoteToken,\n  token,\n  userDataReady,\n  displayApr,\n  lpTotalSupply,\n  tokenAmountTotal,\n  quoteTokenAmountTotal,\n  userData,\n  onDone,\n  onStake,\n  onUnstake,\n  onApprove,\n  isApproved,\n}) => {\n  const dispatch = useAppDispatch()\n  const native = useNativeCurrency()\n  const pendingFarm = useNonBscFarmPendingTransaction(lpAddress)\n  const { boosterState } = useContext(YieldBoosterStateContext)\n  const { isFirstTime, refresh: refreshFirstTime } = useFirstTimeCrossFarming(vaultPid)\n  const { lpTokenStakedAmount } = useFarmFromPid(pid)\n  const { t } = useTranslation()\n  const { toastSuccess } = useToast()\n  const addTransaction = useTransactionAdder()\n  const isBloctoETH = useIsBloctoETH()\n  const { fetchWithCatchTxError, fetchTxResponse, loading: pendingTx } = useCatchTxError()\n  const { account, chainId } = useActiveWeb3React()\n\n  const { tokenBalance, stakedBalance, allowance } = userData || {}\n\n  const router = useRouter()\n  const cakePrice = usePriceCakeBusd()\n  const [bCakeMultiplier, setBCakeMultiplier] = useState<number | null>(() => null)\n\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: quoteToken.address,\n    tokenAddress: token.address,\n    chainId,\n  })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n\n  const isStakeReady = useMemo(() => {\n    return ['history', 'archived'].some((item) => router.pathname.includes(item)) || pendingFarm.length > 0\n  }, [pendingFarm, router])\n\n  const crossChainWarningText = useMemo(() => {\n    return isFirstTime\n      ? t('A small amount of %nativeToken% is required for the first-time setup of cross-chain CAKE farming.', {\n          nativeToken: native.symbol,\n        })\n      : t('For safety, cross-chain transactions will take around 30 minutes to confirm.')\n  }, [isFirstTime, native, t])\n\n  const handleStake = async (amount: string) => {\n    if (vaultPid) {\n      await handleNonBscStake(amount)\n      refreshFirstTime()\n    } else {\n      const receipt = await fetchWithCatchTxError(() => onStake(amount))\n\n      if (receipt?.status) {\n        toastSuccess(\n          `${t('Staked')}!`,\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('Your funds have been staked in the farm')}\n          </ToastDescriptionWithTx>,\n        )\n        onDone()\n      }\n    }\n  }\n\n  const handleNonBscStake = async (amountValue: string) => {\n    const receipt = await fetchTxResponse(() => onStake(amountValue))\n    const amountAsBigNumber = new BigNumber(amountValue).times(DEFAULT_TOKEN_DECIMAL)\n    const amount = formatLpBalance(new BigNumber(amountAsBigNumber), 18)\n\n    if (receipt) {\n      addTransaction(receipt, {\n        type: 'non-bsc-farm',\n        translatableSummary: {\n          text: 'Stake %amount% %lpSymbol% Token',\n          data: { amount, lpSymbol },\n        },\n        nonBscFarm: {\n          type: NonBscFarmStepType.STAKE,\n          status: FarmTransactionStatus.PENDING,\n          amount,\n          lpSymbol,\n          lpAddress,\n          steps: [\n            {\n              step: 1,\n              chainId,\n              tx: receipt.hash,\n              isFirstTime,\n              status: FarmTransactionStatus.PENDING,\n            },\n            {\n              step: 2,\n              tx: '',\n              chainId: ChainId.BSC,\n              status: FarmTransactionStatus.PENDING,\n            },\n          ],\n        },\n      })\n\n      dispatch(pickFarmTransactionTx({ tx: receipt.hash, chainId }))\n      onDone()\n    }\n  }\n\n  const handleUnstake = async (amount: string) => {\n    if (vaultPid) {\n      await handleNonBscUnStake(amount)\n    } else {\n      const receipt = await fetchWithCatchTxError(() => onUnstake(amount))\n      if (receipt?.status) {\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('Your earnings have also been harvested to your wallet')}\n          </ToastDescriptionWithTx>,\n        )\n        onDone()\n      }\n    }\n  }\n\n  const handleNonBscUnStake = async (amountValue: string) => {\n    const receipt = await fetchTxResponse(() => onUnstake(amountValue))\n    const amountAsBigNumber = new BigNumber(amountValue).times(DEFAULT_TOKEN_DECIMAL)\n    const amount = formatLpBalance(new BigNumber(amountAsBigNumber), 18)\n\n    if (receipt) {\n      addTransaction(receipt, {\n        type: 'non-bsc-farm',\n        translatableSummary: {\n          text: 'Unstake %amount% %lpSymbol% Token',\n          data: { amount, lpSymbol },\n        },\n        nonBscFarm: {\n          type: NonBscFarmStepType.UNSTAKE,\n          status: FarmTransactionStatus.PENDING,\n          amount,\n          lpSymbol,\n          lpAddress,\n          steps: [\n            {\n              step: 1,\n              chainId,\n              tx: receipt.hash,\n              status: FarmTransactionStatus.PENDING,\n            },\n            {\n              step: 2,\n              chainId: ChainId.BSC,\n              tx: '',\n              status: FarmTransactionStatus.PENDING,\n            },\n            {\n              step: 3,\n              chainId,\n              tx: '',\n              status: FarmTransactionStatus.PENDING,\n            },\n          ],\n        },\n      })\n\n      dispatch(pickFarmTransactionTx({ tx: receipt.hash, chainId }))\n      onDone()\n    }\n  }\n\n  const bCakeCalculatorSlot = (calculatorBalance) => (\n    <BCakeCalculator\n      targetInputBalance={calculatorBalance}\n      earningTokenPrice={cakePrice.toNumber()}\n      lpTokenStakedAmount={lpTokenStakedAmount}\n      setBCakeMultiplier={setBCakeMultiplier}\n    />\n  )\n\n  const handleApprove = useCallback(async () => {\n    const receipt = await fetchWithCatchTxError(() => onApprove())\n    if (receipt?.status) {\n      toastSuccess(t('Contract Enabled'), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\n      onDone()\n    }\n  }, [onApprove, t, toastSuccess, fetchWithCatchTxError, onDone])\n\n  const [onPresentDeposit] = useModal(\n    <FarmUI.DepositModal\n      account={account}\n      pid={pid}\n      lpTotalSupply={lpTotalSupply}\n      max={tokenBalance}\n      lpPrice={lpTokenPrice}\n      lpLabel={lpLabel}\n      apr={apr}\n      displayApr={displayApr}\n      stakedBalance={stakedBalance}\n      tokenName={lpSymbol}\n      multiplier={multiplier}\n      addLiquidityUrl={addLiquidityUrl}\n      cakePrice={cakePrice}\n      showActiveBooster={boosterState === YieldBoosterState.ACTIVE}\n      bCakeMultiplier={bCakeMultiplier}\n      showCrossChainFarmWarning={chainId !== ChainId.BSC && chainId !== ChainId.BSC_TESTNET}\n      crossChainWarningText={crossChainWarningText}\n      decimals={18}\n      allowance={allowance}\n      enablePendingTx={pendingTx}\n      onConfirm={handleStake}\n      handleApprove={handleApprove}\n      bCakeCalculatorSlot={bCakeCalculatorSlot}\n    />,\n    true,\n    true,\n    `farm-deposit-modal-${pid}`,\n  )\n\n  const [onPresentWithdraw] = useModal(\n    <FarmUI.WithdrawModal\n      showActiveBooster={boosterState === YieldBoosterState.ACTIVE}\n      max={stakedBalance}\n      onConfirm={handleUnstake}\n      lpPrice={lpTokenPrice}\n      tokenName={lpSymbol}\n      decimals={18}\n      showCrossChainFarmWarning={chainId !== ChainId.BSC && chainId !== ChainId.BSC_TESTNET}\n    />,\n  )\n\n  const [onPresentTransactionModal] = useModal(<WalletModal initialView={WalletView.TRANSACTIONS} />)\n\n  const onClickLoadingIcon = () => {\n    const { length } = pendingFarm\n    if (length) {\n      if (length > 1) {\n        onPresentTransactionModal()\n      } else {\n        dispatch(pickFarmTransactionTx({ tx: pendingFarm[0].txid, chainId }))\n      }\n    }\n  }\n\n  if (!account) {\n    return (\n      <FarmUI.FarmTable.AccountNotConnect>\n        <ConnectWalletButton width=\"100%\" />\n      </FarmUI.FarmTable.AccountNotConnect>\n    )\n  }\n\n  if (!isApproved && stakedBalance.eq(0)) {\n    return <FarmUI.FarmTable.EnableStakeAction pendingTx={pendingTx || isBloctoETH} handleApprove={handleApprove} />\n  }\n\n  if (!userDataReady) {\n    return <FarmUI.FarmTable.StakeActionDataNotReady />\n  }\n\n  if (stakedBalance.gt(0)) {\n    return (\n      <FarmUI.FarmTable.StakedActionComponent\n        lpSymbol={lpSymbol}\n        disabledMinusButton={pendingFarm.length > 0}\n        disabledPlusButton={isStakeReady || isBloctoETH}\n        onPresentWithdraw={onPresentWithdraw}\n        onPresentDeposit={onPresentDeposit}\n      >\n        <FarmUI.StakedLP\n          decimals={18}\n          stakedBalance={stakedBalance}\n          quoteTokenSymbol={\n            WNATIVE[chainId]?.symbol === quoteToken.symbol ? NATIVE[chainId]?.symbol : quoteToken.symbol\n          }\n          tokenSymbol={WNATIVE[chainId]?.symbol === token.symbol ? NATIVE[chainId]?.symbol : token.symbol}\n          lpTotalSupply={lpTotalSupply}\n          lpTokenPrice={lpTokenPrice}\n          tokenAmountTotal={tokenAmountTotal}\n          quoteTokenAmountTotal={quoteTokenAmountTotal}\n          pendingFarmLength={pendingFarm.length}\n          onClickLoadingIcon={onClickLoadingIcon}\n        />\n      </FarmUI.FarmTable.StakedActionComponent>\n    )\n  }\n\n  return (\n    <FarmUI.FarmTable.StakeComponent\n      lpSymbol={lpSymbol}\n      isStakeReady={isStakeReady}\n      onPresentDeposit={onPresentDeposit}\n    />\n  )\n}\n\nexport default Staked\n","import useSWR from 'swr'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { fetchCProxyAddress } from 'state/farms/fetchFarmUser'\nimport { farmFetcher } from 'state/farms'\n\nexport const useFarmCProxyAddress = (account?: string, chainId?: number) => {\n  const multiCallChainId = farmFetcher.isTestnet(chainId) ? ChainId.BSC_TESTNET : ChainId.BSC\n  const { data } = useSWR(account && chainId && ['cProxyAddress', account, chainId], async () =>\n    fetchCProxyAddress(account, multiCallChainId),\n  )\n\n  return {\n    cProxyAddress: data,\n  }\n}\n","import { useCallback } from 'react'\nimport { useCrossFarmingProxy } from 'hooks/useContract'\n\nconst useNonBscHarvestFarm = (farmPid: number, cProxyAddress: string) => {\n  const contract = useCrossFarmingProxy(cProxyAddress)\n\n  const handleHarvest = useCallback(async () => {\n    return contract.harvest(farmPid)\n  }, [contract, farmPid])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useNonBscHarvestFarm\n","import { useCallback, useMemo } from 'react'\nimport Cookie from 'js-cookie'\nimport { ChainId, Token } from '@pancakeswap/sdk'\nimport { BigNumber } from 'bignumber.js'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { useSwitchNetwork } from 'hooks/useSwitchNetwork'\nimport useCatchTxError from 'hooks/useCatchTxError'\nimport styled from 'styled-components'\nimport { TokenPairImage } from 'components/TokenImage'\nimport {\n  Modal,\n  InjectedModalProps,\n  Flex,\n  Box,\n  Text,\n  Button,\n  Message,\n  MessageText,\n  ArrowForwardIcon,\n  AutoRenewIcon,\n  useToast,\n  FlexGap,\n  Balance,\n} from '@pancakeswap/uikit'\nimport { ChainLogo } from 'components/Logo/ChainLogo'\nimport { getBalanceAmount } from '@pancakeswap/utils/formatBalance'\nimport { LightGreyCard } from 'components/Card'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport { useFarmCProxyAddress } from 'views/Farms/hooks/useFarmCProxyAddress'\nimport useNonBscHarvestFarm from 'views/Farms/hooks/useNonBscHarvestFarm'\nimport { farmFetcher } from 'state/farms'\n\nconst TokenWrapper = styled.div`\n  padding-right: 8px;\n  width: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 40px;\n  }\n`\n\ninterface MultiChainHarvestModalProp extends InjectedModalProps {\n  pid: number\n  token: Token\n  lpSymbol: string\n  quoteToken: Token\n  earningsBigNumber: BigNumber\n  earningsBusd: number\n}\n\nconst MultiChainHarvestModal: React.FC<MultiChainHarvestModalProp> = ({\n  pid,\n  token,\n  lpSymbol,\n  quoteToken,\n  earningsBigNumber,\n  earningsBusd,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { toastSuccess } = useToast()\n  const { account, chainId, isWrongNetwork } = useActiveWeb3React()\n  const { switchNetworkAsync } = useSwitchNetwork()\n  const { cProxyAddress } = useFarmCProxyAddress(account, chainId)\n  const { onReward } = useNonBscHarvestFarm(pid, cProxyAddress)\n  const { fetchWithCatchTxError, loading: isPending } = useCatchTxError()\n\n  const earnings = getBalanceAmount(earningsBigNumber)\n  const displayBalance = earnings.toFixed(5, BigNumber.ROUND_DOWN)\n\n  const isTestnet = farmFetcher.isTestnet(chainId)\n  const network = isTestnet ? ChainId.BSC_TESTNET : ChainId.BSC\n  const isBscNetwork = useMemo(() => chainId === network, [chainId, network])\n\n  const handleCancel = useCallback(() => {\n    onDismiss?.()\n  }, [onDismiss])\n\n  const handleSwitchNetwork = () => {\n    if (window.ethereum?.isTokenPocket === true) {\n      Cookie.set(\n        'multiChainHarvestModal',\n        JSON.stringify({ pid, token, lpSymbol, quoteToken, earningsBigNumber, earningsBusd }),\n      )\n    }\n    switchNetworkAsync(network)\n  }\n\n  const handleHarvest = useCallback(async () => {\n    const receipt = await fetchWithCatchTxError(() => onReward())\n    if (receipt?.status) {\n      toastSuccess(\n        `${t('Harvested')}!`,\n        <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n          {t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'CAKE' })}\n        </ToastDescriptionWithTx>,\n      )\n      handleCancel()\n    }\n  }, [t, onReward, fetchWithCatchTxError, toastSuccess, handleCancel])\n\n  return (\n    <Modal\n      title={isBscNetwork ? t('Harvest now!') : t('Switch chain to harvest')}\n      style={{ maxWidth: '340px' }}\n      onDismiss={handleCancel}\n    >\n      <Flex flexDirection=\"column\">\n        <Flex justifyContent=\"space-between\" mb=\"16px\">\n          <TokenWrapper>\n            <TokenPairImage\n              width={40}\n              height={40}\n              variant=\"inverted\"\n              primaryToken={token}\n              secondaryToken={quoteToken}\n            />\n          </TokenWrapper>\n          <Text bold fontSize=\"24px\">\n            {lpSymbol}\n          </Text>\n        </Flex>\n        {!isBscNetwork && (\n          <Message mb=\"16px\" variant=\"warning\" icon={false} p=\"8px 12px\">\n            <MessageText>\n              <FlexGap gap=\"12px\">\n                <FlexGap gap=\"6px\">\n                  <ChainLogo chainId={chainId} /> <ArrowForwardIcon color=\"#D67E0A\" />\n                  <ChainLogo chainId={ChainId.BSC} />\n                </FlexGap>\n                <span>{t('Harvest on BNB Smart Chain')}</span>\n              </FlexGap>\n            </MessageText>\n          </Message>\n        )}\n        <LightGreyCard padding=\"16px\">\n          <Box mb=\"8px\">\n            <Text fontSize=\"12px\" color=\"secondary\" bold as=\"span\">\n              {t('CAKE')}\n            </Text>\n            <Text fontSize=\"12px\" color=\"textSubtle\" ml=\"4px\" bold as=\"span\">\n              {t('Earned')}\n            </Text>\n          </Box>\n          <Box>\n            <Text fontSize=\"20px\" lineHeight=\"110%\" bold>\n              {displayBalance}\n            </Text>\n            <Balance\n              mb=\"16px\"\n              prefix=\"~\"\n              unit=\" USD\"\n              decimals={2}\n              value={earningsBusd}\n              fontSize=\"12px\"\n              color=\"textSubtle\"\n            />\n            {isBscNetwork ? (\n              <Button\n                width=\"100%\"\n                variant=\"secondary\"\n                disabled={isPending || !account || isWrongNetwork}\n                endIcon={isPending ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n                onClick={handleHarvest}\n              >\n                {isPending ? t('Harvesting') : t('Harvest')}\n              </Button>\n            ) : (\n              <Button width=\"100%\" variant=\"secondary\" onClick={handleSwitchNetwork}>\n                {t('Switch to BNB Smart Chain')}\n              </Button>\n            )}\n          </Box>\n        </LightGreyCard>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default MultiChainHarvestModal\n","import { useCallback } from 'react'\n\nimport { BOOSTED_FARM_GAS_LIMIT } from 'config'\nimport { useBCakeFarmBoosterContract } from 'hooks/useContract'\nimport useCatchTxError from 'hooks/useCatchTxError'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\n\nconst useBoosterFarmHandlers = (farmPid: number, onDone) => {\n  const farmBoosterContract = useBCakeFarmBoosterContract()\n  const { fetchWithCatchTxError, loading: isConfirming } = useCatchTxError()\n  const { callWithGasPrice } = useCallWithGasPrice()\n\n  const activate = useCallback(async () => {\n    const receipt = await fetchWithCatchTxError(() => {\n      return callWithGasPrice(farmBoosterContract, 'activate', [farmPid], { gasLimit: BOOSTED_FARM_GAS_LIMIT })\n    })\n\n    if (receipt?.status && onDone) {\n      onDone()\n    }\n  }, [farmPid, farmBoosterContract, callWithGasPrice, fetchWithCatchTxError, onDone])\n\n  const deactivate = useCallback(async () => {\n    const receipt = await fetchWithCatchTxError(() => {\n      return callWithGasPrice(farmBoosterContract, 'deactive', [farmPid], { gasLimit: BOOSTED_FARM_GAS_LIMIT })\n    })\n\n    if (receipt?.status && onDone) {\n      onDone()\n    }\n  }, [farmPid, farmBoosterContract, callWithGasPrice, fetchWithCatchTxError, onDone])\n\n  return { activate, deactivate, isConfirming }\n}\n\nexport default useBoosterFarmHandlers\n","import {\n  Button,\n  Heading,\n  Text,\n  ButtonProps,\n  HelpIcon,\n  Flex,\n  TooltipText,\n  useTooltip,\n  LinkExternal,\n  useMatchBreakpoints,\n} from '@pancakeswap/uikit'\nimport _isEmpty from 'lodash/isEmpty'\nimport { ReactNode } from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from '@pancakeswap/localization'\n\nconst Container = styled.div`\n  margin-right: 4px;\n`\n\ninterface ActionButtonPropsType extends ButtonProps {\n  title: string\n  description: string\n  button?: ReactNode\n}\n\nconst BoosterTooltip = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      {t(\n        `Boost multiplier is calculated based on the staking conditions from both Farms and fixed-term CAKE syrup pool and will be automatically updated upon user actions.`,\n      )}\n      <LinkExternal\n        href=\"https://docs.pancakeswap.finance/products/yield-farming/bcake/faq#how-are-the-bcake-multipliers-calculated\"\n        external\n      >\n        {t('Learn More')}\n      </LinkExternal>\n    </>\n  )\n}\n\nconst ActionButton: React.FC<ActionButtonPropsType> = ({ title, description, button, ...props }) => {\n  const { isMobile } = useMatchBreakpoints()\n  let btn = null\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<BoosterTooltip />, {\n    placement: 'top',\n    ...(isMobile && { hideTimeout: 1500 }),\n  })\n\n  if (button) {\n    btn = button\n  } else if (!_isEmpty(props)) {\n    btn = <Button {...props} />\n  }\n\n  return (\n    <>\n      <Container>\n        <Flex>\n          <Heading mr=\"4px\">{title}</Heading>\n          <TooltipText ref={targetRef}>\n            <HelpIcon width=\"20px\" height=\"20px\" />\n          </TooltipText>\n          {tooltipVisible && tooltip}\n        </Flex>\n\n        <Text color=\"textSubtle\" fontSize=\"12px\">\n          {description}\n        </Text>\n      </Container>\n      {btn}\n    </>\n  )\n}\n\nexport default ActionButton\n","import { Contract } from '@ethersproject/contracts'\nimport { useTranslation } from '@pancakeswap/localization'\nimport {\n  AutoRenewIcon,\n  Box,\n  Button,\n  CheckmarkIcon,\n  HelpIcon,\n  LogoIcon,\n  Modal,\n  Text,\n  useToast,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport BigNumber from 'bignumber.js'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport useCatchTxError from 'hooks/useCatchTxError'\nimport { useBCakeProxyContract } from 'hooks/useContract'\nimport { useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { getFullDisplayBalance } from '@pancakeswap/utils/formatBalance'\nimport { useBCakeProxyContractAddress } from '../hooks/useBCakeProxyContractAddress'\nimport useProxyStakedActions from './YieldBooster/hooks/useProxyStakedActions'\n\nexport const StepperCircle = styled.div`\n  height: 20px;\n  width: 20px;\n  border-radius: 50%;\n  color: white;\n  text-align: center;\n  line-height: 20px;\n  padding: 2px;\n  box-sizing: border-box;\n  font-size: 12px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-weight: bold;\n`\nexport const StepperText = styled.div`\n  position: absolute;\n  top: calc(100% + 10px);\n  left: 50%;\n  transform: translateX(-50%);\n  transition: 0.3s color ease-in-out;\n  will-change: color;\n  font-size: 12px;\n  font-weight: 600;\n  text-transform: uppercase;\n`\n\nexport const StepperWrapper = styled.div<{ finished: boolean; active: boolean }>`\n  position: relative;\n  height: 20px;\n  width: 20px;\n  display: inline-block;\n  vertical-align: top;\n  &:not(:last-child) {\n    margin-right: calc((100% - 60px) / 2);\n    &::before {\n      position: absolute;\n      content: '';\n      width: calc(((100vw / 2) - 108px));\n      height: 2px;\n      top: 9px;\n      left: 30px;\n      transition: 0.3s background-color ease-in-out;\n      will-change: background-color;\n      background-color: ${({ theme, finished }) => (finished ? theme.colors.textSubtle : theme.colors.disabled)};\n    }\n    ${({ theme }) => theme.mediaQueries.md} {\n      &::before {\n        width: 104px;\n      }\n    }\n  }\n  ${StepperCircle} {\n    background: ${({ theme, finished }) => (finished ? theme.colors.textSubtle : theme.colors.disabled)};\n  }\n  ${StepperText} {\n    color: ${({ theme, active, finished }) =>\n      active ? theme.colors.primary : finished ? theme.colors.textSubtle : theme.colors.disabled};\n  }\n`\n\nexport const FooterBox = styled.div`\n  margin-top: 24px;\n  padding-top: 24px;\n  position: relative;\n  &::before {\n    content: '';\n    position: absolute;\n    height: 1px;\n    width: 100%;\n    top: 0px;\n    left: 0px;\n    background-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n`\n\nexport const InfoBox = styled.div`\n  padding: 16px;\n  background: ${({ theme }) => theme.colors.background};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  border-radius: 16px;\n  font-size: 12px;\n  color: ${({ theme }) => theme.colors.textSubtle};\n  line-height: 120%;\n  margin-bottom: 24px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 372px;\n  }\n`\nexport const InfoText = styled.div``\nexport const InfoIconBox = styled.div`\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\ninterface BCakeMigrateModalProps {\n  lpContract: Contract\n  stakedBalance: BigNumber\n  onUnStack: (amount: string, callback: () => void) => void\n  onDismiss?: () => void\n  pid: number\n}\n\nenum Steps {\n  'Unstake',\n  'Enable',\n  'Stake',\n}\n\nexport const BCakeMigrateModal: React.FC<BCakeMigrateModalProps> = ({\n  lpContract,\n  stakedBalance,\n  onDismiss,\n  onUnStack,\n  pid,\n}) => {\n  const { account, chainId } = useActiveWeb3React()\n  const [activatedState, setActivatedState] = useState<Steps>(Steps.Unstake)\n  const [isLoading, setIsLoading] = useState(false)\n  const [isApproved, setIsApproved] = useState(false)\n  const { t } = useTranslation()\n  const steps: Record<Steps, string> = useMemo(\n    () => ({\n      [Steps.Unstake]: t('Unstake'),\n      [Steps.Enable]: t('Enable'),\n      [Steps.Stake]: t('Stake'),\n    }),\n    [t],\n  )\n  const migrationSteps: Record<Steps, string> = useMemo(\n    () => ({\n      [Steps.Unstake]: t('Unstake LP tokens from the farm'),\n      [Steps.Enable]: t('Enable staking with yield booster'),\n      [Steps.Stake]: t('Stake LP tokens back to the farm'),\n    }),\n    [t],\n  )\n  const migrationStepsKeys = useMemo(() => Object.keys(migrationSteps), [migrationSteps])\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(stakedBalance)\n  }, [stakedBalance])\n  const { proxyAddress } = useBCakeProxyContractAddress(account, chainId)\n  const { onApprove, onDone, onStake } = useProxyStakedActions(pid, lpContract)\n\n  const bCakeProxy = useBCakeProxyContract(proxyAddress)\n  const { fetchWithCatchTxError, loading } = useCatchTxError()\n  const { toastSuccess } = useToast()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <Text>\n      {t(\n        'To enable farm yield boosters, you must follow the guide and migrate your current farming positions. However, for each farm, you will only need to migrate once.',\n      )}\n    </Text>,\n    {\n      placement: 'right',\n    },\n  )\n\n  useEffect(() => {\n    if (!bCakeProxy) return\n    bCakeProxy.lpApproved(lpContract.address).then((enabled) => {\n      setIsApproved(enabled)\n    })\n  }, [lpContract, bCakeProxy])\n\n  const onStepChange = async () => {\n    if (activatedState === Steps.Unstake) {\n      setIsLoading(true)\n      onUnStack(fullBalance, () => {\n        if (isApproved) setActivatedState(Steps.Stake)\n        else setActivatedState(Steps.Enable)\n        setIsLoading(false)\n      })\n    } else if (activatedState === Steps.Enable) {\n      const receipt = await fetchWithCatchTxError(onApprove)\n      if (receipt?.status) {\n        toastSuccess(t('Contract Enabled'), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\n        setActivatedState(Steps.Stake)\n        onDone()\n      }\n    } else {\n      setIsLoading(true)\n      try {\n        const receipt = await fetchWithCatchTxError(() => onStake(fullBalance))\n        if (receipt?.status) {\n          toastSuccess(\n            `${t('Staked')}!`,\n            <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n              {t('Your funds have been staked in the farm')}\n            </ToastDescriptionWithTx>,\n          )\n          onDone()\n          onDismiss?.()\n        }\n      } catch (error) {\n        console.error(error)\n      } finally {\n        setIsLoading(false)\n      }\n    }\n  }\n  return (\n    <Modal title={t('Migrate your stakings')} width=\"420px\" onDismiss={onDismiss}>\n      {tooltipVisible && tooltip}\n      <InfoBox ref={targetRef}>\n        <InfoText>{t('You will need to migrate your stakings before activating yield booster for a farm')}</InfoText>\n        <InfoIconBox>\n          <HelpIcon />\n        </InfoIconBox>\n      </InfoBox>\n      <Box pb={20} pl={38} pr={30}>\n        {migrationStepsKeys.map((step, index) => {\n          return (\n            <StepperWrapper\n              key={step}\n              active={step === activatedState.toString()}\n              finished={parseInt(step) < parseInt(activatedState.toString())}\n            >\n              {step === activatedState.toString() ? (\n                <LogoIcon width={22} />\n              ) : (\n                <StepperCircle>\n                  {parseInt(step) < parseInt(activatedState.toString()) ? (\n                    <CheckmarkIcon color=\"white\" width={16} />\n                  ) : (\n                    index + 1\n                  )}\n                </StepperCircle>\n              )}\n              <StepperText>{steps[step]}</StepperText>\n            </StepperWrapper>\n          )\n        })}\n      </Box>\n      <FooterBox>\n        <Text mb=\"16px\" textAlign=\"center\">\n          {activatedState + 1}. {t(migrationSteps[activatedState])}\n          {/* t('Unstake LP tokens from the farm') */}\n          {/* t('Enable staking with yield booster') */}\n          {/* t('Stake LP tokens back to the farm') */}\n        </Text>\n        <Button\n          onClick={onStepChange}\n          isLoading={isLoading || loading}\n          width=\"100%\"\n          endIcon={isLoading || loading ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\n        >\n          {isLoading || loading ? t('Confirming...') : t(steps[activatedState])}\n        </Button>\n      </FooterBox>\n    </Modal>\n  )\n}\n","import { useTranslation } from '@pancakeswap/localization'\nimport { Button, useModal, useToast } from '@pancakeswap/uikit'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useCatchTxError from 'hooks/useCatchTxError'\nimport { useERC20 } from 'hooks/useContract'\nimport { useAppDispatch } from 'state'\n\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { useFarmFromPid, useFarmUser } from 'state/farms/hooks'\nimport useUnstakeFarms from '../../../hooks/useUnstakeFarms'\nimport { BCakeMigrateModal } from '../../BCakeMigrateModal'\n\ninterface MigrateActionButtonPropsType {\n  pid: number\n}\n\nconst MigrateActionButton: React.FunctionComponent<MigrateActionButtonPropsType> = ({ pid }) => {\n  const { t } = useTranslation()\n  const { toastSuccess } = useToast()\n  const { fetchWithCatchTxError } = useCatchTxError()\n  const { account, chainId } = useActiveWeb3React()\n  const { onUnstake } = useUnstakeFarms(pid)\n  const { stakedBalance } = useFarmUser(pid)\n  const { lpAddress } = useFarmFromPid(pid)\n  const lpContract = useERC20(lpAddress)\n  const dispatch = useAppDispatch()\n\n  const handleUnstakeWithCallback = async (amount: string, callback: () => void) => {\n    const receipt = await fetchWithCatchTxError(() => {\n      return onUnstake(amount)\n    })\n    if (receipt?.status) {\n      toastSuccess(\n        `${t('Unstaked')}!`,\n        <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n          {t('Your earnings have also been harvested to your wallet')}\n        </ToastDescriptionWithTx>,\n      )\n      callback()\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid], chainId }))\n    }\n  }\n\n  const [onPresentMigrate] = useModal(\n    <BCakeMigrateModal\n      pid={pid}\n      stakedBalance={stakedBalance}\n      lpContract={lpContract}\n      onUnStack={handleUnstakeWithCallback}\n    />,\n  )\n\n  return <Button onClick={onPresentMigrate}>{t('Migrate')}</Button>\n}\n\nexport default MigrateActionButton\n","import { useTranslation } from '@pancakeswap/localization'\nimport { AutoRenewIcon, NextLinkFromReactRouter, Button } from '@pancakeswap/uikit'\nimport { ReactNode, useCallback, useContext, useEffect } from 'react'\n\nimport BigNumber from 'bignumber.js'\nimport useBoosterFarmHandlers from '../hooks/useBoosterFarmHandlers'\nimport { useGetBoostedMultiplier } from '../hooks/useGetBoostedAPR'\nimport { YieldBoosterState } from '../hooks/useYieldBoosterState'\n\nimport useBoostMultiplier from '../hooks/useBoostMultiplier'\nimport ActionButton from './ActionButton'\nimport CreateProxyButton from './CreateProxyButton'\nimport MigrateActionButton from './MigrateActionButton'\nimport { YieldBoosterStateContext } from './ProxyFarmContainer'\n\ninterface BoostedActionPropsType {\n  farmPid: number\n  title: (status: YieldBoosterState) => ReactNode\n  desc: (actionBtn: ReactNode) => ReactNode\n  userBalanceInFarm: BigNumber\n  lpTokenStakedAmount: BigNumber\n}\n\nconst BoostedAction: React.FunctionComponent<BoostedActionPropsType> = ({\n  farmPid,\n  title,\n  desc,\n  userBalanceInFarm,\n  lpTokenStakedAmount,\n}) => {\n  const { t } = useTranslation()\n  const { boosterState, refreshActivePool, refreshProxyAddress, proxyAddress } = useContext(YieldBoosterStateContext)\n  const { isConfirming, ...handlers } = useBoosterFarmHandlers(farmPid, refreshActivePool)\n  const boostMultiplierFromSC = useBoostMultiplier({ pid: farmPid, boosterState, proxyAddress })\n  const boostedMultiplierFromFE = useGetBoostedMultiplier(userBalanceInFarm, lpTokenStakedAmount)\n  const boostMultiplier = userBalanceInFarm.eq(0)\n    ? boostMultiplierFromSC\n    : userBalanceInFarm.gt(0) && boosterState === YieldBoosterState.ACTIVE\n    ? boostMultiplierFromSC\n    : boostedMultiplierFromFE\n  const boostMultiplierDisplay = boostMultiplier.toLocaleString(undefined, { maximumFractionDigits: 3 })\n  useEffect(() => {\n    refreshActivePool() // run once to refresh data from context\n  }, [refreshActivePool, boostMultiplierFromSC])\n  const renderBtn = useCallback(() => {\n    switch (boosterState) {\n      case YieldBoosterState.UNCONNECTED:\n        return (\n          <ActionButton\n            title={`${t('Up to')} ${boostMultiplierDisplay}x`}\n            description={t('Connect wallet to activate yield booster')}\n          />\n        )\n      case YieldBoosterState.NO_LOCKED:\n        return (\n          <ActionButton\n            title={`${t('Up to')} ${boostMultiplierDisplay}x`}\n            description={t('Lock CAKE to activate yield booster')}\n            style={{ whiteSpace: 'nowrap' }}\n            button={\n              <NextLinkFromReactRouter to=\"/pools\">\n                <Button> {t('Go to Pool')}</Button>\n              </NextLinkFromReactRouter>\n            }\n          />\n        )\n      case YieldBoosterState.LOCKED_END:\n        return (\n          <ActionButton\n            title={`${t('Up to')} ${boostMultiplierDisplay}x`}\n            description={t('Lock CAKE is ended. Re-lock CAKE to activate yield booster')}\n            style={{ whiteSpace: 'nowrap' }}\n            button={\n              <NextLinkFromReactRouter to=\"/pools\">\n                <Button> {t('Go to Pool')}</Button>\n              </NextLinkFromReactRouter>\n            }\n          />\n        )\n      case YieldBoosterState.NO_PROXY_CREATED:\n        return (\n          <ActionButton\n            title={`${boostMultiplierDisplay}x`}\n            description={t('One-time setup is required for activating farm yield boosters')}\n            button={<CreateProxyButton onDone={refreshProxyAddress} width=\"auto\" />}\n          />\n        )\n      case YieldBoosterState.NO_MIGRATE:\n        return (\n          <ActionButton\n            title={`${boostMultiplierDisplay}x`}\n            description={t('Migration required to activate boost')}\n            button={<MigrateActionButton pid={farmPid} />}\n          />\n        )\n      case YieldBoosterState.NO_LP:\n        return (\n          <ActionButton\n            title={`${boostMultiplierDisplay}x`}\n            description={t('Stake LP tokens to start boosting')}\n            disabled\n          >\n            {t('Boost')}\n          </ActionButton>\n        )\n      case YieldBoosterState.DEACTIVE:\n        return (\n          <ActionButton\n            disabled={isConfirming}\n            onClick={handlers.activate}\n            title={`${boostMultiplierDisplay}x`}\n            isLoading={isConfirming}\n            description={t('Yield booster available')}\n            endIcon={isConfirming && <AutoRenewIcon spin color=\"currentColor\" />}\n          >\n            {t('Boost')}\n          </ActionButton>\n        )\n      case YieldBoosterState.ACTIVE:\n      case YieldBoosterState.ACTIVE_AND_NO_LP:\n        return (\n          <ActionButton\n            disabled={isConfirming}\n            onClick={handlers.deactivate}\n            title={`${boostMultiplierDisplay}x`}\n            isLoading={isConfirming}\n            description={t('Active')}\n            endIcon={isConfirming && <AutoRenewIcon spin color=\"currentColor\" />}\n          >\n            {t('Unset')}\n          </ActionButton>\n        )\n      case YieldBoosterState.MAX:\n        return (\n          <ActionButton\n            title={`${boostMultiplierDisplay}x`}\n            description={t('Unset other boosters to activate')}\n            disabled\n          >\n            {t('Boost')}\n          </ActionButton>\n        )\n      default:\n        return null\n    }\n  }, [\n    boosterState,\n    t,\n    handlers.activate,\n    handlers.deactivate,\n    isConfirming,\n    farmPid,\n    refreshProxyAddress,\n    boostMultiplierDisplay,\n  ])\n\n  let status = null\n\n  if ([YieldBoosterState.NO_MIGRATE, YieldBoosterState.DEACTIVE].includes(boosterState)) {\n    status = t('Ready')\n  } else if ([YieldBoosterState.ACTIVE, YieldBoosterState.ACTIVE_AND_NO_LP].includes(boosterState)) {\n    status = t('Active')\n  }\n\n  return (\n    <>\n      {title && title(status)}\n      {desc && desc(renderBtn())}\n    </>\n  )\n}\n\nexport default BoostedAction\n","import { useTranslation } from '@pancakeswap/localization'\nimport { RocketIcon, Text } from '@pancakeswap/uikit'\nimport isUndefinedOrNull from '@pancakeswap/utils/isUndefinedOrNull'\nimport BigNumber from 'bignumber.js'\nimport _toNumber from 'lodash/toNumber'\nimport { memo, useContext } from 'react'\nimport { formatNumber } from '@pancakeswap/utils/formatBalance'\nimport useBoostMultiplier from '../hooks/useBoostMultiplier'\nimport useGetBoostedAPR from '../hooks/useGetBoostedAPR'\nimport { YieldBoosterState } from '../hooks/useYieldBoosterState'\nimport { YieldBoosterStateContext } from './ProxyFarmContainer'\n\ninterface BoostedAprPropsType {\n  apr: number\n  lpRewardsApr: number\n  pid: number\n  mr?: string\n  userBalanceInFarm: BigNumber\n  lpTotalSupply: BigNumber\n}\n\nfunction BoostedApr(props: BoostedAprPropsType) {\n  const { lpRewardsApr, apr, pid, userBalanceInFarm, lpTotalSupply, ...rest } = props\n  const { boosterState, proxyAddress } = useContext(YieldBoosterStateContext)\n  const { t } = useTranslation()\n\n  const boostedAprFromFE = useGetBoostedAPR(userBalanceInFarm, lpTotalSupply, apr, lpRewardsApr)\n\n  const multiplier = useBoostMultiplier({ pid, boosterState, proxyAddress })\n\n  const boostedAprFromSC =\n    (!isUndefinedOrNull(multiplier) &&\n      !isUndefinedOrNull(apr) &&\n      formatNumber(\n        _toNumber(apr) * Number(multiplier) + (!isUndefinedOrNull(lpRewardsApr) ? _toNumber(lpRewardsApr) : 0),\n      )) ||\n    '0'\n\n  const msg =\n    boosterState === YieldBoosterState.ACTIVE ? (\n      `${boostedAprFromSC}%`\n    ) : (\n      <>\n        <Text bold color=\"success\" {...rest} fontSize={14} display=\"inline-block\" mr=\"3px\">\n          {t('Up to')}\n        </Text>\n        {`${userBalanceInFarm.eq(0) ? boostedAprFromSC : boostedAprFromFE}%`}\n      </>\n    )\n  // if (boostedAPR === '0') {\n  //   return null\n  // }\n\n  return (\n    <>\n      <RocketIcon m=\"4px\" color=\"success\" />\n      <Text bold color=\"success\" {...rest} fontSize={16}>\n        {msg}\n      </Text>\n    </>\n  )\n}\n\nexport default memo(BoostedApr)\n","import useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useSWRContract } from 'hooks/useSWRContract'\nimport { getCakeContract } from 'utils/contractHelpers'\nimport { getBalanceNumber } from '@pancakeswap/utils/formatBalance'\nimport { useBCakeProxyContractAddress } from 'views/Farms/hooks/useBCakeProxyContractAddress'\nimport BigNumber from 'bignumber.js'\n\nconst useProxyCAKEBalance = () => {\n  const { account, chainId } = useActiveWeb3React()\n  const { proxyAddress } = useBCakeProxyContractAddress(account, chainId)\n  const cakeContract = getCakeContract()\n\n  const { data, mutate } = useSWRContract([cakeContract, 'balanceOf', [proxyAddress]])\n\n  return {\n    refreshProxyCakeBalance: mutate,\n    proxyCakeBalance: data ? getBalanceNumber(new BigNumber(data.toString())) : 0,\n  }\n}\n\nexport default useProxyCAKEBalance\n","import { useBCakeProxyContract } from 'hooks/useContract'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCallback } from 'react'\nimport { useAppDispatch } from 'state'\nimport { useGasPrice } from 'state/user/hooks'\nimport { harvestFarm, stakeFarm, unstakeFarm } from 'utils/calls/farms'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { useBCakeProxyContractAddress } from 'views/Farms/hooks/useBCakeProxyContractAddress'\nimport { BOOSTED_FARM_GAS_LIMIT } from 'config'\nimport { useApproveBoostProxyFarm } from '../../../hooks/useApproveFarm'\nimport useProxyCAKEBalance from './useProxyCAKEBalance'\n\nexport default function useProxyStakedActions(pid, lpContract) {\n  const { account, chainId } = useActiveWeb3React()\n  const { proxyAddress } = useBCakeProxyContractAddress(account, chainId)\n  const bCakeProxy = useBCakeProxyContract(proxyAddress)\n  const dispatch = useAppDispatch()\n  const gasPrice = useGasPrice()\n  const { proxyCakeBalance, refreshProxyCakeBalance } = useProxyCAKEBalance()\n\n  const onDone = useCallback(() => {\n    refreshProxyCakeBalance()\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid], chainId, proxyAddress }))\n  }, [account, proxyAddress, chainId, pid, dispatch, refreshProxyCakeBalance])\n\n  const { onApprove } = useApproveBoostProxyFarm(lpContract, proxyAddress)\n\n  const onStake = useCallback(\n    (value) => stakeFarm(bCakeProxy, pid, value, gasPrice, BOOSTED_FARM_GAS_LIMIT),\n    [bCakeProxy, pid, gasPrice],\n  )\n\n  const onUnstake = useCallback(\n    (value) => unstakeFarm(bCakeProxy, pid, value, gasPrice, BOOSTED_FARM_GAS_LIMIT),\n    [bCakeProxy, pid, gasPrice],\n  )\n\n  const onReward = useCallback(\n    () => harvestFarm(bCakeProxy, pid, gasPrice, BOOSTED_FARM_GAS_LIMIT),\n    [bCakeProxy, pid, gasPrice],\n  )\n\n  return {\n    onStake,\n    onUnstake,\n    onReward,\n    onApprove,\n    onDone,\n    proxyCakeBalance,\n  }\n}\n","import { createContext } from 'react'\n\nexport const FarmsContext = createContext({ chosenFarmsMemoized: [] })\n","import useSWRImmutable from 'swr/immutable'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getCrossFarmingSenderContract } from 'utils/contractHelpers'\nimport { useMemo } from 'react'\n\nexport const useFirstTimeCrossFarming = (vaultPid: number) => {\n  const { account, chainId } = useActiveWeb3React()\n  const crossFarmingAddress = useMemo(() => {\n    return vaultPid && chainId ? getCrossFarmingSenderContract(null, chainId) : null\n  }, [chainId, vaultPid])\n\n  const { data, mutate } = useSWRImmutable(\n    account && crossFarmingAddress && ['isFirstTimeCrossFarming', account, chainId],\n    async () => {\n      const firstTimeDeposit = await crossFarmingAddress.is1st(account)\n      return !firstTimeDeposit\n    },\n  )\n\n  return { isFirstTime: data, refresh: mutate }\n}\n","import { useTranslation } from '@pancakeswap/localization'\nimport { LinkExternal, ModalV2 } from '@pancakeswap/uikit'\nimport DisclaimerModal from 'components/DisclaimerModal'\nimport { ConnectorNames, getDocLink } from 'config/wallet'\nimport { ExtendEthereum } from 'global'\nimport { useState, useCallback } from 'react'\nimport { useAccount, useNetwork } from 'wagmi'\nimport { mainnet } from 'wagmi/chains'\nimport { FarmsContext } from './context'\nimport Farms from './Farms'\n\nexport function useIsBloctoETH() {\n  const { chain } = useNetwork()\n  const { isConnected, connector } = useAccount()\n  const isETH = chain?.id === mainnet.id\n  return (\n    (connector?.id === ConnectorNames.Blocto ||\n      (typeof window !== 'undefined' && Boolean((window.ethereum as ExtendEthereum)?.isBlocto))) &&\n    isConnected &&\n    isETH\n  )\n}\n\n// Blocto EVM address is different across chains\nfunction BloctoWarning() {\n  const isBloctoETH = useIsBloctoETH()\n  const {\n    t,\n    currentLanguage: { code },\n  } = useTranslation()\n\n  const [close, setClose] = useState(false)\n\n  const handleSuccess = useCallback(() => {\n    setClose(true)\n  }, [])\n\n  return (\n    <ModalV2 isOpen={isBloctoETH && !close} closeOnOverlayClick={false}>\n      <DisclaimerModal\n        id=\"blocto-eth\"\n        modalHeader={t('Unsupported Wallet')}\n        header={\n          <>\n            {t(\n              'Crosschain farming on Ethereum does NOT support Blocto wallet, as you won’t be able to harvest CAKE rewards.',\n            )}\n            <LinkExternal href={getDocLink(code)} mt=\"4px\">\n              {t('Check out our wallet guide for the list of supported wallets.')}\n            </LinkExternal>\n          </>\n        }\n        subtitle={t('If you have previously deposited any LP tokens, please unstake.')}\n        checks={[\n          {\n            key: 'blocto-understand',\n            content: t('I understand'),\n          },\n        ]}\n        onSuccess={handleSuccess}\n      />\n    </ModalV2>\n  )\n}\n\nexport const FarmsPageLayout: React.FC<React.PropsWithChildren<unknown>> = ({ children }) => {\n  return (\n    <>\n      <BloctoWarning />\n      <Farms>{children}</Farms>\n    </>\n  )\n}\n\nexport { FarmsContext }\n","import { useMemo } from 'react'\nimport { BOOST_WEIGHT, DURATION_FACTOR } from 'config/constants/pools'\nimport BigNumber from 'bignumber.js'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getFullDecimalMultiplier } from '@pancakeswap/utils/getFullDecimalMultiplier'\n\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\nimport formatSecondsToWeeks, { secondsToWeeks } from '../../utils/formatSecondsToWeeks'\n\nexport default function useAvgLockDuration() {\n  const { totalLockedAmount, totalShares, totalCakeInVault, pricePerFullShare } = useCakeVault()\n\n  const avgLockDurationsInSeconds = useMemo(() => {\n    const flexibleCakeAmount = totalCakeInVault.minus(totalLockedAmount)\n    const flexibleCakeShares = flexibleCakeAmount.div(pricePerFullShare).times(DEFAULT_TOKEN_DECIMAL)\n    const lockedCakeBoostedShares = totalShares.minus(flexibleCakeShares)\n    const lockedCakeOriginalShares = totalLockedAmount.div(pricePerFullShare).times(DEFAULT_TOKEN_DECIMAL)\n    const avgBoostRatio = lockedCakeBoostedShares.div(lockedCakeOriginalShares)\n\n    return (\n      Math.round(\n        avgBoostRatio\n          .minus(1)\n          .times(new BigNumber(DURATION_FACTOR.toString()))\n          .div(new BigNumber(BOOST_WEIGHT.toString()).div(getFullDecimalMultiplier(12)))\n          .toNumber(),\n      ) || 0\n    )\n  }, [totalCakeInVault, totalLockedAmount, pricePerFullShare, totalShares])\n\n  const avgLockDurationsInWeeks = useMemo(\n    () => formatSecondsToWeeks(avgLockDurationsInSeconds),\n    [avgLockDurationsInSeconds],\n  )\n\n  const avgLockDurationsInWeeksNum = useMemo(\n    () => secondsToWeeks(avgLockDurationsInSeconds),\n    [avgLockDurationsInSeconds],\n  )\n\n  return {\n    avgLockDurationsInWeeks,\n    avgLockDurationsInWeeksNum,\n    avgLockDurationsInSeconds,\n  }\n}\n","import formatDuration from 'date-fns/formatDuration'\nimport differenceInWeeks from 'date-fns/differenceInWeeks'\nimport differenceInDays from 'date-fns/differenceInDays'\nimport addSeconds from 'date-fns/addSeconds'\n\nexport const secondsToWeeks = (seconds) => {\n  const now = new Date()\n  const addedDate = addSeconds(now, seconds)\n\n  return differenceInWeeks(new Date(addedDate), now, { roundingMethod: 'round' })\n}\n\nexport const secondsToDays = (seconds) => {\n  const now = new Date()\n  const addedDate = addSeconds(now, seconds)\n\n  return differenceInDays(new Date(addedDate), now)\n}\n\nexport const weeksToSeconds = (weeks) => weeks * 7 * 24 * 60 * 60\n\nconst formatSecondsToWeeks = (secondDuration) => formatDuration({ weeks: secondsToWeeks(secondDuration) })\n\nexport default formatSecondsToWeeks\n","import React, { useState, useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { usePopper } from \"react-popper\";\nimport { ClickableElementContainer } from \"./styles\";\nimport { BaseMenuProps } from \"./types\";\nimport getPortalRoot from \"../../util/getPortalRoot\";\n\nconst BaseMenu: React.FC<BaseMenuProps & { children: any }> = ({ component, options, children, isOpen = false }) => {\n  const [targetElement, setTargetElement] = useState<HTMLElement | null>(null);\n  const [menuElement, setMenuElement] = useState<HTMLElement | null>(null);\n  const placement = options?.placement ?? \"bottom\";\n  const offset = options?.offset ?? [0, 10];\n  const padding = options?.padding ?? { left: 16, right: 16 };\n\n  const [isMenuOpen, setIsMenuOpen] = useState(isOpen);\n\n  const toggle = () => {\n    setIsMenuOpen((prev) => !prev);\n  };\n\n  const open = () => {\n    setIsMenuOpen(true);\n  };\n\n  const close = () => {\n    setIsMenuOpen(false);\n  };\n\n  // Allow for component to be controlled\n  useEffect(() => {\n    setIsMenuOpen(isOpen);\n  }, [isOpen, setIsMenuOpen]);\n\n  useEffect(() => {\n    if (menuElement !== null && targetElement !== null) {\n      const handleClickOutside = ({ target }: Event) => {\n        if (target instanceof Node && !menuElement.contains(target) && !targetElement.contains(target)) {\n          setIsMenuOpen(false);\n        }\n      };\n      document.addEventListener(\"click\", handleClickOutside);\n      return () => {\n        document.removeEventListener(\"click\", handleClickOutside);\n      };\n    }\n    return undefined;\n  }, [menuElement, targetElement]);\n\n  const { styles, attributes } = usePopper(targetElement, menuElement, {\n    placement,\n    modifiers: [\n      { name: \"offset\", options: { offset } },\n      { name: \"preventOverflow\", options: { padding } },\n    ],\n  });\n\n  const menu = (\n    <div ref={setMenuElement} style={styles.popper} {...attributes.popper}>\n      {typeof children === \"function\" ? children({ toggle, open, close }) : children}\n    </div>\n  );\n\n  const portal = getPortalRoot();\n  const renderMenu = portal ? createPortal(menu, portal) : menu;\n\n  return (\n    <>\n      <ClickableElementContainer ref={setTargetElement} onClick={toggle}>\n        {component}\n      </ClickableElementContainer>\n      {isMenuOpen && renderMenu}\n    </>\n  );\n};\n\nexport default BaseMenu;\n","import React from \"react\";\nimport { BoxProps } from \"../Box\";\nimport BaseMenu from \"./BaseMenu\";\nimport { InlineMenuContainer } from \"./styles\";\nimport { BaseMenuProps } from \"./types\";\n\nconst InlineMenu: React.FC<React.PropsWithChildren<BaseMenuProps & BoxProps>> = ({\n  children,\n  component,\n  isOpen = false,\n  ...props\n}) => {\n  return (\n    <BaseMenu options={{ placement: \"bottom\" }} component={component} isOpen={isOpen}>\n      <InlineMenuContainer {...props}>{children}</InlineMenuContainer>\n    </BaseMenu>\n  );\n};\n\nexport default InlineMenu;\n","import styled from \"styled-components\";\nimport { Box, Flex } from \"../Box\";\n\nexport const InlineMenuContainer = styled(Box)`\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  border-radius: ${({ theme }) => theme.radii.card};\n  box-shadow: ${({ theme }) => theme.shadows.tooltip};\n`;\n\nexport const SubMenuContainer = styled(Flex)`\n  flex-direction: column;\n  overflow: hidden;\n  min-width: 136px;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: ${({ theme }) => `1px solid ${theme.colors.inputSecondary}`};\n`;\n\nexport const ClickableElementContainer = styled.div`\n  cursor: pointer;\n  display: inline-flex;\n`;\n\nexport const SubMenuItem = styled.button`\n  border: 0;\n  outline: 0;\n  cursor: pointer;\n  background: transparent;\n  padding: 8px 16px;\n  color: ${({ theme }) => theme.colors.text};\n  width: 100%;\n  font-size: 16px;\n  text-align: left;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.inputSecondary};\n    text-decoration: none;\n  }\n`;\n","import styled from \"styled-components\";\nimport { useTranslation } from \"@pancakeswap/localization\";\nimport { useCallback } from \"react\";\nimport { Text } from \"../Text\";\nimport { ChevronDownIcon, ChevronUpIcon } from \"../Svg\";\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void;\n  expanded?: boolean;\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`;\n\nconst ExpandableSectionButton: React.FC<React.PropsWithChildren<ExpandableSectionButtonProps>> = ({\n  onClick,\n  expanded = false,\n}) => {\n  const { t } = useTranslation();\n  const handleOnClick = useCallback(() => onClick?.(), [onClick]);\n\n  return (\n    <Wrapper aria-label={t(\"Hide or show expandable content\")} role=\"button\" onClick={handleOnClick}>\n      <Text color=\"primary\" bold>\n        {expanded ? t(\"Hide\") : t(\"Details\")}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  );\n};\n\nexport default ExpandableSectionButton;\n","import styled from \"styled-components\";\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`;\n\nexport default FlexLayout;\n","import styled from \"styled-components\";\nimport { Box } from \"../Box\";\n\nconst Loading = styled(Box)`\n  border-radius: 50%;\n  border: 2px solid ${({ theme }) => theme.colors.disabled};\n  border-top: 2px solid transparent;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nLoading.defaultProps = {\n  width: \"20px\",\n  height: \"20px\",\n};\n\nexport default Loading;\n","import styled from \"styled-components\";\nimport { Box } from \"../Box\";\nimport Container from \"../Layouts/Container\";\nimport { PageHeaderProps } from \"./types\";\n\nconst Outer = styled(Box)<{ background?: string }>`\n  background: ${({ theme, background }) => background || theme.colors.gradientBubblegum};\n`;\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n  position: relative;\n`;\n\nconst PageHeader: React.FC<React.PropsWithChildren<PageHeaderProps>> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n);\n\nexport default PageHeader;\n","import { useState, useMemo, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport debounce from \"lodash/debounce\";\nimport { useTranslation } from \"@pancakeswap/localization\";\nimport { Input } from \"../Input\";\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`;\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`;\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  placeholder?: string;\n  initialValue?: string;\n}\n\nconst SearchInput: React.FC<React.PropsWithChildren<Props>> = ({\n  onChange: onChangeCallback,\n  placeholder = \"Search\",\n  initialValue,\n}) => {\n  const [searchText, setSearchText] = useState(\"\");\n  const { t } = useTranslation();\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback]\n  );\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value);\n    debouncedOnChange(e);\n  };\n  useEffect(() => {\n    if (initialValue) {\n      setSearchText(initialValue);\n    }\n  }, [initialValue]);\n\n  return (\n    <InputWrapper>\n      <StyledInput value={searchText} onChange={onChange} placeholder={t(placeholder)} />\n    </InputWrapper>\n  );\n};\n\nexport default SearchInput;\n","import { useState, useEffect } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { Box, BoxProps } from \"../Box\";\nimport { ArrowDropDownIcon } from \"../Svg\";\nimport { Text } from \"../Text\";\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`;\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`;\n\nconst DropDownContainer = styled(Box)<{ isOpen: boolean }>`\n  cursor: pointer;\n  width: 100%;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n  z-index: 20;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`;\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`;\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`;\n\nexport interface SelectProps extends BoxProps {\n  options: OptionProps[];\n  onOptionChange?: (option: OptionProps) => void;\n  placeHolderText?: string;\n  defaultOptionIndex?: number;\n}\n\nexport interface OptionProps {\n  label: string;\n  value: any;\n}\n\nconst Select: React.FunctionComponent<React.PropsWithChildren<SelectProps>> = ({\n  options,\n  onOptionChange,\n  defaultOptionIndex = 0,\n  placeHolderText,\n  ...props\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [optionSelected, setOptionSelected] = useState(false);\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(defaultOptionIndex);\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen);\n    event.stopPropagation();\n  };\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex);\n    setIsOpen(false);\n    setOptionSelected(true);\n\n    if (onOptionChange) {\n      onOptionChange(options[selectedIndex]);\n    }\n  };\n\n  useEffect(() => {\n    const handleClickOutside = () => {\n      setIsOpen(false);\n    };\n\n    document.addEventListener(\"click\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (defaultOptionIndex) {\n      setSelectedOptionIndex(defaultOptionIndex - 1);\n      setOptionSelected(true);\n    }\n  }, [defaultOptionIndex]);\n\n  return (\n    <DropDownContainer isOpen={isOpen} {...props}>\n      <DropDownHeader onClick={toggling}>\n        <Text color={!optionSelected && placeHolderText ? \"text\" : undefined}>\n          {!optionSelected && placeHolderText ? placeHolderText : options[selectedOptionIndex].label}\n        </Text>\n      </DropDownHeader>\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList>\n          {options.map((option, index) =>\n            placeHolderText || index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  );\n};\n\nexport default Select;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<React.PropsWithChildren<SvgProps>> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M8.71005 11.71L11.3001 14.3C11.6901 14.69 12.3201 14.69 12.7101 14.3L15.3001 11.71C15.9301 11.08 15.4801 10 14.5901 10H9.41005C8.52005 10 8.08005 11.08 8.71005 11.71Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<React.PropsWithChildren<SvgProps>> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M4.5 12H7.5C8.05 12 8.5 11.55 8.5 11V7C8.5 6.45 8.05 6 7.5 6H4.5C3.95 6 3.5 6.45 3.5 7V11C3.5 11.55 3.95 12 4.5 12ZM4.5 19H7.5C8.05 19 8.5 18.55 8.5 18V14C8.5 13.45 8.05 13 7.5 13H4.5C3.95 13 3.5 13.45 3.5 14V18C3.5 18.55 3.95 19 4.5 19ZM10.5 19H13.5C14.05 19 14.5 18.55 14.5 18V14C14.5 13.45 14.05 13 13.5 13H10.5C9.95 13 9.5 13.45 9.5 14V18C9.5 18.55 9.95 19 10.5 19ZM16.5 19H19.5C20.05 19 20.5 18.55 20.5 18V14C20.5 13.45 20.05 13 19.5 13H16.5C15.95 13 15.5 13.45 15.5 14V18C15.5 18.55 15.95 19 16.5 19ZM10.5 12H13.5C14.05 12 14.5 11.55 14.5 11V7C14.5 6.45 14.05 6 13.5 6H10.5C9.95 6 9.5 6.45 9.5 7V11C9.5 11.55 9.95 12 10.5 12ZM15.5 7V11C15.5 11.55 15.95 12 16.5 12H19.5C20.05 12 20.5 11.55 20.5 11V7C20.5 6.45 20.05 6 19.5 6H16.5C15.95 6 15.5 6.45 15.5 7Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<React.PropsWithChildren<SvgProps>> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M4.5 14H6.5C7.05 14 7.5 13.55 7.5 13V11C7.5 10.45 7.05 10 6.5 10H4.5C3.95 10 3.5 10.45 3.5 11V13C3.5 13.55 3.95 14 4.5 14ZM4.5 19H6.5C7.05 19 7.5 18.55 7.5 18V16C7.5 15.45 7.05 15 6.5 15H4.5C3.95 15 3.5 15.45 3.5 16V18C3.5 18.55 3.95 19 4.5 19ZM4.5 9H6.5C7.05 9 7.5 8.55 7.5 8V6C7.5 5.45 7.05 5 6.5 5H4.5C3.95 5 3.5 5.45 3.5 6V8C3.5 8.55 3.95 9 4.5 9ZM9.5 14H19.5C20.05 14 20.5 13.55 20.5 13V11C20.5 10.45 20.05 10 19.5 10H9.5C8.95 10 8.5 10.45 8.5 11V13C8.5 13.55 8.95 14 9.5 14ZM9.5 19H19.5C20.05 19 20.5 18.55 20.5 18V16C20.5 15.45 20.05 15 19.5 15H9.5C8.95 15 8.5 15.45 8.5 16V18C8.5 18.55 8.95 19 9.5 19ZM8.5 6V8C8.5 8.55 8.95 9 9.5 9H19.5C20.05 9 20.5 8.55 20.5 8V6C20.5 5.45 20.05 5 19.5 5H9.5C8.95 5 8.5 5.45 8.5 6Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import { useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport IconButton from \"../Button/IconButton\";\nimport { CardViewIcon, ListViewIcon } from \"../Svg\";\n\nexport enum ViewMode {\n  TABLE = \"TABLE\",\n  CARD = \"CARD\",\n}\n\ninterface ToggleViewProps {\n  idPrefix: string;\n  viewMode: ViewMode;\n  onToggle: (mode: ViewMode) => void;\n}\n\nconst Container = styled.div`\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n  }\n`;\n\nexport const ToggleView: React.FunctionComponent<React.PropsWithChildren<ToggleViewProps>> = ({\n  idPrefix,\n  viewMode,\n  onToggle,\n}) => {\n  const handleToggleCard = useCallback(() => {\n    if (viewMode !== ViewMode.CARD) {\n      onToggle(ViewMode.CARD);\n    }\n  }, [onToggle, viewMode]);\n\n  const handleToggleTable = useCallback(() => {\n    if (viewMode !== ViewMode.TABLE) {\n      onToggle(ViewMode.TABLE);\n    }\n  }, [onToggle, viewMode]);\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id={`${idPrefix}CardView`} onClick={handleToggleCard}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? \"primary\" : \"textDisabled\"} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id={`${idPrefix}TableView`} onClick={handleToggleTable}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? \"primary\" : \"textDisabled\"} />\n      </IconButton>\n    </Container>\n  );\n};\n","import { ReactNode } from \"react\";\nimport BigNumber from \"bignumber.js\";\nimport { Token } from \"@pancakeswap/sdk\";\n\nexport interface FarmTableEarnedProps {\n  earnings: number;\n  pid: number;\n}\n\nexport interface FarmTableLiquidityProps {\n  liquidity: BigNumber;\n}\n\nexport interface FarmTableMultiplierProps {\n  multiplier: string;\n  rewardCakePerSecond?: boolean;\n}\n\nexport interface FarmTableFarmTokenInfoProps {\n  label: string;\n  pid: number;\n  token: Token;\n  quoteToken: Token;\n  isReady: boolean;\n  isStable?: boolean;\n  isBoosted?: boolean;\n  stakedBalance?: BigNumber;\n  children?: ReactNode;\n}\n\nexport type ColumnsDefTypes = {\n  id: number;\n  label: string;\n  name: string;\n  sortable: boolean;\n};\n\nexport const MobileColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: \"farm\",\n    sortable: true,\n    label: \"\",\n  },\n  {\n    id: 2,\n    name: \"earned\",\n    sortable: true,\n    label: \"Earned\",\n  },\n  {\n    id: 3,\n    name: \"apr\",\n    sortable: true,\n    label: \"APR\",\n  },\n  {\n    id: 6,\n    name: \"details\",\n    sortable: true,\n    label: \"\",\n  },\n];\n\nexport const DesktopColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: \"farm\",\n    sortable: true,\n    label: \"\",\n  },\n  {\n    id: 2,\n    name: \"type\",\n    sortable: false,\n    label: \"\",\n  },\n  {\n    id: 3,\n    name: \"earned\",\n    sortable: true,\n    label: \"Earned\",\n  },\n  {\n    id: 4,\n    name: \"apr\",\n    sortable: true,\n    label: \"APR\",\n  },\n  {\n    id: 5,\n    name: \"liquidity\",\n    sortable: true,\n    label: \"Liquidity\",\n  },\n  {\n    id: 6,\n    name: \"multiplier\",\n    sortable: true,\n    label: \"Multiplier\",\n  },\n  {\n    id: 7,\n    name: \"details\",\n    sortable: true,\n    label: \"\",\n  },\n];\n","import _get from 'lodash/get'\n\nconst Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nconst latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x: string) => _get(Latinise, `latin_map.${x}`) || x)\n}\n\nexport default latinise\n"],"names":["roundingMap","ceil","Math","round","floor","trunc","value","getRoundingMethod","method","differenceInWeeks","dateLeft","dateRight","options","_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__","Z","arguments","diff","_differenceInDays_index_js__WEBPACK_IMPORTED_MODULE_1__","_lib_roundingMethods_index_js__WEBPACK_IMPORTED_MODULE_2__","u","roundingMethod","defaultFormat","formatDuration","duration","length","concat","_ref","_options$locale","_options$format","_options$zero","_options$delimiter","defaultOptions","_lib_defaultOptions_index_js__WEBPACK_IMPORTED_MODULE_0__","j","locale","_lib_defaultLocale_index_js__WEBPACK_IMPORTED_MODULE_1__","format","zero","delimiter","formatDistance","reduce","acc","unit","token","replace","m","toUpperCase","join","GradientModalHeader","styled","ModalHeader","param","theme","colors","gradientBubblegum","__webpack_exports__","id","onSuccess","onDismiss","checks","header","subtitle","hideConfirm","modalHeader","useState","checkState","setCheckState","t","useTranslation","handleSetAcknowledgeRisk","useCallback","currentKey","map","check","key","_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_7__","_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_8__","handleConfirm","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","jsxs","ModalContainer","title","$minWidth","jsx","ModalTitle","Heading","scale","ModalBody","p","maxWidth","Box","maxHeight","overflowY","as","mb","Text","color","label","htmlFor","style","display","cursor","marginBottom","Flex","alignItems","div","flex","alignSelf","paddingTop","Checkbox","checked","onChange","ml","content","Button","width","onClick","disabled","some","MINIMUM_SEARCH_CHARACTERS","WEEKS_IN_YEAR","TOTAL_FEE","LP_HOLDERS_FEE","TREASURY_FEE","BUYBACK_FEE","PCS_V2_START","PCS_ETH_START","ONE_DAY_UNIX","ONE_HOUR_SECONDS","ITEMS_PER_INFO_TABLE_PAGE","BSC_TOKEN_WHITELIST","TOKEN_BLACKLIST","ETH_TOKEN_BLACKLIST","ETH_TOKEN_WHITELIST","_obj","multiChainQueryMainToken","BSC","ETH","multiChainBlocksClient","BLOCKS_CLIENT","BLOCKS_CLIENT_ETH","multiChainStartTime","multiChainId","ChainId","multiChainPaths","_swc_helpers_src_define_property_mjs__WEBPACK_IMPORTED_MODULE_4__","multiChainQueryClient","infoClient","infoClientETH","multiChainQueryEndPoint","INFO_CLIENT","INFO_CLIENT_ETH","multiChainScan","multiChainTokenBlackList","multiChainTokenWhiteList","getMultiChainQueryEndPointWithStableSwap","chainName","infoStableSwapClient","checkIsStableSwap","window","location","href","includes","getGQLHeaders","endpoint","origin","process","env","NEXT_PUBLIC_NODE_REAL_HEADER","nrHeader","GraphQLClient","STABLESWAP_SUBGRAPH_CLIENT","timeout","headers","stableSwapClient","BIT_QUERY","BIT_QUERY_HEADER","filterFarmsByQuery","farms","query","queryParts","latinise","toLowerCase","trim","split","filter","farm","farmSymbol","lpSymbol","every","queryPart","FarmTokenInfo","FarmUI","FarmTable_Farm","proxy","quoteToken","pid","isReady","isStable","isBoosted","useFarmUser","stakedBalance","jsx_runtime","gt","TokenPairImage","height","variant","primaryToken","secondaryToken","ActionContainer","input","mediaQueries","sm","xl","ActionTitles","ActionContent","Multiplier","Liquidity","expandAnimation","keyframes","collapseAnimation","Container","expanded","css","dropdown","lg","StyledLinkExternal","LinkExternal","StakeContainer","text","InfoContainer","ValueContainer","ValueWrapper","Actions_ActionPanel","details","apr","multiplier","liquidity","userDataReady","alignLinksToRight","_param_alignLinksToRight","chainId","useActiveChainId","useContext","YieldBoosterStateContext","proxyFarm","shouldUseProxyFarm","isDesktop","useMatchBreakpoints","currentLanguage","isActive","stableSwapAddress","lpLabel","liquidityUrlPathParts","getLiquidityUrlPathParts","quoteTokenAddress","address","tokenAddress","lpAddress","bsc","getBlockExploreLink","userData","tokenBalance","infoUrl","useMemo","CHAIN_QUERY_NAME","isCommunity","auctionHostingEndDate","paddingLeft","Date","toLocaleString","month","day","year","Fragment","Apr","useTooltipText","boosted","justifyContent","symbol","isBscScan","ProxyHarvestActionContainer","props","HarvestAction","HarvestActionContainer","ActionContainerSection","minHeight","BoostedAction","status","mr","bold","textTransform","fontSize","desc","actionBtn","farmPid","lpTokenStakedAmount","userBalanceInFarm","plus","ProxyStakedContainer","displayApr","StakedAction","StakedContainer","FarmAuctionTag","CoreTag","BoostedTag","StableFarmTag","CellLayout","Details","Earned","cells","Farm","earned","CellInner","StyledTr","EarnedMobileCell","AprMobileCell","FarmMobileCell","FarmTable_Row","initialActivity","hasSetInitialValue","useRef","hasStakedAmount","toNumber","actionPanelExpanded","setActionPanelExpanded","shouldRenderChild","useDelayedUnmount","toggleActionPanel","useEffect","current","isMobile","isSmallerScreen","tableSchema","MobileColumnSchema","DesktopColumnSchema","columnNames","column","name","tr","colSpan","type","marginRight","background","verticalAlign","td","hideButton","strikethrough","BoostedApr","lpRewardsApr","originalValue","lpTotalSupply","actionPanelToggled","Object","keys","columnIndex","indexOf","Skeleton","createElement","_object_spread_props","_object_spread","ActionPanel","card","cardBorder","TableWrapper","StyledTable","TableBody","TableContainer","FarmTable_FarmTable","cakePrice","tableWrapperEl","useRouter","columns","sort","a","b","original","Number","earnings","sortable","getFarmEarnings","BIG_ZERO","existingEarnings","BigNumber","proxyEarnings","getBalanceNumber","generateRow","lowercaseQuery","search","getDisplayApr","lpTokenPrice","stableLpFee","undefined","sortedRows","rowData","row","newRow","forEach","ref","ProxyFarmContainer","Row","react","FarmTypesWrapper","StyledItemRow","ToggleWrapper","FarmTypesFilter","boostedOnly","handleSetBoostedOnly","stableSwapOnly","handleSetStableSwapOnly","farmTypesEnableCount","handleSetFarmTypesEnableCount","isOpen","setIsOpen","wrapperRef","menuRef","handleClickOutside","target","contains","document","addEventListener","removeEventListener","InlineMenu","component","placement","px","py","mt","RocketIcon","Toggle","CurrencyIcon","hooks_useMultiChainHarvestModal","harvestModalParams","setHarvestModalParams","onPresentNonBscHarvestModal","useModal","MultiChainHarvestModal","earningsBigNumber","earningsBusd","harvestModalCookie","Cookie","JSON","parse","ControlContainer","FarmFlexWrapper","md","FarmH1","FarmH2","LabelWrapper","FilterContainer","ViewControls","StyledImage","Image","FinishedTextContainer","FinishedTextLink","Link","Farms_Farms","children","pathname","useFarms","data","userDataLoaded","poolLength","regularCakePerBlock","usePriceCakeBusd","_query","setQuery","normalizedUrlSearch","urlQuery","useUserFarmsViewMode","viewMode","setViewMode","useAccount","sortOption","setSortOption","useIntersectionObserver","observerRef","isIntersecting","chosenFarmsLength","isArchived","isInactive","useCakeVaultUserData","usePollFarmsWithUserData","useMultiChainHarvestModal","useUserFarmStakedOnly","stakedOnly","setStakedOnly","setBoostedOnly","setStableSwapOnly","setFarmTypesEnableCount","activeFarms","farmsLP","inactiveFarms","stakedOnlyFarms","isGreaterThan","stakedInactiveFarms","stakedArchivedFarms","archivedFarms","farmsList","farmsToDisplay","lpTotalInQuoteToken","quoteTokenPriceBusd","totalLiquidity","times","getFarmApr","poolWeight","cakeRewardsApr","NUMBER_OF_FARMS_VISIBLE","numberOfFarmsVisible","setNumberOfFarmsVisible","chosenFarms","chosenFs","boostedOrStableSwapFarms","stakedBoostedOrStableSwapFarms","chosenFarmsMemoized","sortFarms","orderBy","slice","farmsCurrentlyVisible","providerValue","FarmsContext","PageHeader","NextLinkFromReactRouter","to","prefetch","ArrowForwardIcon","BCakeBoosterCard","Page","ToggleView","idPrefix","onToggle","hasStakeInFinishedFarms","Select","onOptionChange","option","marginLeft","SearchInput","initialValue","event","placeholder","pr","padding","external","ViewMode","Table","account","FlexLayout","Loading","src","alt","FarmCard_HarvestAction","vaultPid","proxyCakeBalance","onReward","onDone","toastSuccess","useToast","useCatchTxError","fetchWithCatchTxError","loading","rawEarningsBalance","getBalanceAmount","displayBalance","toFixed","multipliedBy","tooltipBalance","FARMS_SMALL_AMOUNT_THRESHOLD","useTooltip","targetRef","tooltip","tooltipVisible","handleHarvest","_async_to_generator","receipt","_state","sent","ToastDescriptionWithTx","txHash","transactionHash","flexDirection","TooltipText","decorationColor","eq","Balance","decimals","prefix","pendingTx","IconButtonWrapper","FarmCard_StakeAction","WNATIVE","NATIVE","addLiquidityUrl","tokenAmountTotal","quoteTokenAmountTotal","onStake","onUnstake","onApprove","isApproved","dispatch","useAppDispatch","addTransaction","useTransactionAdder","useActiveWeb3React","native","useNativeCurrency","allowance","router","useFarmFromPid","fetchTxResponse","boosterState","bCakeMultiplier","setBCakeMultiplier","pendingFarm","useNonBscFarmPendingTransaction","useFirstTimeCrossFarming","isFirstTime","refresh","isBloctoETH","useIsBloctoETH","crossChainWarningText","nativeToken","isStakeReady","item","handleStake","amount","handleNonBscStake","refreshFirstTime","amountValue","amountAsBigNumber","DEFAULT_TOKEN_DECIMAL","formatLpBalance","translatableSummary","nonBscFarm","NonBscFarmStepType","FarmTransactionStatus","steps","step","tx","hash","pickFarmTransactionTx","handleUnstake","handleNonBscUnStake","handleApprove","onPresentDeposit","max","tokenName","lpPrice","showActiveBooster","YieldBoosterState","showCrossChainFarmWarning","enablePendingTx","onConfirm","bCakeCalculatorSlot","calculatorBalance","BCakeCalculator","targetInputBalance","earningTokenPrice","onPresentWithdraw","onPresentTransactionModal","WalletModal","initialView","WalletView","quoteTokenSymbol","tokenSymbol","pendingFarmLength","onClickLoadingIcon","txid","IconButton","MinusIcon","AddIcon","Action","CardActionsContainer","StakeAction","ConnectWalletButton","components_BoostedTag","memo","Tag","outline","startIcon","Wrapper","MultiplierTag","FarmCard_CardHeading","isCommunityFarm","DetailsSection","StyledCard","Card","FarmCardInnerContainer","ExpandingWrapper","FarmCard_FarmCard","removed","originalLiquidity","showExpandableSection","setShowExpandableSection","totalValueFormatted","maximumFractionDigits","earnLabel","dual","BASE_ADD_LIQUIDITY_URL","isPromotedFarm","toggleExpandableSection","prev","CardHeading","ApyButton","ExpandableSectionButton","scanAddressLink","infoAddress","hooks_useHarvestFarm","masterChefContract","useMasterchef","gasPrice","useGasPrice","harvestFarm","FarmTableHarvestAction","_param","lpContract","useERC20","useProxyStakedActions","useHarvestFarm","fetchFarmUserDataAsync","pids","isZero","_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_33__","_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_34__","useStakedActions","useStakeFarms","useUnstakeFarms","useApproveFarm","_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_37__","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","disabledMinusButton","disabledPlusButton","useFarmCProxyAddress","multiCallChainId","farmFetcher","cProxyAddress","useSWR","fetchCProxyAddress","hooks_useNonBscHarvestFarm","contract","useCrossFarmingProxy","harvest","TokenWrapper","components_MultiChainHarvestModal","isWrongNetwork","switchNetworkAsync","useSwitchNetwork","useNonBscHarvestFarm","network","isTestnet","isBscNetwork","handleCancel","Modal","Message","icon","MessageText","FlexGap","gap","ChainLogo","span","LightGreyCard","lineHeight","isPending","endIcon","AutoRenewIcon","spin","ethereum","isTokenPocket","stringify","Steps","hooks_useBoosterFarmHandlers","farmBoosterContract","useBCakeFarmBoosterContract","callWithGasPrice","useCallWithGasPrice","activate","gasLimit","BOOSTED_FARM_GAS_LIMIT","deactivate","isConfirming","BoosterTooltip","components_ActionButton","description","button","btn","hideTimeout","_isEmpty","HelpIcon","StepperCircle","StepperText","StepperWrapper","finished","textSubtle","active","primary","FooterBox","InfoBox","InfoText","InfoIconBox","BCakeMigrateModal","onUnStack","Unstake","activatedState","setActivatedState","isLoading","setIsLoading","setIsApproved","_define_property","Enable","Stake","migrationSteps","migrationStepsKeys","fullBalance","getFullDisplayBalance","proxyAddress","useBCakeProxyContractAddress","bCakeProxy","useBCakeProxyContract","lpApproved","then","enabled","onStepChange","console","error","pb","pl","index","toString","parseInt","LogoIcon","CheckmarkIcon","textAlign","components_MigrateActionButton","handleUnstakeWithCallback","callback","onPresentMigrate","components_BoostedAction","refreshActivePool","refreshProxyAddress","useBoosterFarmHandlers","handlers","boostMultiplierFromSC","useBoostMultiplier","boostedMultiplierFromFE","useGetBoostedMultiplier","boostMultiplierDisplay","boostMultiplier","renderBtn","ActionButton","whiteSpace","CreateProxyButton","MigrateActionButton","rest","boostedAprFromFE","useGetBoostedAPR","boostedAprFromSC","isUndefinedOrNull","formatNumber","_toNumber","msg","hooks_useProxyCAKEBalance","cakeContract","getCakeContract","useSWRContract","refreshProxyCakeBalance","mutate","useProxyCAKEBalance","useApproveBoostProxyFarm","stakeFarm","unstakeFarm","createContext","crossFarmingAddress","getCrossFarmingSenderContract","useSWRImmutable","_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_4__","is1st","chain","useNetwork","isConnected","connector","isETH","mainnet","ConnectorNames","Boolean","isBlocto","BloctoWarning","code","close","setClose","handleSuccess","ModalV2","closeOnOverlayClick","DisclaimerModal","getDocLink","FarmsPageLayout","Farms","useAvgLockDuration","useCakeVault","totalLockedAmount","totalShares","totalCakeInVault","pricePerFullShare","avgLockDurationsInSeconds","flexibleCakeShares","flexibleCakeAmount","minus","lockedCakeBoostedShares","lockedCakeOriginalShares","avgBoostRatio","DURATION_FACTOR","BOOST_WEIGHT","getFullDecimalMultiplier","avgLockDurationsInWeeks","formatSecondsToWeeks","avgLockDurationsInWeeksNum","secondsToWeeks","seconds","now","addedDate","addSeconds","secondsToDays","differenceInDays","weeksToSeconds","weeks","secondDuration","_param_isOpen","targetElement","setTargetElement","menuElement","setMenuElement","offset","left","right","isMenuOpen","setIsMenuOpen","toggle","Node","usePopper","modifiers","styles","attributes","menu","popper","open","portal","getPortalRoot","renderMenu","createPortal","ClickableElementContainer","BaseMenu","InlineMenuContainer","backgroundAlt","radii","shadows","SubMenuContainer","default","inputSecondary","SubMenuItem","_param_expanded","handleOnClick","aria-label","role","ChevronUpIcon","ChevronDownIcon","defaultProps","Outer","Inner","StyledInput","Input","InputWrapper","searchText","setSearchText","debouncedOnChange","debounce","e","onChangeCallback","_param_placeholder","DropDownHeader","inset","DropDownListContainer","zIndices","DropDownContainer","boxShadow","DropDownList","ListItem","defaultOptionIndex","_param_defaultOptionIndex","placeHolderText","optionSelected","setOptionSelected","selectedOptionIndex","setSelectedOptionIndex","toggling","stopPropagation","ArrowDropDownIcon","Svg","viewBox","path","d","TABLE","CARD","handleToggleCard","handleToggleTable","CardViewIcon","ListViewIcon","Latinise","latin_map","τ","Τ","x","_get"],"sourceRoot":""}