{"version":3,"file":"static/chunks/2402.2dc793e4121a38c8.js","mappings":"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","sources":["webpack://_N_E/./src/views/Info/components/InfoCharts/CandleChart/index.tsx","webpack://_N_E/../../packages/ui/tokens/colors.ts","webpack://_N_E/<anon>"],"sourcesContent":["import { useRef, useState, useEffect, useCallback, Dispatch, SetStateAction } from 'react'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { createChart, IChartApi } from 'lightweight-charts'\nimport { format } from 'date-fns'\nimport { useTheme } from '@pancakeswap/hooks'\nimport { CandleChartLoader } from 'components/ChartLoaders'\nimport { baseColors, lightColors, darkColors } from '@pancakeswap/ui/tokens/colors'\n\nconst CANDLE_CHART_HEIGHT = 250\n\nexport type LineChartProps = {\n  data: any[]\n  setValue?: Dispatch<SetStateAction<number | undefined>> // used for value on hover\n  setLabel?: Dispatch<SetStateAction<string | undefined>> // used for value label on hover\n} & React.HTMLAttributes<HTMLDivElement>\n\nconst CandleChart = ({ data, setValue, setLabel, ...rest }: LineChartProps) => {\n  const { theme } = useTheme()\n  const {\n    currentLanguage: { locale },\n  } = useTranslation()\n  const chartRef = useRef<HTMLDivElement>(null)\n  const [chartCreated, setChart] = useState<IChartApi | undefined>()\n\n  const handleResize = useCallback(() => {\n    if (chartCreated && chartRef?.current?.parentElement) {\n      chartCreated.resize(chartRef.current.parentElement.clientWidth - 32, CANDLE_CHART_HEIGHT)\n      chartCreated.timeScale().fitContent()\n      chartCreated.timeScale().scrollToPosition(0, false)\n    }\n  }, [chartCreated, chartRef])\n\n  // add event listener for resize\n  const isClient = typeof window === 'object'\n  useEffect(() => {\n    if (!isClient) {\n      return null\n    }\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [isClient, chartRef, handleResize]) // Empty array ensures that effect is only run on mount and unmount\n\n  // if chart not instantiated in canvas, create it\n  useEffect(() => {\n    if (!chartCreated && data && !!chartRef?.current?.parentElement) {\n      const chart = createChart(chartRef.current, {\n        height: CANDLE_CHART_HEIGHT,\n        width: chartRef.current.parentElement.clientWidth - 32,\n        layout: {\n          backgroundColor: 'transparent',\n          textColor: theme.colors.textSubtle,\n          fontFamily: 'Kanit, sans-serif',\n          fontSize: 12,\n        },\n        rightPriceScale: {\n          scaleMargins: {\n            top: 0.1,\n            bottom: 0.1,\n          },\n          borderVisible: false,\n        },\n        timeScale: {\n          borderVisible: false,\n          secondsVisible: true,\n          tickMarkFormatter: (unixTime: number) => {\n            return format(unixTime * 1000, 'MM/dd h:mm a')\n          },\n        },\n        watermark: {\n          visible: false,\n        },\n        grid: {\n          horzLines: {\n            visible: false,\n          },\n          vertLines: {\n            visible: false,\n          },\n        },\n        crosshair: {\n          horzLine: {\n            visible: false,\n            labelVisible: false,\n          },\n          mode: 1,\n          vertLine: {\n            visible: true,\n            labelVisible: false,\n            style: 3,\n            width: 1,\n            color: theme.colors.textSubtle,\n            labelBackgroundColor: theme.colors.primary,\n          },\n        },\n      })\n\n      chart.timeScale().fitContent()\n      setChart(chart)\n    }\n  }, [chartCreated, data, setValue, theme])\n\n  useEffect(() => {\n    if (chartCreated && data) {\n      const series = chartCreated.addCandlestickSeries({\n        upColor: baseColors.success,\n        downColor: baseColors.failure,\n        borderDownColor: baseColors.failure,\n        borderUpColor: baseColors.success,\n        wickDownColor: baseColors.failure,\n        wickUpColor: baseColors.success,\n      })\n\n      series.setData(data)\n\n      chartCreated.applyOptions({\n        layout: {\n          textColor: theme.isDark ? darkColors.textSubtle : lightColors.textSubtle,\n        },\n      })\n\n      // update the title when hovering on the chart\n      chartCreated.subscribeCrosshairMove((param) => {\n        if (\n          chartRef?.current &&\n          (param === undefined ||\n            param.time === undefined ||\n            (param && param.point && param.point.x < 0) ||\n            (param && param.point && param.point.x > chartRef.current.clientWidth) ||\n            (param && param.point && param.point.y < 0) ||\n            (param && param.point && param.point.y > CANDLE_CHART_HEIGHT))\n        ) {\n          // reset values\n          if (setValue) setValue(undefined)\n          if (setLabel) setLabel(undefined)\n        } else if (series && param) {\n          const timestamp = param.time as number\n          const now = new Date(timestamp * 1000)\n          const time = `${now.toLocaleString(locale, {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n            hour: 'numeric',\n            minute: '2-digit',\n            timeZone: 'UTC',\n          })} (UTC)`\n          const parsed = param.seriesPrices.get(series) as { open: number } | undefined\n          if (setValue) setValue(parsed?.open)\n          if (setLabel) setLabel(time)\n        }\n      })\n    }\n  }, [locale, chartCreated, data, setValue, setLabel, theme])\n\n  return (\n    <>\n      {!chartCreated && <CandleChartLoader />}\n      <div ref={chartRef} id=\"candle-chart\" {...rest} />\n    </>\n  )\n}\n\nexport default CandleChart\n","export const baseColors = {\n  white: 'white',\n  failure: '#ED4B9E',\n  failure33: '#ED4B9E33',\n  primary: '#1FC7D4',\n  primary0f: '#1FC7D40f',\n  primary3D: '#1FC7D43D',\n  primaryBright: '#53DEE9',\n  primaryDark: '#0098A1',\n  success: '#31D0AA',\n  success19: '#31D0AA19',\n  warning: '#FFB237',\n  warning2D: '#ED4B9E2D',\n  warning33: '#ED4B9E33',\n}\n\nexport const additionalColors = {\n  binance: '#F0B90B',\n  overlay: '#452a7a',\n  gold: '#FFC700',\n  silver: '#B2B2B2',\n  bronze: '#E7974D',\n}\n\nexport const lightColors = {\n  ...baseColors,\n  ...additionalColors,\n  secondary: '#7645D9',\n  secondary80: '#7645D980',\n  background: '#FAF9FA',\n  backgroundDisabled: '#E9EAEB',\n  backgroundAlt: '#FFFFFF',\n  backgroundAlt2: 'rgba(255, 255, 255, 0.7)',\n  cardBorder: '#E7E3EB',\n  contrast: '#191326',\n  dropdown: '#F6F6F6',\n  dropdownDeep: '#EEEEEE',\n  invertedContrast: '#FFFFFF',\n  input: '#eeeaf4',\n  inputSecondary: '#d7caec',\n  tertiary: '#EFF4F5',\n  text: '#280D5F',\n  text99: '#280D5F99',\n  textDisabled: '#BDC2C4',\n  textSubtle: '#7A6EAA',\n  disabled: '#E9EAEB',\n  gradientBubblegum: 'linear-gradient(139.73deg, #E5FDFF 0%, #F3EFFF 100%)',\n  gradientInverseBubblegum: 'linear-gradient(139.73deg, #F3EFFF 0%, #E5FDFF 100%)',\n  gradientCardHeader: 'linear-gradient(111.68deg, #F2ECF2 0%, #E8F2F6 100%)',\n  gradientBlue: 'linear-gradient(180deg, #A7E8F1 0%, #94E1F2 100%)',\n  gradientViolet: 'linear-gradient(180deg, #E2C9FB 0%, #CDB8FA 100%)',\n  gradientVioletAlt: 'linear-gradient(180deg, #CBD7EF 0%, #9A9FD0 100%)',\n  gradientGold: 'linear-gradient(180deg, #FFD800 0%, #FDAB32 100%)',\n  gradientBold: 'linear-gradient(#53DEE9, #7645D9)',\n}\n\nexport const darkColors = {\n  ...baseColors,\n  ...additionalColors,\n  secondary: '#9A6AFF',\n  secondary80: '#9A6AFF80',\n  background: '#08060B',\n  backgroundDisabled: '#3c3742',\n  backgroundAlt: '#27262c',\n  backgroundAlt2: 'rgba(39, 38, 44, 0.7)',\n  cardBorder: '#383241',\n  contrast: '#FFFFFF',\n  dropdown: '#1E1D20',\n  dropdownDeep: '#100C18',\n  invertedContrast: '#191326',\n  input: '#372F47',\n  inputSecondary: '#262130',\n  primaryDark: '#0098A1',\n  tertiary: '#353547',\n  text: '#F4EEFF',\n  text99: '#F4EEFF99',\n  textDisabled: '#666171',\n  textSubtle: '#B8ADD2',\n  disabled: '#524B63',\n  gradientBubblegum: 'linear-gradient(139.73deg, #313D5C 0%, #3D2A54 100%)',\n  gradientInverseBubblegum: 'linear-gradient(139.73deg, #3D2A54 0%, #313D5C 100%)',\n  gradientCardHeader: 'linear-gradient(166.77deg, #3B4155 0%, #3A3045 100%)',\n  gradientBlue: 'linear-gradient(180deg, #00707F 0%, #19778C 100%)',\n  gradientViolet: 'linear-gradient(180deg, #6C4999 0%, #6D4DB2 100%)',\n  gradientVioletAlt: 'linear-gradient(180deg, #434575 0%, #66578D 100%)',\n  gradientGold: 'linear-gradient(180deg, #FFD800 0%, #FDAB32 100%)',\n  gradientBold: 'linear-gradient(#53DEE9, #9A6AFF)',\n}\n"],"names":["__webpack_exports__","_param","data","setValue","setLabel","rest","theme","useTheme","currentLanguage","useTranslation","locale","chartRef","useRef","useState","chartCreated","setChart","handleResize","useCallback","current","parentElement","resize","clientWidth","timeScale","fitContent","scrollToPosition","useEffect","window","addEventListener","removeEventListener","chart","createChart","height","width","layout","backgroundColor","textColor","colors","textSubtle","fontFamily","fontSize","rightPriceScale","scaleMargins","top","bottom","borderVisible","secondsVisible","tickMarkFormatter","unixTime","format","watermark","visible","grid","horzLines","vertLines","crosshair","horzLine","labelVisible","mode","vertLine","style","color","labelBackgroundColor","primary","series","addCandlestickSeries","upColor","baseColors","downColor","borderDownColor","borderUpColor","wickDownColor","wickUpColor","setData","applyOptions","isDark","darkColors","lightColors","subscribeCrosshairMove","param","undefined","time","point","x","y","CANDLE_CHART_HEIGHT","timestamp","now","Date","concat","toLocaleString","year","month","day","hour","minute","timeZone","parsed","seriesPrices","get","open","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Fragment","jsx","CandleChartLoader","div","ref","id","white","failure","failure33","primary0f","primary3D","primaryBright","primaryDark","success","success19","warning","warning2D","warning33","additionalColors","binance","overlay","gold","silver","bronze","_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_0__","Z","_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_1__","secondary","secondary80","background","backgroundDisabled","backgroundAlt","backgroundAlt2","cardBorder","contrast","dropdown","dropdownDeep","invertedContrast","input","inputSecondary","tertiary","text","text99","textDisabled","disabled","gradientBubblegum","gradientInverseBubblegum","gradientCardHeader","gradientBlue","gradientViolet","gradientVioletAlt","gradientGold","gradientBold"],"sourceRoot":""}