{"version":3,"file":"static/chunks/1972.d38fc059d88c6952.js","mappings":"sFAsCA,IAAAA,EAAAC,EAtC+B,OAsC/B,SAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,EACAF,CAAA,CAAAE,EAAA,KAAAC,IAAA,CAAAF,EACA,EAAC,WAAe,eAEhBG,CAAAA,EAAAC,OAAA,CAAAP,0FC3BAQ,CAAAA,EAAA,QAXiB,UAAM,CACrB,IAAMC,EAAoBC,CAAAA,EAAAA,EAAAA,SAAAA,IAAYC,KAAK,CAACF,iBAAiB,CACvDG,EAAaC,CAAAA,EAAAA,EAAAA,EAAAA,EAAiBJ,GAEpC,MACE,GAAAK,EAAAC,GAAA,EAAAD,EAAAE,QAAA,WACE,GAAAF,EAAAC,GAAA,EAACE,EAAAA,CAAeA,CAAAA,CAACL,WAAYA,KAGnC","sources":["webpack://_N_E/../../node_modules/lodash/partition.js","webpack://_N_E/./src/views/Nft/market/Collection/Activity/index.tsx","webpack://_N_E/<anon>"],"sourcesContent":["var createAggregator = require('./_createAggregator');\n\n/**\n * Creates an array of elements split into two groups, the first of which\n * contains elements `predicate` returns truthy for, the second of which\n * contains elements `predicate` returns falsey for. The predicate is\n * invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the array of grouped elements.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': false },\n *   { 'user': 'fred',    'age': 40, 'active': true },\n *   { 'user': 'pebbles', 'age': 1,  'active': false }\n * ];\n *\n * _.partition(users, function(o) { return o.active; });\n * // => objects for [['fred'], ['barney', 'pebbles']]\n *\n * // The `_.matches` iteratee shorthand.\n * _.partition(users, { 'age': 1, 'active': false });\n * // => objects for [['pebbles'], ['barney', 'fred']]\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.partition(users, ['active', false]);\n * // => objects for [['barney', 'pebbles'], ['fred']]\n *\n * // The `_.property` iteratee shorthand.\n * _.partition(users, 'active');\n * // => objects for [['fred'], ['barney', 'pebbles']]\n */\nvar partition = createAggregator(function(result, value, key) {\n  result[key ? 0 : 1].push(value);\n}, function() { return [[], []]; });\n\nmodule.exports = partition;\n","import { useRouter } from 'next/router'\nimport { useGetCollection } from 'state/nftMarket/hooks'\nimport ActivityHistory from '../../ActivityHistory/ActivityHistory'\n\nconst Activity = () => {\n  const collectionAddress = useRouter().query.collectionAddress as string\n  const collection = useGetCollection(collectionAddress)\n\n  return (\n    <>\n      <ActivityHistory collection={collection} />\n    </>\n  )\n}\n\nexport default Activity\n"],"names":["partition","createAggregator","result","value","key","push","module","exports","__webpack_exports__","collectionAddress","useRouter","query","collection","useGetCollection","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","Fragment","ActivityHistory"],"sourceRoot":""}