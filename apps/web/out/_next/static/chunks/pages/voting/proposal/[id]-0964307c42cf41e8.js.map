{"version":3,"file":"static/chunks/pages/voting/proposal/[id]-0964307c42cf41e8.js","mappings":"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","sources":["webpack://_N_E/../../node_modules/lodash/times.js","webpack://_N_E/?8dd8","webpack://_N_E/./src/components/Loader/PageLoader.tsx","webpack://_N_E/./src/views/Voting/Proposal/Details.tsx","webpack://_N_E/./src/views/Voting/components/TextEllipsis.tsx","webpack://_N_E/./src/views/Voting/Proposal/Results.tsx","webpack://_N_E/./src/views/Voting/components/CastVoteModal/MainView.tsx","webpack://_N_E/./src/views/Voting/components/CastVoteModal/types.ts","webpack://_N_E/./src/views/Voting/components/CastVoteModal/index.tsx","webpack://_N_E/./src/views/Voting/Proposal/Vote.tsx","webpack://_N_E/./src/views/Voting/components/Proposal/VotesLoading.tsx","webpack://_N_E/./src/views/Voting/components/Proposal/Row.tsx","webpack://_N_E/./src/views/Voting/components/Proposal/VoteRow.tsx","webpack://_N_E/./src/views/Voting/Proposal/Votes.tsx","webpack://_N_E/./src/views/Voting/Proposal/Overview.tsx","webpack://_N_E/./src/pages/voting/proposal/[id].tsx","webpack://_N_E/./src/state/voting/helpers.ts","webpack://_N_E/./src/views/Voting/components/Proposals/tags.tsx","webpack://_N_E/../../packages/uikit/src/components/Balance/Balance.tsx","webpack://_N_E/../../packages/uikit/src/components/NotFound/NotFound.tsx","webpack://_N_E/../../packages/uikit/src/components/Progress/ProgressBunnyWrapper.tsx","webpack://_N_E/../../packages/uikit/src/components/Progress/Progress.tsx","webpack://_N_E/../../packages/uikit/src/components/Progress/themes.ts","webpack://_N_E/../../packages/uikit/src/components/Progress/StyledProgress.tsx","webpack://_N_E/../../packages/uikit/src/components/Progress/types.ts","webpack://_N_E/../../packages/uikit/src/components/Radio/types.ts","webpack://_N_E/../../packages/uikit/src/components/Radio/Radio.tsx","webpack://_N_E/../../packages/uikit/src/components/Svg/Icons/ProgressBunny.tsx","webpack://_N_E/../../packages/uikit/src/components/Svg/Icons/SwapVert.tsx","webpack://_N_E/<anon>"],"sourcesContent":["var baseTimes = require('./_baseTimes'),\n    castFunction = require('./_castFunction'),\n    toInteger = require('./toInteger');\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Invokes the iteratee `n` times, returning an array of the results of\n * each invocation. The iteratee is invoked with one argument; (index).\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n * @example\n *\n * _.times(3, String);\n * // => ['0', '1', '2']\n *\n *  _.times(4, _.constant(0));\n * // => [0, 0, 0, 0]\n */\nfunction times(n, iteratee) {\n  n = toInteger(n);\n  if (n < 1 || n > MAX_SAFE_INTEGER) {\n    return [];\n  }\n  var index = MAX_ARRAY_LENGTH,\n      length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n  iteratee = castFunction(iteratee);\n  n -= MAX_ARRAY_LENGTH;\n\n  var result = baseTimes(length, iteratee);\n  while (++index < n) {\n    iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = times;\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/voting/proposal/[id]\",\n      function () {\n        return require(\"private-next-pages/voting/proposal/[id].tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/voting/proposal/[id]\"])\n      });\n    }\n  ","import styled from 'styled-components'\nimport { Spinner } from '@pancakeswap/uikit'\nimport Page from '../Layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC<React.PropsWithChildren<unknown>> = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import { Box, Card, CardBody, CardHeader, Flex, Heading, LinkExternal, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { format } from 'date-fns'\nimport { Proposal } from 'state/types'\nimport { getBlockExploreLink } from 'utils'\nimport { useTranslation } from '@pancakeswap/localization'\nimport truncateHash from '@pancakeswap/utils/truncateHash'\nimport { IPFS_GATEWAY } from '../config'\nimport { ProposalStateTag } from '../components/Proposals/tags'\n\ninterface DetailsProps {\n  proposal: Proposal\n}\n\nconst DetailBox = styled(Box)`\n  background-color: ${({ theme }) => theme.colors.background};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  border-radius: 16px;\n`\n\nconst Details: React.FC<React.PropsWithChildren<DetailsProps>> = ({ proposal }) => {\n  const { t } = useTranslation()\n  const startDate = new Date(proposal.start * 1000)\n  const endDate = new Date(proposal.end * 1000)\n\n  return (\n    <Card mb=\"16px\">\n      <CardHeader>\n        <Heading as=\"h3\" scale=\"md\">\n          {t('Details')}\n        </Heading>\n      </CardHeader>\n      <CardBody>\n        <Flex alignItems=\"center\" mb=\"8px\">\n          <Text color=\"textSubtle\">{t('Identifier')}</Text>\n          <LinkExternal href={`${IPFS_GATEWAY}/${proposal.id}`} ml=\"8px\">\n            {proposal.id.slice(0, 8)}\n          </LinkExternal>\n        </Flex>\n        <Flex alignItems=\"center\" mb=\"8px\">\n          <Text color=\"textSubtle\">{t('Creator')}</Text>\n          <LinkExternal isBscScan href={getBlockExploreLink(proposal.author, 'address')} ml=\"8px\">\n            {truncateHash(proposal.author)}\n          </LinkExternal>\n        </Flex>\n        <Flex alignItems=\"center\" mb=\"16px\">\n          <Text color=\"textSubtle\">{t('Snapshot')}</Text>\n          <LinkExternal isBscScan href={getBlockExploreLink(proposal.snapshot, 'block')} ml=\"8px\">\n            {proposal.snapshot}\n          </LinkExternal>\n        </Flex>\n        <DetailBox p=\"16px\">\n          <ProposalStateTag proposalState={proposal.state} mb=\"8px\" />\n          <Flex alignItems=\"center\">\n            <Text color=\"textSubtle\" fontSize=\"14px\">\n              {t('Start Date')}\n            </Text>\n            <Text ml=\"8px\">{format(startDate, 'yyyy-MM-dd HH:mm')}</Text>\n          </Flex>\n          <Flex alignItems=\"center\">\n            <Text color=\"textSubtle\" fontSize=\"14px\">\n              {t('End Date')}\n            </Text>\n            <Text ml=\"8px\">{format(endDate, 'yyyy-MM-dd HH:mm')}</Text>\n          </Flex>\n        </DetailBox>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default Details\n","import styled from 'styled-components'\nimport { Text } from '@pancakeswap/uikit'\n\nconst TextEllipsis = styled(Text)`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`\n\nexport default TextEllipsis\n","import {\n  Box,\n  Text,\n  Flex,\n  Card,\n  CardBody,\n  CardHeader,\n  Heading,\n  Progress,\n  Skeleton,\n  Tag,\n  CheckmarkCircleIcon,\n} from '@pancakeswap/uikit'\nimport { useAccount } from 'wagmi'\nimport { Vote } from 'state/types'\nimport { formatNumber } from '@pancakeswap/utils/formatBalance'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { FetchStatus } from 'config/constants/types'\nimport { calculateVoteResults, getTotalFromVotes } from '../helpers'\nimport TextEllipsis from '../components/TextEllipsis'\n\ninterface ResultsProps {\n  choices: string[]\n  votes: Vote[]\n  votesLoadingStatus: FetchStatus\n}\n\nconst Results: React.FC<React.PropsWithChildren<ResultsProps>> = ({ choices, votes, votesLoadingStatus }) => {\n  const { t } = useTranslation()\n  const results = calculateVoteResults(votes)\n  const { address: account } = useAccount()\n  const totalVotes = getTotalFromVotes(votes)\n\n  return (\n    <Card>\n      <CardHeader>\n        <Heading as=\"h3\" scale=\"md\">\n          {t('Current Results')}\n        </Heading>\n      </CardHeader>\n      <CardBody>\n        {votesLoadingStatus === FetchStatus.Fetched &&\n          choices.map((choice, index) => {\n            const choiceVotes = results[choice] || []\n            const totalChoiceVote = getTotalFromVotes(choiceVotes)\n            const progress = totalVotes === 0 ? 0 : (totalChoiceVote / totalVotes) * 100\n            const hasVoted = choiceVotes.some((vote) => {\n              return account && vote.voter.toLowerCase() === account.toLowerCase()\n            })\n\n            return (\n              <Box key={choice} mt={index > 0 ? '24px' : '0px'}>\n                <Flex alignItems=\"center\" mb=\"8px\">\n                  <TextEllipsis mb=\"4px\" title={choice}>\n                    {choice}\n                  </TextEllipsis>\n                  {hasVoted && (\n                    <Tag variant=\"success\" outline ml=\"8px\">\n                      <CheckmarkCircleIcon mr=\"4px\" /> {t('Voted')}\n                    </Tag>\n                  )}\n                </Flex>\n                <Box mb=\"4px\">\n                  <Progress primaryStep={progress} scale=\"sm\" />\n                </Box>\n                <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                  <Text color=\"textSubtle\">{t('%total% Votes', { total: formatNumber(totalChoiceVote, 0, 2) })}</Text>\n                  <Text>\n                    {progress.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}%\n                  </Text>\n                </Flex>\n              </Box>\n            )\n          })}\n\n        {votesLoadingStatus === FetchStatus.Fetching &&\n          choices.map((choice, index) => {\n            return (\n              <Box key={choice} mt={index > 0 ? '24px' : '0px'}>\n                <Flex alignItems=\"center\" mb=\"8px\">\n                  <TextEllipsis mb=\"4px\" title={choice}>\n                    {choice}\n                  </TextEllipsis>\n                </Flex>\n                <Box mb=\"4px\">\n                  <Skeleton height=\"36px\" mb=\"4px\" />\n                </Box>\n              </Box>\n            )\n          })}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default Results\n","import { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport {\n  IconButton,\n  Text,\n  Skeleton,\n  Button,\n  AutoRenewIcon,\n  ChevronRightIcon,\n  Message,\n  Flex,\n  RocketIcon,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { formatNumber } from '@pancakeswap/utils/formatBalance'\nimport useCurrentBlockTimestamp from 'hooks/useCurrentBlockTimestamp'\nimport TextEllipsis from '../TextEllipsis'\nimport { VotingBoxBorder, VotingBoxCardInner, ModalInner } from './styles'\nimport { CastVoteModalProps } from './types'\n\ninterface MainViewProps {\n  vote: {\n    label: string\n    value: number\n  }\n  isLoading: boolean\n  isPending: boolean\n  isError: boolean\n  total: number\n  disabled?: boolean\n  lockedCakeBalance: number\n  lockedEndTime: number\n  onConfirm: () => void\n  onViewDetails: () => void\n  onDismiss: CastVoteModalProps['onDismiss']\n}\n\nconst MainView: React.FC<React.PropsWithChildren<MainViewProps>> = ({\n  vote,\n  total,\n  isPending,\n  isLoading,\n  isError,\n  onConfirm,\n  onViewDetails,\n  onDismiss,\n  disabled,\n  lockedCakeBalance,\n  lockedEndTime,\n}) => {\n  const { t } = useTranslation()\n  const blockTimestamp = useCurrentBlockTimestamp()\n\n  const hasLockedCake = lockedCakeBalance > 0\n\n  const isBoostingExpired = useMemo(() => {\n    return lockedEndTime !== 0 && new BigNumber(blockTimestamp?.toString()).gte(lockedEndTime)\n  }, [blockTimestamp, lockedEndTime])\n\n  const hasBoosted = hasLockedCake && !isBoostingExpired\n\n  return (\n    <>\n      <ModalInner>\n        <Text color=\"secondary\" mb=\"8px\" textTransform=\"uppercase\" fontSize=\"12px\" bold>\n          {t('Voting For')}\n        </Text>\n        <TextEllipsis bold fontSize=\"20px\" mb=\"8px\" title={vote.label}>\n          {vote.label}\n        </TextEllipsis>\n        <Text color=\"secondary\" mb=\"8px\" textTransform=\"uppercase\" fontSize=\"12px\" bold>\n          {t('Your Voting Power')}\n        </Text>\n        {isLoading && !isError ? (\n          <Skeleton height=\"64px\" mb=\"12px\" />\n        ) : isError ? (\n          <Message variant=\"danger\" mb=\"12px\">\n            <Text color=\"text\">{t('Error occurred, please try again later')}</Text>\n          </Message>\n        ) : (\n          <>\n            <VotingBoxBorder hasBoosted={hasBoosted} onClick={onViewDetails} style={{ cursor: 'pointer' }}>\n              <VotingBoxCardInner hasBoosted={hasBoosted}>\n                <Flex flexDirection=\"column\">\n                  <Text bold fontSize=\"20px\" color={total === 0 ? 'failure' : 'text'}>\n                    {formatNumber(total, 0, 3)}\n                  </Text>\n                  {hasLockedCake && (\n                    <Flex>\n                      <RocketIcon color={isBoostingExpired ? 'warning' : 'secondary'} width=\"15px\" height=\"15px\" />\n                      <Text ml=\"4px\" bold color={isBoostingExpired ? 'warning' : 'secondary'} fontSize=\"14px\">\n                        {isBoostingExpired ? t('Boosting Expired') : t('Boosted by vCAKE')}\n                      </Text>\n                    </Flex>\n                  )}\n                </Flex>\n                <IconButton scale=\"sm\" variant=\"text\">\n                  <ChevronRightIcon width=\"24px\" />\n                </IconButton>\n              </VotingBoxCardInner>\n            </VotingBoxBorder>\n            {total === 0 ? (\n              <Message variant=\"danger\" mb=\"12px\">\n                <Text color=\"danger\">\n                  {t(\n                    'Hold some CAKE in your wallet or on PancakeSwap at the snapshot block to get voting power for future proposals.',\n                  )}\n                </Text>\n              </Message>\n            ) : (\n              <Text as=\"p\" color=\"textSubtle\" fontSize=\"14px\">\n                {t('Are you sure you want to vote for the above choice? This action cannot be undone.')}\n              </Text>\n            )}\n          </>\n        )}\n      </ModalInner>\n      <Button\n        isLoading={isPending}\n        endIcon={isPending ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        disabled={disabled || isLoading || total === 0}\n        width=\"100%\"\n        mb=\"8px\"\n        onClick={onConfirm}\n      >\n        {t('Confirm Vote')}\n      </Button>\n      <Button variant=\"secondary\" width=\"100%\" onClick={onDismiss}>\n        {t('Cancel')}\n      </Button>\n    </>\n  )\n}\n\nexport default MainView\n","import { InjectedModalProps } from '@pancakeswap/uikit'\n\nexport enum ConfirmVoteView {\n  MAIN = 'main',\n  DETAILS = 'details',\n}\n\nexport interface CastVoteModalProps extends InjectedModalProps {\n  onSuccess: () => Promise<void>\n  proposalId: string\n  vote: {\n    label: string\n    value: number\n  }\n  block?: number\n}\n","import { useTranslation } from '@pancakeswap/localization'\nimport { Box, Modal, useToast } from '@pancakeswap/uikit'\nimport { useWeb3LibraryContext } from '@pancakeswap/wagmi'\nimport { useAccount } from 'wagmi'\nimport snapshot from '@snapshot-labs/snapshot.js'\nimport useTheme from 'hooks/useTheme'\nimport { useState } from 'react'\nimport { PANCAKE_SPACE } from 'views/Voting/config'\nimport useGetVotingPower from '../../hooks/useGetVotingPower'\nimport DetailsView from './DetailsView'\nimport MainView from './MainView'\nimport { CastVoteModalProps, ConfirmVoteView } from './types'\n\nconst hub = 'https://hub.snapshot.org'\nconst client = new snapshot.Client712(hub)\n\nconst CastVoteModal: React.FC<React.PropsWithChildren<CastVoteModalProps>> = ({\n  onSuccess,\n  proposalId,\n  vote,\n  block,\n  onDismiss,\n}) => {\n  const [view, setView] = useState<ConfirmVoteView>(ConfirmVoteView.MAIN)\n  const [isPending, setIsPending] = useState(false)\n  const { address: account } = useAccount()\n  const { t } = useTranslation()\n  const library = useWeb3LibraryContext()\n  const { toastError } = useToast()\n  const { theme } = useTheme()\n  const {\n    isLoading,\n    isError,\n    total,\n    cakeBalance,\n    cakeVaultBalance,\n    cakePoolBalance,\n    poolsBalance,\n    cakeBnbLpBalance,\n    ifoPoolBalance,\n    lockedCakeBalance,\n    lockedEndTime,\n  } = useGetVotingPower(block)\n\n  const isStartView = view === ConfirmVoteView.MAIN\n  const handleBack = isStartView ? null : () => setView(ConfirmVoteView.MAIN)\n  const handleViewDetails = () => setView(ConfirmVoteView.DETAILS)\n\n  const title = {\n    [ConfirmVoteView.MAIN]: t('Confirm Vote'),\n    [ConfirmVoteView.DETAILS]: t('Voting Power'),\n  }\n\n  const handleDismiss = () => {\n    onDismiss()\n  }\n\n  const handleConfirmVote = async () => {\n    try {\n      setIsPending(true)\n\n      await client.vote(library as any, account, {\n        space: PANCAKE_SPACE,\n        choice: vote.value,\n        reason: '',\n        type: 'single-choice',\n        proposal: proposalId,\n        app: 'snapshot',\n      })\n\n      await onSuccess()\n\n      handleDismiss()\n    } catch (error) {\n      toastError(t('Error'), (error as Error)?.message ?? t('Error occurred, please try again'))\n      console.error(error)\n    } finally {\n      setIsPending(false)\n    }\n  }\n\n  return (\n    <Modal\n      title={title[view]}\n      onBack={handleBack}\n      onDismiss={onDismiss}\n      hideCloseButton={!isStartView}\n      headerBackground={theme.colors.gradientCardHeader}\n    >\n      <Box mb=\"24px\">\n        {view === ConfirmVoteView.MAIN && (\n          <MainView\n            vote={vote}\n            isError={isError}\n            isLoading={isLoading}\n            isPending={isPending}\n            total={total}\n            lockedCakeBalance={lockedCakeBalance}\n            lockedEndTime={lockedEndTime}\n            onConfirm={handleConfirmVote}\n            onViewDetails={handleViewDetails}\n            onDismiss={handleDismiss}\n          />\n        )}\n        {view === ConfirmVoteView.DETAILS && (\n          <DetailsView\n            total={total}\n            cakeBalance={cakeBalance}\n            ifoPoolBalance={ifoPoolBalance}\n            cakeVaultBalance={cakeVaultBalance}\n            cakePoolBalance={cakePoolBalance}\n            poolsBalance={poolsBalance}\n            cakeBnbLpBalance={cakeBnbLpBalance}\n            block={block}\n            lockedCakeBalance={lockedCakeBalance}\n            lockedEndTime={lockedEndTime}\n          />\n        )}\n      </Box>\n    </Modal>\n  )\n}\n\nexport default CastVoteModal\n","import { useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  CardProps,\n  Heading,\n  Radio,\n  Text,\n  useModal,\n  useToast,\n} from '@pancakeswap/uikit'\nimport { useAccount } from 'wagmi'\nimport { Proposal } from 'state/types'\nimport { useTranslation } from '@pancakeswap/localization'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport CastVoteModal from '../components/CastVoteModal'\n\ninterface VoteProps extends CardProps {\n  proposal: Proposal\n  onSuccess?: () => void\n}\n\ninterface State {\n  label: string\n  value: number\n}\n\nconst Choice = styled.label<{ isChecked: boolean; isDisabled: boolean }>`\n  align-items: center;\n  border: 1px solid ${({ theme, isChecked }) => theme.colors[isChecked ? 'success' : 'cardBorder']};\n  border-radius: 16px;\n  cursor: ${({ isDisabled }) => (isDisabled ? 'not-allowed' : 'pointer')};\n  display: flex;\n  margin-bottom: 16px;\n  padding: 16px;\n`\n\nconst ChoiceText = styled.div`\n  flex: 1;\n  padding-left: 16px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  width: 0;\n`\n\nconst Vote: React.FC<React.PropsWithChildren<VoteProps>> = ({ proposal, onSuccess, ...props }) => {\n  const [vote, setVote] = useState<State>(null)\n  const { t } = useTranslation()\n  const { toastSuccess } = useToast()\n  const { address: account } = useAccount()\n\n  const handleSuccess = async () => {\n    toastSuccess(t('Vote cast!'))\n    onSuccess?.()\n  }\n\n  const [presentCastVoteModal] = useModal(\n    <CastVoteModal onSuccess={handleSuccess} proposalId={proposal.id} vote={vote} block={Number(proposal.snapshot)} />,\n  )\n\n  return (\n    <Card {...props}>\n      <CardHeader>\n        <Heading as=\"h3\" scale=\"md\">\n          {t('Cast your vote')}\n        </Heading>\n      </CardHeader>\n      <CardBody>\n        {proposal.choices.map((choice, index) => {\n          const isChecked = index + 1 === vote?.value\n\n          const handleChange = () => {\n            setVote({\n              label: choice,\n              value: index + 1,\n            })\n          }\n\n          return (\n            <Choice key={choice} isChecked={isChecked} isDisabled={!account}>\n              <div style={{ flexShrink: 0 }}>\n                <Radio scale=\"sm\" value={choice} checked={isChecked} onChange={handleChange} disabled={!account} />\n              </div>\n              <ChoiceText>\n                <Text as=\"span\" title={choice}>\n                  {choice}\n                </Text>\n              </ChoiceText>\n            </Choice>\n          )\n        })}\n        {account ? (\n          <Button onClick={presentCastVoteModal} disabled={vote === null}>\n            {t('Cast Vote')}\n          </Button>\n        ) : (\n          <ConnectWalletButton />\n        )}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default Vote\n","import { Box, Flex, Skeleton } from '@pancakeswap/uikit'\nimport times from 'lodash/times'\nimport styled from 'styled-components'\n\nconst Row = styled(Flex)`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  padding: 16px 24px;\n`\n\nconst StyledSkeleton = styled(Skeleton)`\n  flex: 1;\n`\n\nconst VotesLoading = () => {\n  return (\n    <Box>\n      {times(10).map((index) => (\n        <Row key={index}>\n          <Skeleton height=\"21px\" mr=\"32px\" width=\"100px\" />\n          <StyledSkeleton height=\"21px\" mr=\"32px\" width=\"100%\" />\n          <StyledSkeleton height=\"21px\" width=\"100%\" />\n        </Row>\n      ))}\n    </Box>\n  )\n}\n\nexport default VotesLoading\n","import styled from 'styled-components'\nimport { Grid, Box } from '@pancakeswap/uikit'\n\nexport const AddressColumn = styled(Box).attrs({ alignItems: 'center' })`\n  grid-area: address;\n`\n\nexport const ChoiceColumn = styled(Box)`\n  grid-area: choice;\n  overflow: hidden;\n`\n\nexport const VotingPowerColumn = styled(Box)`\n  justify-self: end;\n  grid-area: vote;\n`\n\nconst Row = styled(Grid)`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  grid-gap: 8px;\n  grid-template-areas:\n    'address address address'\n    'choice choice vote';\n  grid-template-columns: 1fr 1fr 120px;\n  padding: 8px 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-gap: 16px;\n    grid-template-areas: 'address choice vote';\n    padding: 16px 24px;\n  }\n`\n\nexport default Row\n","import { Flex, LinkExternal, Text, Tag, CheckmarkCircleIcon } from '@pancakeswap/uikit'\nimport truncateHash from '@pancakeswap/utils/truncateHash'\nimport { getBlockExploreLink } from 'utils'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { Vote } from 'state/types'\nimport { IPFS_GATEWAY } from '../../config'\nimport TextEllipsis from '../TextEllipsis'\nimport Row, { AddressColumn, ChoiceColumn, VotingPowerColumn } from './Row'\n\ninterface VoteRowProps {\n  vote: Vote\n  isVoter: boolean\n}\n\nconst VoteRow: React.FC<React.PropsWithChildren<VoteRowProps>> = ({ vote, isVoter }) => {\n  const { t } = useTranslation()\n  const hasVotingPower = !!vote.metadata?.votingPower\n\n  const votingPower = hasVotingPower\n    ? parseFloat(vote.metadata.votingPower).toLocaleString(undefined, {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 3,\n      })\n    : '--'\n\n  return (\n    <Row>\n      <AddressColumn>\n        <Flex alignItems=\"center\">\n          <LinkExternal isBscScan href={getBlockExploreLink(vote.voter, 'address')}>\n            {truncateHash(vote.voter)}\n          </LinkExternal>\n          {isVoter && (\n            <Tag variant=\"success\" outline ml=\"8px\">\n              <CheckmarkCircleIcon mr=\"4px\" /> {t('Voted')}\n            </Tag>\n          )}\n        </Flex>\n      </AddressColumn>\n      <ChoiceColumn>\n        <TextEllipsis title={vote.proposal.choices[vote.choice - 1]}>\n          {vote.proposal.choices[vote.choice - 1]}\n        </TextEllipsis>\n      </ChoiceColumn>\n      <VotingPowerColumn>\n        <Flex alignItems=\"center\" justifyContent=\"end\">\n          <Text title={vote.metadata.votingPower}>{votingPower}</Text>\n          {hasVotingPower && <LinkExternal href={`${IPFS_GATEWAY}/${vote.id}`} />}\n        </Flex>\n      </VotingPowerColumn>\n    </Row>\n  )\n}\n\nexport default VoteRow\n","import { useState } from 'react'\nimport {\n  AutoRenewIcon,\n  Card,\n  CardHeader,\n  ChevronDownIcon,\n  Flex,\n  Heading,\n  Button,\n  ChevronUpIcon,\n  useMatchBreakpoints,\n} from '@pancakeswap/uikit'\nimport { useAccount } from 'wagmi'\nimport orderBy from 'lodash/orderBy'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { Vote } from 'state/types'\nimport { FetchStatus } from 'config/constants/types'\nimport VotesLoading from '../components/Proposal/VotesLoading'\nimport VoteRow from '../components/Proposal/VoteRow'\n\ninterface VotesProps {\n  votes: Vote[]\n  totalVotes?: number\n  votesLoadingStatus: FetchStatus\n}\n\nconst parseVotePower = (incomingVote: Vote) => {\n  let votingPower = parseFloat(incomingVote?.metadata?.votingPower)\n  if (!votingPower) votingPower = 0\n  return votingPower\n}\n\nconst Votes: React.FC<React.PropsWithChildren<VotesProps>> = ({ votes, votesLoadingStatus, totalVotes }) => {\n  const [showAll, setShowAll] = useState(false)\n  const { isMobile } = useMatchBreakpoints()\n  const { t } = useTranslation()\n  const { address: account } = useAccount()\n  const orderedVotes = orderBy(votes, [parseVotePower, 'created'], ['desc', 'desc'])\n\n  const VOTES_PER_VIEW = isMobile ? 10 : 20\n  const displayVotes = showAll ? orderedVotes : orderedVotes.slice(0, VOTES_PER_VIEW)\n  const isFetched = votesLoadingStatus === FetchStatus.Fetched\n\n  const handleClick = () => {\n    setShowAll(!showAll)\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\n          <Heading as=\"h3\" scale=\"md\">\n            {t('Votes (%count%)', { count: totalVotes ? totalVotes.toLocaleString() : '-' })}\n          </Heading>\n          {!isFetched && <AutoRenewIcon spin width=\"22px\" />}\n        </Flex>\n      </CardHeader>\n      {!isFetched && <VotesLoading />}\n\n      {isFetched && displayVotes.length > 0 && (\n        <>\n          {displayVotes.map((vote) => {\n            const isVoter = account && vote.voter.toLowerCase() === account.toLowerCase()\n            return <VoteRow key={vote.id} vote={vote} isVoter={isVoter} />\n          })}\n          <Flex alignItems=\"center\" justifyContent=\"center\" py=\"8px\" px=\"24px\">\n            <Button\n              width=\"100%\"\n              onClick={handleClick}\n              variant=\"text\"\n              endIcon={\n                showAll ? (\n                  <ChevronUpIcon color=\"primary\" width=\"21px\" />\n                ) : (\n                  <ChevronDownIcon color=\"primary\" width=\"21px\" />\n                )\n              }\n              disabled={!isFetched}\n            >\n              {showAll ? t('Hide') : t('See All')}\n            </Button>\n          </Flex>\n        </>\n      )}\n\n      {isFetched && displayVotes.length === 0 && (\n        <Flex alignItems=\"center\" justifyContent=\"center\" py=\"32px\">\n          <Heading as=\"h5\">{t('No votes found')}</Heading>\n        </Flex>\n      )}\n    </Card>\n  )\n}\n\nexport default Votes\n","import { ArrowBackIcon, Box, Button, Flex, Heading, NotFound, ReactMarkdown } from '@pancakeswap/uikit'\nimport { getAllVotes, getProposal } from 'state/voting/helpers'\nimport { useAccount } from 'wagmi'\nimport useSWRImmutable from 'swr/immutable'\nimport { ProposalState } from 'state/types'\nimport Link from 'next/link'\nimport { useRouter } from 'next/router'\nimport { useTranslation } from '@pancakeswap/localization'\nimport Container from 'components/Layout/Container'\nimport PageLoader from 'components/Loader/PageLoader'\nimport { FetchStatus } from 'config/constants/types'\nimport { isCoreProposal } from '../helpers'\nimport { ProposalStateTag, ProposalTypeTag } from '../components/Proposals/tags'\nimport Layout from '../components/Layout'\nimport Details from './Details'\nimport Results from './Results'\nimport Vote from './Vote'\nimport Votes from './Votes'\n\nconst Overview = () => {\n  const { query, isFallback } = useRouter()\n  const id = query.id as string\n  const { t } = useTranslation()\n  const { address: account } = useAccount()\n\n  const {\n    status: proposalLoadingStatus,\n    data: proposal,\n    error,\n  } = useSWRImmutable(id ? ['proposal', id] : null, () => getProposal(id))\n\n  const {\n    status: votesLoadingStatus,\n    data: votes,\n    mutate: refetch,\n  } = useSWRImmutable(proposal ? ['proposal', proposal, 'votes'] : null, async () => getAllVotes(proposal))\n  const hasAccountVoted = account && votes && votes.some((vote) => vote.voter.toLowerCase() === account.toLowerCase())\n\n  const isPageLoading = votesLoadingStatus === FetchStatus.Fetching || proposalLoadingStatus === FetchStatus.Fetching\n\n  if (!proposal && error) {\n    return <NotFound />\n  }\n\n  if (isFallback || !proposal) {\n    return <PageLoader />\n  }\n\n  return (\n    <Container py=\"40px\">\n      <Box mb=\"40px\">\n        <Link href=\"/voting\" passHref>\n          <Button as=\"a\" variant=\"text\" startIcon={<ArrowBackIcon color=\"primary\" width=\"24px\" />} px=\"0\">\n            {t('Back to Vote Overview')}\n          </Button>\n        </Link>\n      </Box>\n      <Layout>\n        <Box>\n          <Box mb=\"32px\">\n            <Flex alignItems=\"center\" mb=\"8px\">\n              <ProposalStateTag proposalState={proposal.state} />\n              <ProposalTypeTag isCoreProposal={isCoreProposal(proposal)} ml=\"8px\" />\n            </Flex>\n            <Heading as=\"h1\" scale=\"xl\" mb=\"16px\">\n              {proposal.title}\n            </Heading>\n            <Box>\n              <ReactMarkdown>{proposal.body}</ReactMarkdown>\n            </Box>\n          </Box>\n          {!isPageLoading && !hasAccountVoted && proposal.state === ProposalState.ACTIVE && (\n            <Vote proposal={proposal} onSuccess={refetch} mb=\"16px\" />\n          )}\n          <Votes votes={votes} totalVotes={votes?.length ?? proposal.votes} votesLoadingStatus={votesLoadingStatus} />\n        </Box>\n        <Box position=\"sticky\" top=\"60px\">\n          <Details proposal={proposal} />\n          <Results choices={proposal.choices} votes={votes} votesLoadingStatus={votesLoadingStatus} />\n        </Box>\n      </Layout>\n    </Container>\n  )\n}\n\nexport default Overview\n","// eslint-disable-next-line camelcase\nimport { SWRConfig, unstable_serialize } from 'swr'\nimport { GetStaticPaths, GetStaticProps, InferGetStaticPropsType } from 'next'\nimport { NextSeo } from 'next-seo'\nimport { getProposal } from 'state/voting/helpers'\nimport { ProposalState } from 'state/types'\nimport Overview from 'views/Voting/Proposal/Overview'\n\nconst ProposalPage = ({ fallback = {} }: InferGetStaticPropsType<typeof getStaticProps>) => {\n  return (\n    <SWRConfig\n      value={{\n        fallback,\n      }}\n    >\n      <Overview />\n    </SWRConfig>\n  )\n}\n\nexport const getStaticPaths: GetStaticPaths = () => {\n  return {\n    fallback: true,\n    paths: [],\n  }\n}\n\nProposalPage.Meta = (props: InferGetStaticPropsType<typeof getStaticProps>) => {\n  if (props.id && props.fallback[unstable_serialize(['proposal', props.id])]) {\n    const proposal = props.fallback[unstable_serialize(['proposal', props.id])]\n    return (\n      <NextSeo\n        openGraph={{\n          description: proposal.title,\n        }}\n      />\n    )\n  }\n  return null\n}\n\nexport const getStaticProps = (async ({ params }) => {\n  const { id } = params\n  if (typeof id !== 'string') {\n    return {\n      notFound: true,\n    }\n  }\n\n  try {\n    const fetchedProposal = await getProposal(id)\n    if (!fetchedProposal) {\n      return {\n        notFound: true,\n        revalidate: 1,\n      }\n    }\n    return {\n      props: {\n        fallback: {\n          [unstable_serialize(['proposal', id])]: fetchedProposal,\n        },\n        id,\n      },\n      revalidate:\n        fetchedProposal.state === ProposalState.CLOSED\n          ? 60 * 60 * 12 // 12 hour\n          : 3,\n    }\n  } catch (error) {\n    return {\n      props: {\n        fallback: {},\n        id,\n      },\n      revalidate: 60,\n    }\n  }\n}) satisfies GetStaticProps\n\nexport default ProposalPage\n","/* eslint-disable no-await-in-loop */\n/* eslint-disable no-restricted-syntax */\nimport { SNAPSHOT_API } from 'config/constants/endpoints'\nimport request, { gql } from 'graphql-request'\nimport { Proposal, ProposalState, Vote, VoteWhere } from 'state/types'\n\nexport const getProposals = async (first = 5, skip = 0, state = ProposalState.ACTIVE): Promise<Proposal[]> => {\n  const response: { proposals: Proposal[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposals($first: Int!, $skip: Int!, $state: String!, $orderDirection: OrderDirection) {\n        proposals(\n          first: $first\n          skip: $skip\n          orderBy: \"end\"\n          orderDirection: $orderDirection\n          where: { space_in: \"cakevote.eth\", state: $state }\n        ) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n        }\n      }\n    `,\n    { first, skip, state, orderDirection: state === ProposalState.CLOSED ? 'desc' : 'asc' },\n  )\n  return response.proposals\n}\n\nexport const getProposal = async (id: string): Promise<Proposal> => {\n  const response: { proposal: Proposal } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposal($id: String) {\n        proposal(id: $id) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          votes\n        }\n      }\n    `,\n    { id },\n  )\n  return response.proposal\n}\n\nexport const getVotes = async (first: number, skip: number, where: VoteWhere): Promise<Vote[]> => {\n  const response: { votes: Vote[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getVotes($first: Int, $skip: Int, $where: VoteWhere) {\n        votes(first: $first, skip: $skip, where: $where) {\n          id\n          voter\n          created\n          choice\n          proposal {\n            choices\n          }\n          vp\n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.votes\n}\n\n// TODO: lazy get all votes when user click load more\nexport const getAllVotes = async (proposal: Proposal, votesPerChunk = 1000): Promise<Vote[]> => {\n  const voters = await new Promise<Vote[]>((resolve, reject) => {\n    let votes: Vote[] = []\n\n    const fetchVoteChunk = async (newSkip: number) => {\n      try {\n        const voteChunk = await getVotes(votesPerChunk, newSkip, { proposal: proposal.id })\n\n        if (voteChunk.length === 0) {\n          resolve(votes)\n        } else {\n          votes = [...votes, ...voteChunk]\n          fetchVoteChunk(newSkip + votesPerChunk)\n        }\n      } catch (error) {\n        reject(error)\n      }\n    }\n\n    fetchVoteChunk(0)\n  })\n\n  return voters.map((v) => ({\n    ...v,\n    metadata: {\n      votingPower: String(v.vp) || '0',\n    },\n  }))\n}\n","import { TagProps, Farm as FarmUI } from '@pancakeswap/uikit'\nimport { ProposalState } from 'state/types'\n\nconst { ClosedTag, CommunityTag, CoreTag, SoonTag, VoteNowTag } = FarmUI.Tags\n\ninterface ProposalStateTagProps extends TagProps {\n  proposalState: ProposalState\n}\n\nexport const ProposalStateTag: React.FC<React.PropsWithChildren<ProposalStateTagProps>> = ({\n  proposalState,\n  ...props\n}) => {\n  if (proposalState === ProposalState.ACTIVE) {\n    return <VoteNowTag {...props} />\n  }\n\n  if (proposalState === ProposalState.PENDING) {\n    return <SoonTag {...props} />\n  }\n\n  return <ClosedTag {...props} />\n}\n\ninterface ProposalTypeTagProps extends TagProps {\n  isCoreProposal: boolean\n}\n\nexport const ProposalTypeTag: React.FC<React.PropsWithChildren<ProposalTypeTagProps>> = ({\n  isCoreProposal,\n  ...props\n}) => {\n  if (isCoreProposal) {\n    return <CoreTag {...props} />\n  }\n\n  return <CommunityTag {...props} />\n}\n","import { Text, TextProps } from \"@pancakeswap/uikit\";\nimport { useMemo } from \"react\";\nimport CountUp from \"react-countup\";\n\ninterface BalanceProps extends TextProps {\n  value: number;\n  decimals?: number;\n  unit?: string;\n  isDisabled?: boolean;\n  prefix?: string;\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void;\n}\n\nconst Balance: React.FC<React.PropsWithChildren<BalanceProps>> = ({\n  value,\n  color = \"text\",\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const prefixProp = useMemo(() => (prefix ? { prefix } : {}), [prefix]);\n  const suffixProp = useMemo(() => (unit ? { suffix: unit } : {}), [unit]);\n\n  return (\n    <CountUp\n      start={0}\n      preserveValue\n      delay={0}\n      end={value}\n      {...prefixProp}\n      {...suffixProp}\n      decimals={decimals}\n      duration={1}\n      separator=\",\"\n    >\n      {({ countUpRef }) => (\n        <Text color={isDisabled ? \"textDisabled\" : color} onClick={onClick} {...props}>\n          <span ref={countUpRef} />\n        </Text>\n      )}\n    </CountUp>\n  );\n};\n\nexport default Balance;\n","import styled from \"styled-components\";\nimport { NextSeo } from \"next-seo\";\nimport { Button, Heading, Text, LogoIcon } from \"@pancakeswap/uikit\";\nimport { useTranslation } from \"@pancakeswap/localization\";\nimport Link from \"next/link\";\n\nconst StyledNotFound = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - 64px);\n  justify-content: center;\n`;\n\nconst NotFound = ({ statusCode = 404 }: { statusCode?: number }) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <NextSeo title=\"404\" />\n      <StyledNotFound>\n        <LogoIcon width=\"64px\" mb=\"8px\" />\n        <Heading scale=\"xxl\">{statusCode}</Heading>\n        <Text mb=\"16px\">{t(\"Oops, page not found.\")}</Text>\n        <Link href=\"/\" passHref>\n          <Button as=\"a\" scale=\"sm\">\n            {t(\"Back Home\")}\n          </Button>\n        </Link>\n      </StyledNotFound>\n    </>\n  );\n};\n\nexport default NotFound;\n","import styled from \"styled-components\";\n\nconst ProgressBunnyWrapper = styled.div`\n  display: flex;\n  z-index: 2;\n  top: -65%;\n  position: absolute;\n  transform: translate(-50%, -50%);\n  transition: left 200ms ease-out;\n`;\n\nexport default ProgressBunnyWrapper;\n","import React from \"react\";\nimport StyledProgress, { Bar } from \"./StyledProgress\";\nimport ProgressBunnyWrapper from \"./ProgressBunnyWrapper\";\nimport { ProgressBunny } from \"../Svg\";\nimport { ProgressProps, variants, scales } from \"./types\";\n\nconst stepGuard = (step: number) => {\n  if (step < 0) {\n    return 0;\n  }\n\n  if (step > 100) {\n    return 100;\n  }\n\n  return step;\n};\n\nconst Progress: React.FC<React.PropsWithChildren<ProgressProps>> = ({\n  variant = variants.ROUND,\n  scale = scales.MD,\n  primaryStep = 0,\n  secondaryStep = null,\n  showProgressBunny = false,\n  useDark = true,\n  children,\n}) => {\n  return (\n    <StyledProgress $useDark={useDark} variant={variant} scale={scale}>\n      {children || (\n        <>\n          {showProgressBunny && (\n            <ProgressBunnyWrapper style={{ left: `${stepGuard(primaryStep)}%` }}>\n              <ProgressBunny />\n            </ProgressBunnyWrapper>\n          )}\n          <Bar $useDark={useDark} primary style={{ width: `${stepGuard(primaryStep)}%` }} />\n          {secondaryStep ? <Bar $useDark={useDark} style={{ width: `${stepGuard(secondaryStep)}%` }} /> : null}\n        </>\n      )}\n    </StyledProgress>\n  );\n};\n\nexport default Progress;\n","import { variants, scales } from \"./types\";\n\nexport const styleVariants = {\n  [variants.ROUND]: {\n    borderRadius: \"32px\",\n  },\n  [variants.FLAT]: {\n    borderRadius: 0,\n  },\n};\n\nexport const styleScales = {\n  [scales.MD]: {\n    height: \"16px\",\n  },\n  [scales.SM]: {\n    height: \"8px\",\n  },\n};\n\nexport default styleVariants;\n","import styled from \"styled-components\";\nimport { space, variant as StyledSystemVariant } from \"styled-system\";\nimport { lightColors } from \"../../theme\";\nimport { styleVariants, styleScales } from \"./themes\";\nimport { ProgressProps, variants } from \"./types\";\n\ninterface ProgressBarProps {\n  primary?: boolean;\n  $useDark: boolean;\n  $background?: string;\n}\n\nexport const Bar = styled.div<ProgressBarProps>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  background: ${({ theme, $useDark, primary, $background }) => {\n    if ($background) return $background;\n    if ($useDark) return primary ? theme.colors.secondary : `${theme.colors.secondary80}`;\n    return primary ? lightColors.secondary : `${lightColors.secondary80}`;\n  }};\n  height: 100%;\n  transition: width 200ms ease;\n`;\n\nBar.defaultProps = {\n  primary: false,\n};\n\ninterface StyledProgressProps {\n  variant: ProgressProps[\"variant\"];\n  scale: ProgressProps[\"scale\"];\n  $useDark: boolean;\n}\n\nconst StyledProgress = styled.div<StyledProgressProps>`\n  position: relative;\n  background-color: ${({ theme, $useDark }) => ($useDark ? theme.colors.input : lightColors.input)};\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  overflow: hidden;\n\n  ${Bar} {\n    border-top-left-radius: ${({ variant }) => (variant === variants.FLAT ? \"0\" : \"32px\")};\n    border-bottom-left-radius: ${({ variant }) => (variant === variants.FLAT ? \"0\" : \"32px\")};\n  }\n\n  ${StyledSystemVariant({\n    variants: styleVariants,\n  })}\n  ${StyledSystemVariant({\n    prop: \"scale\",\n    variants: styleScales,\n  })}\n  ${space}\n`;\n\nexport default StyledProgress;\n","export const variants = {\n  ROUND: \"round\",\n  FLAT: \"flat\",\n} as const;\n\nexport const scales = {\n  MD: \"md\",\n  SM: \"sm\",\n} as const;\n\nexport type Scale = (typeof scales)[keyof typeof scales];\n\nexport type Variant = (typeof variants)[keyof typeof variants];\n\nexport interface ProgressProps {\n  variant?: Variant;\n  scale?: Scale;\n  primaryStep?: number;\n  secondaryStep?: number;\n  showProgressBunny?: boolean;\n  useDark?: boolean;\n}\n","import { SpaceProps } from \"styled-system\";\n\nexport type RadioTheme = {\n  handleBackground: string;\n};\n\nexport const scales = {\n  SM: \"sm\",\n  MD: \"md\",\n} as const;\n\nexport type Scales = (typeof scales)[keyof typeof scales];\n\nexport interface RadioProps extends SpaceProps {\n  scale?: Scales;\n}\n","import styled from \"styled-components\";\nimport { space } from \"styled-system\";\nimport { RadioProps, scales } from \"./types\";\n\nconst getScale = ({ scale }: RadioProps) => {\n  switch (scale) {\n    case scales.SM:\n      return \"24px\";\n    case scales.MD:\n    default:\n      return \"32px\";\n  }\n};\n\nconst getCheckedScale = ({ scale }: RadioProps) => {\n  switch (scale) {\n    case scales.SM:\n      return \"12px\";\n    case scales.MD:\n    default:\n      return \"20px\";\n  }\n};\n\nconst Radio = styled.input.attrs({ type: \"radio\" })<RadioProps>`\n  appearance: none;\n  overflow: hidden;\n  cursor: pointer;\n  position: relative;\n  display: inline-block;\n  height: ${getScale};\n  width: ${getScale};\n  vertical-align: middle;\n  transition: background-color 0.2s ease-in-out;\n  border: 0;\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.colors.input};\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n\n  &:after {\n    border-radius: 50%;\n    content: \"\";\n    height: ${getCheckedScale};\n    left: 6px;\n    position: absolute;\n    top: 6px;\n    width: ${getCheckedScale};\n  }\n\n  &:hover:not(:disabled):not(:checked) {\n    box-shadow: ${({ theme }) => theme.shadows.focus};\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: ${({ theme }) => theme.shadows.focus};\n  }\n\n  &:checked {\n    background-color: ${({ theme }) => theme.colors.success};\n    &:after {\n      background-color: ${({ theme }) => theme.radio.handleBackground};\n    }\n  }\n\n  &:disabled {\n    cursor: default;\n    opacity: 0.6;\n  }\n  ${space}\n`;\n\nRadio.defaultProps = {\n  scale: scales.MD,\n  m: 0,\n};\n\nexport default Radio;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<React.PropsWithChildren<SvgProps>> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 34 38\" {...props}>\n      <rect x=\"8.83594\" width=\"5.30132\" height=\"17.3191\" rx=\"2.65066\" fill=\"#D1884F\" />\n      <rect x=\"19.4385\" width=\"5.30132\" height=\"17.3191\" rx=\"2.65066\" fill=\"#D1884F\" />\n      <path\n        d=\"M8.5 13.0084C13.1944 8.40751 20.8056 8.40751 25.5 13.0084C30.1944 17.6093 30.1944 25.0689 25.5 29.6698L17.6538 37.3597C17.2927 37.7136 16.7073 37.7136 16.3462 37.3597L8.5 29.6698C3.80558 25.0689 3.80558 17.6093 8.5 13.0084Z\"\n        fill=\"#D1884F\"\n      />\n      <ellipse cx=\"12.3696\" cy=\"19.9172\" rx=\"1.76711\" ry=\"2.59786\" fill=\"white\" />\n      <ellipse cx=\"21.2056\" cy=\"19.9172\" rx=\"1.76711\" ry=\"2.59786\" fill=\"white\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<React.PropsWithChildren<SvgProps>> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 25\" {...props}>\n      <path d=\"M16 17.01V11C16 10.45 15.55 10 15 10C14.45 10 14 10.45 14 11V17.01H12.21C11.76 17.01 11.54 17.55 11.86 17.86L14.65 20.64C14.85 20.83 15.16 20.83 15.36 20.64L18.15 17.86C18.47 17.55 18.24 17.01 17.8 17.01H16ZM8.65003 3.35002L5.86003 6.14002C5.54003 6.45002 5.76003 6.99002 6.21003 6.99002H8.00003V13C8.00003 13.55 8.45003 14 9.00003 14C9.55003 14 10 13.55 10 13V6.99002H11.79C12.24 6.99002 12.46 6.45002 12.14 6.14002L9.35003 3.35002C9.16003 3.16002 8.84003 3.16002 8.65003 3.35002Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n"],"names":["baseTimes","__webpack_require__","castFunction","toInteger","nativeMin","Math","min","module","exports","n","iteratee","index","length","result","window","__NEXT_P","push","Wrapper","styled","Page","__webpack_exports__","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","jsx","Spinner","ConfirmVoteView","DetailBox","Box","param","theme","colors","background","cardBorder","Proposal_Details","proposal","t","useTranslation","startDate","Date","start","endDate","end","jsx_runtime","jsxs","Card","mb","CardHeader","Heading","as","scale","CardBody","Flex","alignItems","Text","color","LinkExternal","href","IPFS_GATEWAY","concat","id","ml","slice","isBscScan","getBlockExploreLink","author","truncateHash","snapshot","p","ProposalStateTag","proposalState","state","fontSize","format","TextEllipsis","Proposal_Results","choices","votes","votesLoadingStatus","results","calculateVoteResults","address","useAccount","totalVotes","getTotalFromVotes","FetchStatus","map","choice","choiceVotes","totalChoiceVote","progress","hasVoted","some","vote","account","voter","toLowerCase","mt","title","Tag","variant","outline","CheckmarkCircleIcon","mr","Progress","primaryStep","justifyContent","total","formatNumber","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","Skeleton","height","CastVoteModal_MainView","isPending","isLoading","isError","onConfirm","onViewDetails","onDismiss","disabled","lockedCakeBalance","lockedEndTime","blockTimestamp","useCurrentBlockTimestamp","hasLockedCake","isBoostingExpired","useMemo","BigNumber","toString","gte","hasBoosted","Fragment","ModalInner","textTransform","bold","label","Message","VotingBoxBorder","onClick","style","cursor","VotingBoxCardInner","flexDirection","RocketIcon","width","IconButton","ChevronRightIcon","Button","endIcon","AutoRenewIcon","spin","MAIN","DETAILS","client","components_CastVoteModal","_obj","onSuccess","proposalId","block","useState","view","setView","setIsPending","library","useWeb3LibraryContext","toastError","useToast","useTheme","useGetVotingPower","cakeBalance","cakeVaultBalance","cakePoolBalance","poolsBalance","cakeBnbLpBalance","ifoPoolBalance","isStartView","handleBack","_define_property","Z","handleDismiss","handleConfirmVote","_async_to_generator","error","_error_message","space","PANCAKE_SPACE","value","reason","type","app","_state","sent","message","console","Modal","onBack","hideCloseButton","headerBackground","gradientCardHeader","MainView","DetailsView","Choice","isChecked","isDisabled","ChoiceText","Proposal_Vote","_param","props","setVote","toastSuccess","handleSuccess","presentCastVoteModal","useModal","CastVoteModal","Number","div","flexShrink","Radio","checked","onChange","ConnectWalletButton","Row","StyledSkeleton","Proposal_VotesLoading","times","AddressColumn","attrs","withConfig","ChoiceColumn","VotingPowerColumn","Grid","mediaQueries","sm","Proposal_VoteRow","isVoter","hasVotingPower","metadata","votingPower","parseFloat","parseVotePower","incomingVote","Proposal_Votes","showAll","setShowAll","isMobile","useMatchBreakpoints","orderedVotes","orderBy","displayVotes","isFetched","count","VotesLoading","VoteRow","py","px","ChevronUpIcon","ChevronDownIcon","Proposal_Overview","useRouter","query","isFallback","useSWRImmutable","getProposal","status","data","getAllVotes","mutate","hasAccountVoted","isPageLoading","proposalLoadingStatus","NotFound","PageLoader","Container","Link","passHref","startIcon","ArrowBackIcon","Layout","ProposalTypeTag","isCoreProposal","ReactMarkdown","body","ProposalState","Vote","refetch","Votes","position","top","Details","Results","ProposalPage","fallback","SWRConfig","_param_fallback","Overview","Meta","unstable_serialize","NextSeo","openGraph","description","_id_","getProposals","_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_4__","first","skip","request","SNAPSHOT_API","gql","orderDirection","response","proposals","getVotes","where","votesPerChunk","Promise","resolve","reject","fetchVoteChunk","newSkip","voteChunk","_swc_helpers_src_to_consumable_array_mjs__WEBPACK_IMPORTED_MODULE_6__","voters","v","_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_7__","_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_8__","String","vp","FarmUI","ClosedTag","CommunityTag","CoreTag","SoonTag","VoteNowTag","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","_param_color","_param_decimals","decimals","_param_isDisabled","unit","prefix","prefixProp","suffixProp","suffix","CountUp","preserveValue","delay","duration","separator","countUpRef","span","ref","StyledNotFound","statusCode","LogoIcon","_param_statusCode","ProgressBunnyWrapper","stepGuard","step","Progress_Progress","variants","_param_variant","_param_scale","scales","_param_primaryStep","_param_secondaryStep","secondaryStep","_param_showProgressBunny","showProgressBunny","_param_useDark","useDark","children","StyledProgress","$useDark","left","ProgressBunny","Bar","primary","_obj1","styleVariants","borderRadius","styleScales","$background","secondary","secondary80","lightColors","defaultProps","Progress_StyledProgress","input","shadows","inset","StyledSystemVariant","prop","ROUND","FLAT","MD","SM","getScale","getCheckedScale","focus","success","radio","handleBackground","m","Radio_Radio","Svg","viewBox","rect","x","rx","fill","path","d","ellipse","cx","cy","ry"],"sourceRoot":""}