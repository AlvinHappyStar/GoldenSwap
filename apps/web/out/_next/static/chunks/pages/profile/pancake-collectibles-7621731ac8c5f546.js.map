{"version":3,"file":"static/chunks/pages/profile/pancake-collectibles-7621731ac8c5f546.js","mappings":"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","sources":["webpack://_N_E/?df96","webpack://_N_E/./src/components/Loader/PageLoader.tsx","webpack://_N_E/./src/views/Profile/components/PancakeCollectibles.tsx","webpack://_N_E/./src/views/Profile/components/PancakeCollectiblesPageRouter.tsx","webpack://_N_E/./src/pages/profile/pancake-collectibles.tsx","webpack://_N_E/../../packages/uikit/src/components/Layouts/Container.tsx","webpack://_N_E/../../packages/uikit/src/components/PageHeader/PageHeader.tsx","webpack://_N_E/../../packages/uikit/src/components/Spinner/Spinner.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/profile/pancake-collectibles\",\n      function () {\n        return require(\"private-next-pages/profile/pancake-collectibles.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/profile/pancake-collectibles\"])\n      });\n    }\n  ","import styled from 'styled-components'\nimport { Spinner } from '@pancakeswap/uikit'\nimport Page from '../Layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC<React.PropsWithChildren<unknown>> = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import { Grid, Heading, PageHeader } from '@pancakeswap/uikit'\nimport useSWR from 'swr'\nimport dynamic from 'next/dynamic'\nimport { FetchStatus } from 'config/constants/types'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { Collection } from 'state/nftMarket/types'\nimport Page from 'components/Layout/Page'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\nimport PageLoader from 'components/Loader/PageLoader'\n\nconst CollectionCardWithVolume = dynamic(\n  () => import('../../Nft/market/components/CollectibleCard/CollectionCardWithVolume'),\n  { ssr: false },\n)\n\nconst PancakeCollectibles = () => {\n  const { t } = useTranslation()\n  const { data: collections, status } = useSWR<Collection[]>(['pancakeCollectibles'])\n\n  return (\n    <>\n      <PageHeader>\n        <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" data-test=\"nft-collections-title\">\n          {t('Pancake Collectibles')}\n        </Heading>\n      </PageHeader>\n      <Page>\n        {status !== FetchStatus.Fetched ? (\n          <PageLoader />\n        ) : (\n          <>\n            <Grid\n              gridGap=\"16px\"\n              gridTemplateColumns={['1fr', '1fr', 'repeat(2, 1fr)', 'repeat(3, 1fr)']}\n              mb=\"32px\"\n              data-test=\"nft-collection-row\"\n            >\n              {collections.map((collection) => {\n                return (\n                  <CollectionCardWithVolume\n                    key={collection.address}\n                    bgSrc={collection.banner.small}\n                    avatarSrc={collection.avatar}\n                    collectionName={collection.name}\n                    url={`${nftsBaseUrl}/collections/${collection.address}`}\n                    volume={collection.totalVolumeBNB ? parseFloat(collection.totalVolumeBNB) : 0}\n                  />\n                )\n              })}\n            </Grid>\n          </>\n        )}\n      </Page>\n    </>\n  )\n}\n\nexport default PancakeCollectibles\n","import { useRouter } from 'next/router'\nimport PageLoader from 'components/Loader/PageLoader'\nimport PancakeCollectibles from './PancakeCollectibles'\n\nconst PancakeCollectiblesPageRouter = () => {\n  const router = useRouter()\n\n  if (router.isFallback) {\n    return <PageLoader />\n  }\n\n  return <PancakeCollectibles />\n}\n\nexport default PancakeCollectiblesPageRouter\n","import { GetStaticProps, InferGetStaticPropsType } from 'next'\n// eslint-disable-next-line camelcase\nimport { unstable_serialize, SWRConfig } from 'swr'\nimport { getCollections } from 'state/nftMarket/helpers'\nimport multicall from 'utils/multicall'\nimport PancakeCollectiblesPageRouter from 'views/Profile/components/PancakeCollectiblesPageRouter'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getProfileContract } from 'utils/contractHelpers'\n\nconst PancakeCollectiblesPage = ({ fallback = {} }: InferGetStaticPropsType<typeof getStaticProps>) => {\n  return (\n    <SWRConfig\n      value={{\n        fallback,\n      }}\n    >\n      <PancakeCollectiblesPageRouter />\n    </SWRConfig>\n  )\n}\n\nexport const getStaticProps: GetStaticProps = async () => {\n  const fetchedCollections = await getCollections()\n  if (!fetchedCollections || !Object.keys(fetchedCollections).length) {\n    return {\n      props: {\n        fallback: {},\n      },\n      revalidate: 60,\n    }\n  }\n\n  try {\n    const profileContract = getProfileContract(null)\n    const nftRole = await profileContract.NFT_ROLE()\n    const collectionsNftRoleCalls = Object.keys(fetchedCollections).map((collectionAddress) => {\n      return {\n        address: profileContract.address,\n        name: 'hasRole',\n        params: [nftRole, collectionAddress],\n      }\n    })\n    const collectionRolesRaw = await multicall(profileABI, collectionsNftRoleCalls)\n    const collectionRoles = collectionRolesRaw.flat()\n\n    const pancakeCollectibles = Object.values(fetchedCollections).filter((collection, index) => {\n      return collectionRoles[index]\n    })\n\n    return {\n      props: {\n        fallback: {\n          [unstable_serialize(['pancakeCollectibles'])]: pancakeCollectibles,\n        },\n      },\n      revalidate: 60 * 60 * 12, // 12 hours\n    }\n  } catch (error) {\n    return {\n      props: {\n        fallback: {},\n      },\n      revalidate: 60,\n    }\n  }\n}\n\nexport default PancakeCollectiblesPage\n","import { Box, BoxProps } from \"../Box\";\n\nconst Container: React.FC<React.PropsWithChildren<BoxProps>> = ({ children, ...props }) => (\n  <Box px={[\"16px\", \"24px\"]} mx=\"auto\" maxWidth=\"1200px\" {...props}>\n    {children}\n  </Box>\n);\n\nexport default Container;\n","import styled from \"styled-components\";\nimport { Box } from \"../Box\";\nimport Container from \"../Layouts/Container\";\nimport { PageHeaderProps } from \"./types\";\n\nconst Outer = styled(Box)<{ background?: string }>`\n  background: ${({ theme, background }) => background || theme.colors.gradientBubblegum};\n`;\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n  position: relative;\n`;\n\nconst PageHeader: React.FC<React.PropsWithChildren<PageHeaderProps>> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n);\n\nexport default PageHeader;\n","import React from \"react\";\nimport { Image, Box } from \"@pancakeswap/uikit\";\nimport { SpinnerProps } from \"./types\";\n\nconst Spinner: React.FC<React.PropsWithChildren<SpinnerProps>> = ({ size = 128 }) => {\n  return (\n    <Box width={size} height={size * 1.197} position=\"relative\">\n      <Image\n        width={size}\n        height={size * 1.197}\n        src=\"https://assets.pancakeswap.finance/web/pancake-3d-spinner-v2.gif\"\n        alt=\"pancake-3d-spinner\"\n      />\n    </Box>\n  );\n};\n\nexport default Spinner;\n"],"names":["window","__NEXT_P","push","__webpack_require__","Wrapper","styled","Page","__webpack_exports__","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","jsx","Spinner","CollectionCardWithVolume","dynamic","Promise","all","e","then","bind","ssr","components_PancakeCollectibles","t","useTranslation","useSWR","data","status","jsx_runtime","jsxs","Fragment","PageHeader","Heading","as","scale","color","data-test","FetchStatus","PageLoader","Grid","gridGap","gridTemplateColumns","mb","collections","map","collection","bgSrc","banner","small","avatarSrc","avatar","collectionName","name","url","nftsBaseUrl","concat","address","volume","totalVolumeBNB","parseFloat","components_PancakeCollectiblesPageRouter","useRouter","isFallback","PancakeCollectibles","pancake_collectibles","param","fallback","SWRConfig","value","_param_fallback","PancakeCollectiblesPageRouter","_param","children","props","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","Box","px","mx","maxWidth","Outer","theme","background","colors","gradientBubblegum","Inner","Container","size","_param_size","width","height","position","Image","src","alt"],"sourceRoot":""}