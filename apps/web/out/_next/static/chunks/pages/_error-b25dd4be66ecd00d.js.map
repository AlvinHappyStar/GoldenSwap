{"version":3,"file":"static/chunks/pages/_error-b25dd4be66ecd00d.js","mappings":"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","sources":["webpack://_N_E/?cf31","webpack://_N_E/../../node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js","webpack://_N_E/../../node_modules/@sentry/utils/esm/requestdata.js","webpack://_N_E/../../node_modules/@sentry/nextjs/esm/utils/_error.js","webpack://_N_E/./src/pages/_error.tsx","webpack://_N_E/../../packages/uikit/src/components/NotFound/NotFound.tsx","webpack://_N_E/../../node_modules/next/error.js","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/_error\",\n      function () {\n        return require(\"private-next-pages/_error.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/_error\"])\n      });\n    }\n  ","/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n * See https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The value of the expression\n */\nfunction _optionalChain(ops) {\n  let lastAccessLHS = undefined;\n  let value = ops[0];\n  let i = 1;\n  while (i < ops.length) {\n    var op = ops[i] ;\n    var fn = ops[i + 1] ;\n    i += 2;\n    // by checking for loose equality to `null`, we catch both `null` and `undefined`\n    if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n      // really we're meaning to return `undefined` as an actual value here, but it saves bytes not to write it\n      return;\n    }\n    if (op === 'access' || op === 'optionalAccess') {\n      lastAccessLHS = value;\n      value = fn(value);\n    } else if (op === 'call' || op === 'optionalCall') {\n      value = fn((...args) => (value ).call(lastAccessLHS, ...args));\n      lastAccessLHS = undefined;\n    }\n  }\n  return value;\n}\n\n// Sucrase version\n// function _optionalChain(ops) {\n//   let lastAccessLHS = undefined;\n//   let value = ops[0];\n//   let i = 1;\n//   while (i < ops.length) {\n//     var op = ops[i];\n//     var fn = ops[i + 1];\n//     i += 2;\n//     if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n//       return undefined;\n//     }\n//     if (op === 'access' || op === 'optionalAccess') {\n//       lastAccessLHS = value;\n//       value = fn(value);\n//     } else if (op === 'call' || op === 'optionalCall') {\n//       value = fn((...args) => value.call(lastAccessLHS, ...args));\n//       lastAccessLHS = undefined;\n//     }\n//   }\n//   return value;\n// }\n\nexport { _optionalChain };\n//# sourceMappingURL=_optionalChain.js.map\n","import { _optionalChain } from './buildPolyfills';\nimport { isString, isPlainObject } from './is.js';\nimport { normalize } from './normalize.js';\nimport { stripUrlQueryAndFragment } from './url.js';\n\nvar DEFAULT_INCLUDES = {\n  ip: false,\n  request: true,\n  transaction: true,\n  user: true,\n};\nvar DEFAULT_REQUEST_INCLUDES = ['cookies', 'data', 'headers', 'method', 'query_string', 'url'];\nvar DEFAULT_USER_INCLUDES = ['id', 'username', 'email'];\n\n/**\n * Sets parameterized route as transaction name e.g.: `GET /users/:id`\n * Also adds more context data on the transaction from the request\n */\nfunction addRequestDataToTransaction(\n  transaction,\n  req,\n  deps,\n) {\n  if (!transaction) return;\n  if (!transaction.metadata.source || transaction.metadata.source === 'url') {\n    // Attempt to grab a parameterized route off of the request\n    transaction.setName(...extractPathForTransaction(req, { path: true, method: true }));\n  }\n  transaction.setData('url', req.originalUrl || req.url);\n  if (req.baseUrl) {\n    transaction.setData('baseUrl', req.baseUrl);\n  }\n  transaction.setData('query', extractQueryParams(req, deps));\n}\n\n/**\n * Extracts a complete and parameterized path from the request object and uses it to construct transaction name.\n * If the parameterized transaction name cannot be extracted, we fall back to the raw URL.\n *\n * Additionally, this function determines and returns the transaction name source\n *\n * eg. GET /mountpoint/user/:id\n *\n * @param req A request object\n * @param options What to include in the transaction name (method, path, or a custom route name to be\n *                used instead of the request's route)\n *\n * @returns A tuple of the fully constructed transaction name [0] and its source [1] (can be either 'route' or 'url')\n */\nfunction extractPathForTransaction(\n  req,\n  options = {},\n) {\n  var method = req.method && req.method.toUpperCase();\n\n  let path = '';\n  let source = 'url';\n\n  // Check to see if there's a parameterized route we can use (as there is in Express)\n  if (options.customRoute || req.route) {\n    path = options.customRoute || `${req.baseUrl || ''}${req.route && req.route.path}`;\n    source = 'route';\n  }\n\n  // Otherwise, just take the original URL\n  else if (req.originalUrl || req.url) {\n    path = stripUrlQueryAndFragment(req.originalUrl || req.url || '');\n  }\n\n  let name = '';\n  if (options.method && method) {\n    name += method;\n  }\n  if (options.method && options.path) {\n    name += ' ';\n  }\n  if (options.path && path) {\n    name += path;\n  }\n\n  return [name, source];\n}\n\n/** JSDoc */\nfunction extractTransaction(req, type) {\n  switch (type) {\n    case 'path': {\n      return extractPathForTransaction(req, { path: true })[0];\n    }\n    case 'handler': {\n      return (req.route && req.route.stack && req.route.stack[0] && req.route.stack[0].name) || '<anonymous>';\n    }\n    case 'methodPath':\n    default: {\n      return extractPathForTransaction(req, { path: true, method: true })[0];\n    }\n  }\n}\n\n/** JSDoc */\nfunction extractUserData(\n  user\n\n,\n  keys,\n) {\n  var extractedUser = {};\n  var attributes = Array.isArray(keys) ? keys : DEFAULT_USER_INCLUDES;\n\n  attributes.forEach(key => {\n    if (user && key in user) {\n      extractedUser[key] = user[key];\n    }\n  });\n\n  return extractedUser;\n}\n\n/**\n * Normalize data from the request object, accounting for framework differences.\n *\n * @param req The request object from which to extract data\n * @param options.include An optional array of keys to include in the normalized data. Defaults to\n * DEFAULT_REQUEST_INCLUDES if not provided.\n * @param options.deps Injected, platform-specific dependencies\n * @returns An object containing normalized request data\n */\nfunction extractRequestData(\n  req,\n  options\n\n,\n) {\n  const { include = DEFAULT_REQUEST_INCLUDES, deps } = options || {};\n  var requestData = {};\n\n  // headers:\n  //   node, express, koa, nextjs: req.headers\n  var headers = (req.headers || {}) \n\n;\n  // method:\n  //   node, express, koa, nextjs: req.method\n  var method = req.method;\n  // host:\n  //   express: req.hostname in > 4 and req.host in < 4\n  //   koa: req.host\n  //   node, nextjs: req.headers.host\n  var host = req.hostname || req.host || headers.host || '<no host>';\n  // protocol:\n  //   node, nextjs: <n/a>\n  //   express, koa: req.protocol\n  var protocol = req.protocol === 'https' || (req.socket && req.socket.encrypted) ? 'https' : 'http';\n  // url (including path and query string):\n  //   node, express: req.originalUrl\n  //   koa, nextjs: req.url\n  var originalUrl = req.originalUrl || req.url || '';\n  // absolute url\n  var absoluteUrl = `${protocol}://${host}${originalUrl}`;\n  include.forEach(key => {\n    switch (key) {\n      case 'headers': {\n        requestData.headers = headers;\n        break;\n      }\n      case 'method': {\n        requestData.method = method;\n        break;\n      }\n      case 'url': {\n        requestData.url = absoluteUrl;\n        break;\n      }\n      case 'cookies': {\n        // cookies:\n        //   node, express, koa: req.headers.cookie\n        //   vercel, sails.js, express (w/ cookie middleware), nextjs: req.cookies\n                requestData.cookies =\n          // TODO (v8 / #5257): We're only sending the empty object for backwards compatibility, so the last bit can\n          // come off in v8\n          req.cookies || (headers.cookie && deps && deps.cookie && deps.cookie.parse(headers.cookie)) || {};\n        break;\n      }\n      case 'query_string': {\n        // query string:\n        //   node: req.url (raw)\n        //   express, koa, nextjs: req.query\n                requestData.query_string = extractQueryParams(req, deps);\n        break;\n      }\n      case 'data': {\n        if (method === 'GET' || method === 'HEAD') {\n          break;\n        }\n        // body data:\n        //   express, koa, nextjs: req.body\n        //\n        //   when using node by itself, you have to read the incoming stream(see\n        //   https://nodejs.dev/learn/get-http-request-body-data-using-nodejs); if a user is doing that, we can't know\n        //   where they're going to store the final result, so they'll have to capture this data themselves\n        if (req.body !== undefined) {\n          requestData.data = isString(req.body) ? req.body : JSON.stringify(normalize(req.body));\n        }\n        break;\n      }\n      default: {\n        if ({}.hasOwnProperty.call(req, key)) {\n          requestData[key] = (req )[key];\n        }\n      }\n    }\n  });\n\n  return requestData;\n}\n\n/**\n * Options deciding what parts of the request to use when enhancing an event\n */\n\n/**\n * Add data from the given request to the given event\n *\n * @param event The event to which the request data will be added\n * @param req Request object\n * @param options.include Flags to control what data is included\n * @param options.deps Injected platform-specific dependencies\n * @hidden\n */\nfunction addRequestDataToEvent(\n  event,\n  req,\n  options,\n) {\n  var include = {\n    ...DEFAULT_INCLUDES,\n    ..._optionalChain([options, 'optionalAccess', _ => _.include]),\n  };\n\n  if (include.request) {\n    var extractedRequestData = Array.isArray(include.request)\n      ? extractRequestData(req, { include: include.request, deps: _optionalChain([options, 'optionalAccess', _2 => _2.deps]) })\n      : extractRequestData(req, { deps: _optionalChain([options, 'optionalAccess', _3 => _3.deps]) });\n\n    event.request = {\n      ...event.request,\n      ...extractedRequestData,\n    };\n  }\n\n  if (include.user) {\n    var extractedUser = req.user && isPlainObject(req.user) ? extractUserData(req.user, include.user) : {};\n\n    if (Object.keys(extractedUser).length) {\n      event.user = {\n        ...event.user,\n        ...extractedUser,\n      };\n    }\n  }\n\n  // client ip:\n  //   node, nextjs: req.socket.remoteAddress\n  //   express, koa: req.ip\n  if (include.ip) {\n    var ip = req.ip || (req.socket && req.socket.remoteAddress);\n    if (ip) {\n      event.user = {\n        ...event.user,\n        ip_address: ip,\n      };\n    }\n  }\n\n  if (include.transaction && !event.transaction) {\n    // TODO do we even need this anymore?\n    // TODO make this work for nextjs\n    event.transaction = extractTransaction(req, include.transaction);\n  }\n\n  return event;\n}\n\nfunction extractQueryParams(\n  req,\n  deps,\n) {\n  // url (including path and query string):\n  //   node, express: req.originalUrl\n  //   koa, nextjs: req.url\n  let originalUrl = req.originalUrl || req.url || '';\n\n  if (!originalUrl) {\n    return;\n  }\n\n  // The `URL` constructor can't handle internal URLs of the form `/some/path/here`, so stick a dummy protocol and\n  // hostname on the beginning. Since the point here is just to grab the query string, it doesn't matter what we use.\n  if (originalUrl.startsWith('/')) {\n    originalUrl = `http://dogs.are.great${originalUrl}`;\n  }\n\n  return (\n    req.query ||\n    (typeof URL !== undefined && new URL(originalUrl).search.replace('?', '')) ||\n    // In Node 8, `URL` isn't in the global scope, so we have to use the built-in module from Node\n    (deps && deps.url && deps.url.parse(originalUrl).query) ||\n    undefined\n  );\n}\n\nexport { addRequestDataToEvent, addRequestDataToTransaction, extractPathForTransaction, extractRequestData };\n//# sourceMappingURL=requestdata.js.map\n","import { withScope, captureException } from '@sentry/core';\nimport { getCurrentHub } from '@sentry/hub';\nimport { addExceptionMechanism, addRequestDataToEvent } from '@sentry/utils';\n\n/** Platform-agnostic version of `flush` */\nfunction flush(timeout) {\n  var client = getCurrentHub().getClient();\n  return client ? client.flush(timeout) : Promise.resolve(false);\n}\n\n/**\n * Capture the exception passed by nextjs to the `_error` page, adding context data as appropriate.\n *\n * @param contextOrProps The data passed to either `getInitialProps` or `render` by nextjs\n */\nasync function captureUnderscoreErrorException(contextOrProps) {\n  const { req, res, err } = contextOrProps;\n\n  // 404s (and other 400-y friends) can trigger `_error`, but we don't want to send them to Sentry\n  var statusCode = (res && res.statusCode) || contextOrProps.statusCode;\n  if (statusCode && statusCode < 500) {\n    return Promise.resolve();\n  }\n\n  // In previous versions of the suggested `_error.js` page in which this function is meant to be used, there was a\n  // workaround for https://github.com/vercel/next.js/issues/8592 which involved an extra call to this function, in the\n  // custom error component's `render` method, just in case it hadn't been called by `getInitialProps`. Now that that\n  // issue has been fixed, the second call is unnecessary, but since it lives in user code rather than our code, users\n  // have to be the ones to get rid of it, and guaraneteedly, not all of them will. So, rather than capture the error\n  // twice, we just bail if we sense we're in that now-extraneous second call. (We can tell which function we're in\n  // because Nextjs passes `pathname` to `getInitialProps` but not to `render`.)\n  if (!contextOrProps.pathname) {\n    return Promise.resolve();\n  }\n\n  withScope(scope => {\n    scope.addEventProcessor(event => {\n      addExceptionMechanism(event, {\n        type: 'instrument',\n        handled: true,\n        data: {\n          function: '_error.getInitialProps',\n        },\n      });\n      return event;\n    });\n\n    if (req) {\n      scope.addEventProcessor(event => addRequestDataToEvent(event, req));\n    }\n\n    // If third-party libraries (or users themselves) throw something falsy, we want to capture it as a message (which\n    // is what passing a string to `captureException` will wind up doing)\n    captureException(err || `_error.js called with falsy error (${err})`);\n  });\n\n  // In case this is being run as part of a serverless function (as is the case with the server half of nextjs apps\n  // deployed to vercel), make sure the error gets sent to Sentry before the lambda exits.\n  await flush(2000);\n}\n\nexport { captureUnderscoreErrorException };\n//# sourceMappingURL=_error.js.map\n","/**\n * This page is loaded by Nextjs:\n *  - on the server, when data-fetching methods throw or reject\n *  - on the client, when `getInitialProps` throws or rejects\n *  - on the client, when a React lifecycle method throws or rejects, and it's\n *    caught by the built-in Nextjs error boundary\n *\n * See:\n *  - https://nextjs.org/docs/basic-features/data-fetching/overview\n *  - https://nextjs.org/docs/api-reference/data-fetching/get-initial-props\n *  - https://reactjs.org/docs/error-boundaries.html\n */\n\nimport { captureUnderscoreErrorException } from '@sentry/nextjs'\nimport NextErrorComponent, { ErrorProps } from 'next/error'\nimport { NotFound } from '@pancakeswap/uikit'\n\nconst CustomErrorComponent = (props: ErrorProps) => <NotFound statusCode={props.statusCode} />\n\nCustomErrorComponent.getInitialProps = async (contextData) => {\n  // In case this is running in a serverless function, await this in order to give Sentry\n  // time to send the error before the lambda exits\n  await captureUnderscoreErrorException(contextData)\n\n  // This will contain the status code of the response\n  return NextErrorComponent.getInitialProps(contextData)\n}\n\nCustomErrorComponent.chains = []\n\nexport default CustomErrorComponent\n","import styled from \"styled-components\";\nimport { NextSeo } from \"next-seo\";\nimport { Button, Heading, Text, LogoIcon } from \"@pancakeswap/uikit\";\nimport { useTranslation } from \"@pancakeswap/localization\";\nimport Link from \"next/link\";\n\nconst StyledNotFound = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - 64px);\n  justify-content: center;\n`;\n\nconst NotFound = ({ statusCode = 404 }: { statusCode?: number }) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <NextSeo title=\"404\" />\n      <StyledNotFound>\n        <LogoIcon width=\"64px\" mb=\"8px\" />\n        <Heading scale=\"xxl\">{statusCode}</Heading>\n        <Text mb=\"16px\">{t(\"Oops, page not found.\")}</Text>\n        <Link href=\"/\" passHref>\n          <Button as=\"a\" scale=\"sm\">\n            {t(\"Back Home\")}\n          </Button>\n        </Link>\n      </StyledNotFound>\n    </>\n  );\n};\n\nexport default NotFound;\n","module.exports = require('./dist/pages/_error')\n"],"names":["window","__NEXT_P","push","__webpack_require__","_optionalChain","ops","lastAccessLHS","value","i","length","op","fn","args","call","undefined","DEFAULT_INCLUDES","ip","request","transaction","user","DEFAULT_REQUEST_INCLUDES","DEFAULT_USER_INCLUDES","extractPathForTransaction","req","options","method","toUpperCase","path","source","customRoute","route","baseUrl","originalUrl","url","rt","name","extractRequestData","include","deps","requestData","headers","absoluteUrl","protocol","socket","encrypted","hostname","host","forEach","key","cookies","cookie","parse","query_string","extractQueryParams","startsWith","query","URL","search","replace","body","data","is","HD","JSON","stringify","normalize","Fv","hasOwnProperty","captureUnderscoreErrorException","contextOrProps","res","err","client","statusCode","pathname","Promise","resolve","esm_exports","$e","scope","addEventProcessor","event","misc","EG","type","handled","function","addRequestDataToEvent","_","extractedRequestData","Array","isArray","_2","_3","keys","extractedUser","PO","attributes","Object","remoteAddress","ip_address","extractTransaction","stack","Tb","hub","Gd","getClient","flush","CustomErrorComponent","props","jsx_runtime","jsx","NotFound","getInitialProps","_async_to_generator","Z","contextData","_state","sent","NextErrorComponent","chains","_error","StyledNotFound","styled","__webpack_exports__","param","t","useTranslation","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","jsxs","Fragment","NextSeo","title","LogoIcon","width","mb","Heading","scale","_param_statusCode","Text","Link","href","passHref","Button","as","module","exports"],"sourceRoot":""}