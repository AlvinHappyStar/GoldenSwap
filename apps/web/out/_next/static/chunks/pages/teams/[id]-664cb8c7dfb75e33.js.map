{"version":3,"file":"static/chunks/pages/teams/[id]-664cb8c7dfb75e33.js","mappings":"sFACA,CAAAA,OAAAC,QAAA,CAAAD,OAAAC,QAAA,MAAAC,IAAA,EACA,cACA,WACA,OAAeC,EAAQ,MACvB,EACA,wOCFA,IAAMC,EAAUC,CAAAA,EAAAA,EAAAA,EAAAA,EAAOC,EAAAA,CAAIA,EAAAA,UAAAA,CAAAA,mCAc3BC,CAAAA,EAAA,EAR+D,UAAM,CACnE,MACE,GAAAC,EAAAC,GAAA,EAACL,EAAAA,UACC,GAAAI,EAAAC,GAAA,EAACC,EAAAA,CAAOA,CAAAA,CAAAA,IAGd,gYCIAC,EAbuE,SAAAC,CAAA,CAAkB,KAAfC,EAAAA,EAAAA,QAAAA,CAClEC,EAAQC,CAAAA,EAAAA,EAAAA,EAAAA,IAAND,CAAAA,CAER,MACE,GAAAE,EAAAC,IAAA,EAACC,EAAAA,CAAIA,CAAAA,CAACC,cAAc,SAASC,WAAW,SAASC,eAAe,SAASC,EAAE,iBACzE,GAAAN,EAAAP,GAAA,EAACc,EAAAA,CAAoBA,CAAAA,CAACC,MAAM,OAAOC,OAAO,SAC1C,GAAAT,EAAAP,GAAA,EAACiB,EAAAA,CAAOA,CAAAA,CAACC,GAAG,KAAKC,MAAM,KAAKC,MAAM,wBAC/BhB,GAAYC,EAAE,oBAIvB,otCCLA,IAAMV,EAAUC,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,oCAGtB,SAAAO,CAAA,SAAekB,EAAZA,KAAAA,CAAkBC,YAAY,CAACC,EAAE,GAKlCC,EAAS5B,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,oCAOrB,SAAAO,CAAA,SAAekB,EAAZA,KAAAA,CAAkBC,YAAY,CAACC,EAAE,GAOlCE,EAAa7B,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,qCAKvB8B,EAAa9B,CAAAA,EAAAA,EAAAA,EAAAA,EAAO+B,EAAAA,CAAIA,EAAAA,UAAAA,CAAAA,oCAIxBC,EAAmBhC,CAAAA,EAAAA,EAAAA,EAAAA,EAAOiC,EAAAA,CAAUA,EAAAA,UAAAA,CAAAA,mCAEtB,SAAA1B,CAAA,SAAG2B,EAAAA,EAAAA,GAQjBC,EAAWnC,CAAAA,EAAAA,EAAAA,EAAAA,EAAOqB,EAAAA,CAAOA,EAAEe,KAAK,CAAC,CAAEd,GAAI,IAAK,GAAAe,UAAA,oCAG9C,SAAA9B,CAAA,SAAekB,EAAZA,KAAAA,CAAkBC,YAAY,CAACC,EAAE,GAKlCW,EAAUtC,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,oCAMtB,SAAAO,CAAA,SAAekB,EAAZA,KAAAA,CAAkBC,YAAY,CAACC,EAAE,GAyCxCY,EAlCmE,SAAAhC,CAAA,CAAY,KAATiC,EAAAA,EAAAA,EAAAA,CAC9D/B,EAAQC,CAAAA,EAAAA,EAAAA,EAAAA,IAAND,CAAAA,CACFgC,EAAWC,OAAOF,GACOG,EAAAA,CAAAA,EAAAA,EAAAA,EAAAA,EAAO,CAAC,OAAQH,EAAG,CAAE,GAAAI,EAAAC,CAAA,sDAAYC,MAAAA,GAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAQL,SAAhEM,EAAuBJ,EAAvBI,IAAAA,CAAYC,EAAWL,EAAXK,MAAAA,CAEpB,MACE,GAAArC,EAAAP,GAAA,EAACL,EAAAA,UACC,GAAAY,EAAAC,IAAA,EAACkB,EAAAA,WACC,GAAAnB,EAAAC,IAAA,EAACoB,EAAAA,CAAiBE,GAAI,iBAAiCe,MAAA,CAAhBC,EAAKC,UAAU,YACpD,GAAAxC,EAAAP,GAAA,EAACyB,EAAAA,UACC,GAAAlB,EAAAP,GAAA,EAACwB,EAAAA,CAAOwB,IAAK,iBAAgCH,MAAA,CAAfC,EAAKG,MAAM,CAAC1B,EAAE,EAAI2B,IAAI,kBAEtD,GAAA3C,EAAAP,GAAA,EAAC+B,EAAAA,CAASX,MAAO0B,EAAKK,SAAS,UAAGL,EAAKM,IAAI,GAC3C,GAAA7C,EAAAP,GAAA,EAACqD,EAAAA,CAAIA,CAAAA,CAACnC,GAAG,IAAIE,MAAO0B,EAAKK,SAAS,UAC/B9C,EAAEyC,EAAKQ,WAAW,OAGvB,GAAA/C,EAAAC,IAAA,EAAC+C,EAAAA,CAAQA,CAAAA,WACP,GAAAhD,EAAAC,IAAA,EAAC0B,EAAAA,WACEU,IAAWY,EAAAA,EAAAA,CAAAA,OAAmB,CAC7B,GAAAjD,EAAAP,GAAA,EAACyD,EAAAA,CAAQA,CAAAA,CAAC1C,MAAM,UAEhB,GAAAR,EAAAP,GAAA,EAAC0D,EAAAA,CAAWA,CAAAA,CAACC,KAAMC,EAAAA,CAAaA,CAAEC,MAAOf,EAAKgB,KAAK,CAAEC,SAAU1D,EAAE,mBAClE,CACD,GAAAE,EAAAP,GAAA,EAAC0D,EAAAA,CAAWA,CAAAA,CAACC,KAAMK,EAAAA,CAASA,CAAEH,MAAOxD,EAAE,eAAgB0D,SAAU1D,EAAE,eAAgB4D,WAAU,QAE/F,GAAA1D,EAAAP,GAAA,EAACiB,EAAAA,CAAOA,CAAAA,CAACC,GAAG,cAAMb,EAAE,uBACpB,GAAAE,EAAAP,GAAA,EAACkE,EAAUA,CAAAA,UAKrB,aC9EAC,EArBa,UAAM,CACjB,IAAM9D,EAAQC,CAAAA,EAAAA,EAAAA,EAAAA,IAAND,CAAAA,CACF+D,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,IACTC,EAAQ,iBAAOF,EAAOG,KAAK,CAACnC,EAAE,CAAgBgC,EAAOG,KAAK,CAACnC,EAAE,CAAG,EAAE,CAExE,MACE,GAAA7B,EAAAC,IAAA,EAACX,EAAAA,CAAIA,CAAAA,WACH,GAAAU,EAAAP,GAAA,EAACwE,EAAAA,CAAUA,CAAAA,CAAAA,GACX,GAAAjE,EAAAP,GAAA,EAACS,EAAAA,CAAIA,CAAAA,CAACgE,GAAG,gBACP,GAAAlE,EAAAP,GAAA,EAAC0E,IAAIA,CAACC,KAAK,SAASC,SAAQ,YAC1B,GAAArE,EAAAC,IAAA,EAACC,EAAAA,CAAIA,CAAAA,CAACE,WAAW,SAASO,GAAG,cAC3B,GAAAX,EAAAP,GAAA,EAAC6E,EAAAA,CAAeA,CAAAA,CAACzD,MAAM,YACvB,GAAAb,EAAAP,GAAA,EAACqD,EAAAA,CAAIA,CAAAA,CAACjC,MAAM,mBAAWf,EAAE,2BAI/B,GAAAE,EAAAP,GAAA,EAAC8E,EAAQA,CAAC1C,GAAIkC,MAGpB,ECbAS,EAVuB,UAAM,OAG3B,CAFeV,EAAAA,EAAAA,SAAAA,IAEJW,UAAU,CACZ,GAAAzE,EAAAP,GAAA,EAACiF,EAAAA,CAAUA,CAAAA,CAAAA,GAGb,GAAA1E,EAAAP,GAAA,EAACkF,EAAIA,CAAAA,EAFX,OCyDHC,EA1DiB,SAAAhF,CAAA,CAAuE,SAApEiF,QAAAA,CAClB,MACE,GAAA7E,EAAAP,GAAA,EAACqF,EAAAA,EAASA,CAAAA,CACRC,MAAO,CACLF,SAJYA,KAAAA,IAAAA,EAAW,CAAC,EAAAG,CAAA,WAO1B,GAAAhF,EAAAP,GAAA,EAACwF,EAAcA,CAAAA,IAGrB,sNCcAC,EA5BsB,UAAM,CAC1B,IAAMpF,EAAQC,CAAAA,EAAAA,EAAAA,EAAAA,IAAND,CAAAA,CAER,MACE,GAAAE,EAAAP,GAAA,EAAC2B,EAAAA,CAAIA,CAAAA,CAAC8C,GAAG,OAAOiB,SAAQ,YACtB,GAAAnF,EAAAP,GAAA,EAACuD,EAAAA,CAAQA,CAAAA,UACP,GAAAhD,EAAAC,IAAA,EAACC,EAAAA,CAAIA,CAAAA,CACHE,WAAY,CAAC,QAAS,IAAI,CAAE,SAAS,CACrCC,eAAgB,CAAC,QAAS,IAAI,CAAE,gBAAgB,CAChDF,cAAe,CAAC,SAAU,IAAI,CAAE,MAAM,WAEtC,GAAAH,EAAAC,IAAA,EAACmF,MAAAA,WACC,GAAApF,EAAAP,GAAA,EAACiB,EAAAA,CAAOA,CAAAA,CAACE,MAAM,KAAKsD,GAAG,eACpBpE,EAAE,0CAEL,GAAAE,EAAAP,GAAA,EAACqD,EAAAA,CAAIA,CAAAA,UAAEhD,EAAE,oFAEX,GAAAE,EAAAP,GAAA,EAAC0E,IAAIA,CAACC,KAAK,kBAAkBC,SAAQ,YACnC,GAAArE,EAAAP,GAAA,EAAC4F,EAAAA,CAAMA,CAAAA,CAAC1E,GAAG,IAAIkB,GAAG,wBAAwByD,GAAI,CAAC,OAAQ,IAAI,CAAE,EAAE,UAC5DxF,EAAE,wBAOjB,uJCxBA,IAAMyF,EAAgBlG,EAAAA,EAAAA,CAAAA,GAAAA,CAAAA,UAAU,oCACH,SAAAO,CAAA,SAAekB,EAAZA,KAAAA,CAAkB0E,MAAM,CAACC,UAAU,GAyBnEC,EApBmB,UAAM,CACvB,IAAM5F,EAAQC,CAAAA,EAAAA,EAAAA,EAAAA,IAAND,CAAAA,CAC2B6F,EAAAA,CAAAA,EAAAA,EAAAA,EAAAA,IAA3BC,EAA2BD,EAA3BC,aAAAA,CAAeC,EAAYF,EAAZE,OAAAA,CAGvB,MACE,GAAA7F,EAAAC,IAAA,EAAAD,EAAA8F,QAAA,YACGC,GAJuC,CAACF,GAIlB,GAAA7F,EAAAP,GAAA,EAACuG,EAAaA,CAAAA,GACrC,GAAAhG,EAAAC,IAAA,EAACsF,EAAAA,WACC,GAAAvF,EAAAP,GAAA,EAACiB,EAAAA,CAAOA,CAAAA,CAACC,GAAG,KAAKC,MAAM,MAAMC,MAAM,qBAChCf,EAAE,sBAEL,GAAAE,EAAAP,GAAA,EAACqD,EAAAA,CAAIA,CAAAA,CAACmD,KAAI,YACPnG,EAAE,8GAKb,qFCbAP,CAAAA,EAAA,EAbiE,SAAAK,CAAA,CAAoB,SAAjBsG,IAAAA,CAAAA,EAAAA,KAAAA,IAAAA,EAAO,IAAAC,CAAA,CACzE,MACE,GAAAC,EAAA3G,GAAA,EAAC4G,EAAAA,EAAGA,CAAAA,CAAC7F,MAAO0F,EAAMzF,OAAQyF,MAAAA,EAAcI,SAAS,oBAC/C,GAAAF,EAAA3G,GAAA,EAAC8G,EAAAA,CAAKA,CAAAA,CACJ/F,MAAO0F,EACPzF,OAAQyF,MAAAA,EACRzD,IAAI,mEACJE,IAAI,wBAIZ,gGCHApD,CAAAA,EAAA,EAR0D,SAACiH,CAAAA,CAAU,CACnE,MACE,GAAAJ,EAAA3G,GAAA,EAACgH,EAAAA,CAAGA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAACC,QAAQ,aAAgBF,GAAAA,UAC3B,GAAAJ,EAAA3G,GAAA,EAACkH,OAAAA,CAAKC,EAAE,yhCAGd","sources":["webpack://_N_E/?d51a","webpack://_N_E/./src/components/Loader/PageLoader.tsx","webpack://_N_E/./src/views/Teams/components/ComingSoon.tsx","webpack://_N_E/./src/views/Teams/components/TeamCard.tsx","webpack://_N_E/./src/views/Teams/Team.tsx","webpack://_N_E/./src/views/Teams/TeamPageRouter.tsx","webpack://_N_E/./src/pages/teams/[id].tsx","webpack://_N_E/./src/views/Teams/components/NoProfileCard.tsx","webpack://_N_E/./src/views/Teams/components/TeamHeader.tsx","webpack://_N_E/../../packages/uikit/src/components/Spinner/Spinner.tsx","webpack://_N_E/../../packages/uikit/src/components/Svg/Icons/Community.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/teams/[id]\",\n      function () {\n        return require(\"private-next-pages/teams/[id].tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/teams/[id]\"])\n      });\n    }\n  ","import styled from 'styled-components'\nimport { Spinner } from '@pancakeswap/uikit'\nimport Page from '../Layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC<React.PropsWithChildren<unknown>> = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import { BunnyPlaceholderIcon, Flex, Heading } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\n\ninterface ComingSoonProps {\n  children?: React.ReactNode\n}\n\nconst ComingSoon: React.FC<React.PropsWithChildren<ComingSoonProps>> = ({ children }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" p=\"24px\">\n      <BunnyPlaceholderIcon width=\"72px\" height=\"72px\" />\n      <Heading as=\"h5\" scale=\"md\" color=\"textDisabled\">\n        {children || t('Coming Soon!')}\n      </Heading>\n    </Flex>\n  )\n}\n\nexport default ComingSoon\n","import styled from 'styled-components'\nimport { Card, CardHeader, CardBody, CommunityIcon, Heading, PrizeIcon, Text, Skeleton } from '@pancakeswap/uikit'\nimport { FetchStatus } from 'config/constants/types'\nimport useSWR from 'swr'\nimport { getTeam } from 'state/teams/helpers'\nimport { useTranslation } from '@pancakeswap/localization'\nimport ComingSoon from './ComingSoon'\nimport IconStatBox from './IconStatBox'\n\ninterface TeamCardProps {\n  id: string\n}\n\nconst Wrapper = styled.div`\n  padding-top: 16px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    padding-top: 24px;\n  }\n`\n\nconst Avatar = styled.img`\n  border-radius: 50%;\n  height: 64px;\n  margin-top: -12px;\n  width: 64px;\n  border: solid 2px white;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    height: 128px;\n    margin-top: -24px;\n    width: 128px;\n  }\n`\n\nconst AvatarWrap = styled.div`\n  margin-bottom: 8px;\n  text-align: center;\n`\n\nconst StyledCard = styled(Card)`\n  overflow: visible;\n`\n\nconst StyledCardHeader = styled(CardHeader)<{ bg: string }>`\n  position: relative;\n  background: url(${({ bg }) => bg});\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n  padding-top: 0;\n  text-align: center;\n`\n\nconst TeamName = styled(Heading).attrs({ as: 'h2' })`\n  font-size: 24px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    font-size: 40px;\n  }\n`\n\nconst StatRow = styled.div`\n  display: grid;\n  grid-gap: 16px;\n  grid-template-columns: 1fr;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-gap: 32px;\n    grid-template-columns: repeat(2, 1fr);\n    margin-bottom: 32px;\n  }\n`\n\nconst TeamCard: React.FC<React.PropsWithChildren<TeamCardProps>> = ({ id }) => {\n  const { t } = useTranslation()\n  const idNumber = Number(id)\n  const { data: team, status } = useSWR(['team', id], async () => getTeam(idNumber))\n\n  return (\n    <Wrapper>\n      <StyledCard>\n        <StyledCardHeader bg={`/images/teams/${team.background}`}>\n          <AvatarWrap>\n            <Avatar src={`/images/teams/${team.images.md}`} alt=\"team avatar\" />\n          </AvatarWrap>\n          <TeamName color={team.textColor}>{team.name}</TeamName>\n          <Text as=\"p\" color={team.textColor}>\n            {t(team.description)}\n          </Text>\n        </StyledCardHeader>\n        <CardBody>\n          <StatRow>\n            {status !== FetchStatus.Fetched ? (\n              <Skeleton width=\"100px\" />\n            ) : (\n              <IconStatBox icon={CommunityIcon} title={team.users} subtitle={t('Active Members')} />\n            )}\n            <IconStatBox icon={PrizeIcon} title={t('Coming Soon')} subtitle={t('Team Points')} isDisabled />\n          </StatRow>\n          <Heading as=\"h3\">{t('Team Achievements')}</Heading>\n          <ComingSoon />\n        </CardBody>\n      </StyledCard>\n    </Wrapper>\n  )\n}\n\nexport default TeamCard\n","import { ChevronLeftIcon, Flex, Text } from '@pancakeswap/uikit'\nimport Page from 'components/Layout/Page'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { useRouter } from 'next/router'\nimport Link from 'next/link'\nimport TeamCard from './components/TeamCard'\nimport TeamHeader from './components/TeamHeader'\n\nconst Team = () => {\n  const { t } = useTranslation()\n  const router = useRouter()\n  const idStr = typeof router.query.id === 'string' ? router.query.id : ''\n\n  return (\n    <Page>\n      <TeamHeader />\n      <Flex mb=\"24px\">\n        <Link href=\"/teams\" passHref>\n          <Flex alignItems=\"center\" as=\"a\">\n            <ChevronLeftIcon color=\"primary\" />\n            <Text color=\"primary\">{t('Teams Overview')}</Text>\n          </Flex>\n        </Link>\n      </Flex>\n      <TeamCard id={idStr} />\n    </Page>\n  )\n}\n\nexport default Team\n","import { useRouter } from 'next/router'\nimport PageLoader from '../../components/Loader/PageLoader'\nimport Team from './Team'\n\nconst TeamPageRouter = () => {\n  const router = useRouter()\n\n  if (router.isFallback) {\n    return <PageLoader />\n  }\n\n  return <Team />\n}\n\nexport default TeamPageRouter\n","// eslint-disable-next-line camelcase\nimport { SWRConfig, unstable_serialize } from 'swr'\nimport { GetStaticPaths, GetStaticProps, InferGetStaticPropsType } from 'next'\nimport TeamPageRouter from 'views/Teams/TeamPageRouter'\nimport teams from 'config/constants/teams'\nimport { getTeam } from 'state/teams/helpers'\nimport { teamsById } from 'utils/teamsById'\n\nconst TeamPage = ({ fallback = {} }: InferGetStaticPropsType<typeof getStaticProps>) => {\n  return (\n    <SWRConfig\n      value={{\n        fallback,\n      }}\n    >\n      <TeamPageRouter />\n    </SWRConfig>\n  )\n}\n\nexport const getStaticPaths: GetStaticPaths = () => {\n  return {\n    fallback: true,\n    paths: [],\n  }\n}\n\nexport const getStaticProps: GetStaticProps = async ({ params }) => {\n  const { id } = params\n  if (typeof id !== 'string') {\n    return {\n      notFound: true,\n    }\n  }\n\n  const idNumber = Number(id)\n\n  const isValidTeamId = teams.findIndex((team) => team.id === idNumber) !== -1\n  if (!isValidTeamId) {\n    return {\n      notFound: true,\n    }\n  }\n\n  const fetchedTeam = await getTeam(idNumber)\n  if (!fetchedTeam) {\n    return {\n      props: {\n        fallback: {\n          [unstable_serialize(['team', id])]: teamsById[id],\n        },\n      },\n      revalidate: 1,\n    }\n  }\n\n  return {\n    props: {\n      fallback: {\n        [unstable_serialize(['team', id])]: fetchedTeam,\n      },\n    },\n    revalidate: 60 * 60, // 1 hour\n  }\n}\n\nexport default TeamPage\n","import { Button, Card, CardBody, Flex, Heading, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\nimport Link from 'next/link'\n\nconst NoProfileCard = () => {\n  const { t } = useTranslation()\n\n  return (\n    <Card mb=\"32px\" isActive>\n      <CardBody>\n        <Flex\n          alignItems={['start', null, 'center']}\n          justifyContent={['start', null, 'space-between']}\n          flexDirection={['column', null, 'row']}\n        >\n          <div>\n            <Heading scale=\"lg\" mb=\"8px\">\n              {t('You haven’t set up your profile yet!')}\n            </Heading>\n            <Text>{t('You can do this at any time by clicking on your profile picture in the menu')}</Text>\n          </div>\n          <Link href=\"/create-profile\" passHref>\n            <Button as=\"a\" id=\"teamsPageSetUpProfile\" mt={['16px', null, 0]}>\n              {t('Set up now')}\n            </Button>\n          </Link>\n        </Flex>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default NoProfileCard\n","import styled from 'styled-components'\nimport { Heading, Text } from '@pancakeswap/uikit'\nimport { useProfile } from 'state/profile/hooks'\nimport { useTranslation } from '@pancakeswap/localization'\nimport NoProfileCard from './NoProfileCard'\n\nconst HeaderWrapper = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  margin-bottom: 24px;\n  padding-bottom: 24px;\n`\n\nconst TeamHeader = () => {\n  const { t } = useTranslation()\n  const { isInitialized, profile } = useProfile()\n  const showProfileCallout = isInitialized && !profile\n\n  return (\n    <>\n      {showProfileCallout && <NoProfileCard />}\n      <HeaderWrapper>\n        <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\">\n          {t('Teams & Profiles')}\n        </Heading>\n        <Text bold>\n          {t('Show off your stats and collectibles with your unique profile. Team features will be revealed soon!')}\n        </Text>\n      </HeaderWrapper>\n    </>\n  )\n}\n\nexport default TeamHeader\n","import React from \"react\";\nimport { Image, Box } from \"@pancakeswap/uikit\";\nimport { SpinnerProps } from \"./types\";\n\nconst Spinner: React.FC<React.PropsWithChildren<SpinnerProps>> = ({ size = 128 }) => {\n  return (\n    <Box width={size} height={size * 1.197} position=\"relative\">\n      <Image\n        width={size}\n        height={size * 1.197}\n        src=\"https://assets.pancakeswap.finance/web/pancake-3d-spinner-v2.gif\"\n        alt=\"pancake-3d-spinner\"\n      />\n    </Box>\n  );\n};\n\nexport default Spinner;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<React.PropsWithChildren<SvgProps>> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M4 13C5.1 13 6 12.1 6 11C6 9.9 5.1 9 4 9C2.9 9 2 9.9 2 11C2 12.1 2.9 13 4 13ZM5.13 14.1C4.76 14.04 4.39 14 4 14C3.01 14 2.07 14.21 1.22 14.58C0.48 14.9 0 15.62 0 16.43V17C0 17.5523 0.447715 18 1 18H4.5V16.39C4.5 15.56 4.73 14.78 5.13 14.1ZM20 13C21.1 13 22 12.1 22 11C22 9.9 21.1 9 20 9C18.9 9 18 9.9 18 11C18 12.1 18.9 13 20 13ZM24 16.43C24 15.62 23.52 14.9 22.78 14.58C21.93 14.21 20.99 14 20 14C19.61 14 19.24 14.04 18.87 14.1C19.27 14.78 19.5 15.56 19.5 16.39V18H23C23.5523 18 24 17.5523 24 17V16.43ZM16.24 13.65C15.07 13.13 13.63 12.75 12 12.75C10.37 12.75 8.93 13.14 7.76 13.65C6.68 14.13 6 15.21 6 16.39V17C6 17.5523 6.44772 18 7 18H17C17.5523 18 18 17.5523 18 17V16.39C18 15.21 17.32 14.13 16.24 13.65ZM8.07 16C8.16 15.77 8.2 15.61 8.98 15.31C9.95 14.93 10.97 14.75 12 14.75C13.03 14.75 14.05 14.93 15.02 15.31C15.79 15.61 15.83 15.77 15.93 16H8.07ZM12 8C12.55 8 13 8.45 13 9C13 9.55 12.55 10 12 10C11.45 10 11 9.55 11 9C11 8.45 11.45 8 12 8ZM12 6C10.34 6 9 7.34 9 9C9 10.66 10.34 12 12 12C13.66 12 15 10.66 15 9C15 7.34 13.66 6 12 6Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n"],"names":["window","__NEXT_P","push","__webpack_require__","Wrapper","styled","Page","__webpack_exports__","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","jsx","Spinner","components_ComingSoon","param","children","t","useTranslation","jsx_runtime","jsxs","Flex","flexDirection","alignItems","justifyContent","p","BunnyPlaceholderIcon","width","height","Heading","as","scale","color","theme","mediaQueries","md","Avatar","AvatarWrap","StyledCard","Card","StyledCardHeader","CardHeader","bg","TeamName","attrs","withConfig","StatRow","components_TeamCard","id","idNumber","Number","useSWR","_async_to_generator","Z","getTeam","data","status","concat","team","background","src","images","alt","textColor","name","Text","description","CardBody","FetchStatus","Skeleton","IconStatBox","icon","CommunityIcon","title","users","subtitle","PrizeIcon","isDisabled","ComingSoon","Teams_Team","router","useRouter","idStr","query","TeamHeader","mb","Link","href","passHref","ChevronLeftIcon","TeamCard","Teams_TeamPageRouter","isFallback","PageLoader","Team","_id_","fallback","SWRConfig","value","_param_fallback","TeamPageRouter","components_NoProfileCard","isActive","div","Button","mt","HeaderWrapper","colors","textSubtle","components_TeamHeader","useProfile","isInitialized","profile","Fragment","showProfileCallout","NoProfileCard","bold","size","_param_size","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","Box","position","Image","props","Svg","viewBox","path","d"],"sourceRoot":""}