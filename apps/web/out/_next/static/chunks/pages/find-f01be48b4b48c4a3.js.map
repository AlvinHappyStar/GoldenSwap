{"version":3,"file":"static/chunks/pages/find-f01be48b4b48c4a3.js","mappings":"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","sources":["webpack://_N_E/?8e54","webpack://_N_E/./src/views/PoolFinder/index.tsx","webpack://_N_E/./src/pages/find.tsx","webpack://_N_E/./src/utils/getChangeForPeriod.ts","webpack://_N_E/./src/utils/getDeltaTimestamps.ts","webpack://_N_E/./src/views/Info/utils/infoDataHelpers.ts","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/find\",\n      function () {\n        return require(\"private-next-pages/find.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/find\"])\n      });\n    }\n  ","import { Currency, JSBI } from '@pancakeswap/sdk'\nimport {\n  AddIcon,\n  Button,\n  ChevronDownIcon,\n  Text,\n  useModal,\n  NextLinkFromReactRouter,\n  AutoColumn,\n  ColumnCenter,\n} from '@pancakeswap/uikit'\nimport { useAccount } from 'wagmi'\nimport { useTranslation } from '@pancakeswap/localization'\nimport { BIG_INT_ZERO } from 'config/constants/exchange'\nimport useNativeCurrency from 'hooks/useNativeCurrency'\nimport { useCallback, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { AppBody, AppHeader } from '../../components/App'\nimport { LightCard } from '../../components/Card'\nimport Row from '../../components/Layout/Row'\nimport Dots from '../../components/Loader/Dots'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport CurrencySearchModal from '../../components/SearchModal/CurrencySearchModal'\nimport { PairState, usePair } from '../../hooks/usePairs'\nimport { usePairAdder } from '../../state/user/hooks'\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { currencyId } from '../../utils/currencyId'\nimport Page from '../Page'\nimport { CommonBasesType } from '../../components/SearchModal/types'\n\nenum Fields {\n  TOKEN0 = 0,\n  TOKEN1 = 1,\n}\n\nconst StyledButton = styled(Button)`\n  background-color: ${({ theme }) => theme.colors.input};\n  color: ${({ theme }) => theme.colors.text};\n  box-shadow: none;\n  border-radius: 16px;\n`\n\nexport default function PoolFinder() {\n  const { address: account } = useAccount()\n  const { t } = useTranslation()\n  const native = useNativeCurrency()\n\n  const [activeField, setActiveField] = useState<number>(Fields.TOKEN1)\n  const [currency0, setCurrency0] = useState<Currency | null>(native)\n  const [currency1, setCurrency1] = useState<Currency | null>(null)\n\n  const [pairState, pair] = usePair(currency0 ?? undefined, currency1 ?? undefined)\n  const addPair = usePairAdder()\n  useEffect(() => {\n    if (pair) {\n      addPair(pair)\n    }\n  }, [pair, addPair])\n\n  const validPairNoLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS ||\n    Boolean(\n      pairState === PairState.EXISTS &&\n        pair &&\n        JSBI.equal(pair.reserve0.quotient, BIG_INT_ZERO) &&\n        JSBI.equal(pair.reserve1.quotient, BIG_INT_ZERO),\n    )\n\n  const position = useTokenBalance(account ?? undefined, pair?.liquidityToken)\n  const hasPosition = Boolean(position && JSBI.greaterThan(position.quotient, BIG_INT_ZERO))\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      if (activeField === Fields.TOKEN0) {\n        setCurrency0(currency)\n      } else {\n        setCurrency1(currency)\n      }\n    },\n    [activeField],\n  )\n\n  const prerequisiteMessage = (\n    <LightCard padding=\"45px 10px\">\n      <Text textAlign=\"center\">\n        {!account ? t('Connect to a wallet to find pools') : t('Select a token to find your liquidity.')}\n      </Text>\n    </LightCard>\n  )\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={handleCurrencySelect}\n      showCommonBases\n      selectedCurrency={(activeField === Fields.TOKEN0 ? currency1 : currency0) ?? undefined}\n      commonBasesType={CommonBasesType.LIQUIDITY}\n    />,\n    true,\n    true,\n    'selectCurrencyModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader title={t('Import Pool')} subtitle={t('Import an existing pool')} backTo=\"/liquidity\" />\n        <AutoColumn style={{ padding: '1rem' }} gap=\"md\">\n          <StyledButton\n            endIcon={<ChevronDownIcon />}\n            onClick={() => {\n              onPresentCurrencyModal()\n              setActiveField(Fields.TOKEN0)\n            }}\n          >\n            {currency0 ? (\n              <Row>\n                <CurrencyLogo currency={currency0} />\n                <Text ml=\"8px\">{currency0.symbol}</Text>\n              </Row>\n            ) : (\n              <Text ml=\"8px\">{t('Select a Token')}</Text>\n            )}\n          </StyledButton>\n\n          <ColumnCenter>\n            <AddIcon />\n          </ColumnCenter>\n\n          <StyledButton\n            endIcon={<ChevronDownIcon />}\n            onClick={() => {\n              onPresentCurrencyModal()\n              setActiveField(Fields.TOKEN1)\n            }}\n          >\n            {currency1 ? (\n              <Row>\n                <CurrencyLogo currency={currency1} />\n                <Text ml=\"8px\">{currency1.symbol}</Text>\n              </Row>\n            ) : (\n              <Text as={Row}>{t('Select a Token')}</Text>\n            )}\n          </StyledButton>\n\n          {currency0 && currency1 ? (\n            pairState === PairState.EXISTS ? (\n              hasPosition && pair ? (\n                <>\n                  <MinimalPositionCard pair={pair} />\n                  <Button as={NextLinkFromReactRouter} to=\"/liquidity\" variant=\"secondary\" width=\"100%\">\n                    {t('Manage this pair')}\n                  </Button>\n                </>\n              ) : (\n                <LightCard padding=\"45px 10px\">\n                  <AutoColumn gap=\"sm\" justify=\"center\">\n                    <Text textAlign=\"center\">{t('You don’t have liquidity in this pair yet.')}</Text>\n                    <Button\n                      as={NextLinkFromReactRouter}\n                      to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\n                      variant=\"secondary\"\n                    >\n                      {t('Add Liquidity')}\n                    </Button>\n                  </AutoColumn>\n                </LightCard>\n              )\n            ) : validPairNoLiquidity ? (\n              <LightCard padding=\"45px 10px\">\n                <AutoColumn gap=\"sm\" justify=\"center\">\n                  <Text textAlign=\"center\">{t('No pair found.')}</Text>\n                  <Button\n                    as={NextLinkFromReactRouter}\n                    to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\n                    variant=\"secondary\"\n                  >\n                    {t('Create pair')}\n                  </Button>\n                </AutoColumn>\n              </LightCard>\n            ) : pairState === PairState.INVALID ? (\n              <LightCard padding=\"45px 10px\">\n                <AutoColumn gap=\"sm\" justify=\"center\">\n                  <Text textAlign=\"center\" fontWeight={500}>\n                    {t('Invalid pair.')}\n                  </Text>\n                </AutoColumn>\n              </LightCard>\n            ) : pairState === PairState.LOADING ? (\n              <LightCard padding=\"45px 10px\">\n                <AutoColumn gap=\"sm\" justify=\"center\">\n                  <Text textAlign=\"center\">\n                    {t('Loading')}\n                    <Dots />\n                  </Text>\n                </AutoColumn>\n              </LightCard>\n            ) : null\n          ) : (\n            prerequisiteMessage\n          )}\n        </AutoColumn>\n\n        {/* <CurrencySearchModal\n          isOpen={showSearch}\n          onCurrencySelect={handleCurrencySelect}\n          onDismiss={handleSearchDismiss}\n          showCommonBases\n          selectedCurrency={(activeField === Fields.TOKEN0 ? currency1 : currency0) ?? undefined}\n        /> */}\n      </AppBody>\n    </Page>\n  )\n}\n","import { CHAIN_IDS } from 'utils/wagmi'\nimport PoolFinder from '../views/PoolFinder'\n\nconst PoolFinderPage = () => <PoolFinder />\n\nPoolFinderPage.chains = CHAIN_IDS\n\nexport default PoolFinderPage\n","import { getAmountChange, getPercentChange } from '../views/Info/utils/infoDataHelpers'\n\n/**\n * Given current value and value 1 and 2 periods (e.g. 1day + 2days, 1week - 2weeks) returns the amount change for latest period\n * and percentage change compared to the previous period.\n * @param valueNow - current value\n * @param valueOnePeriodAgo - value 1 period ago (e.g. 1 day or 1 week ago), period unit must be same as valueTwoPeriodsAgo\n * @param valueTwoPeriodsAgo - value 2 periods ago (e.g. 2 days or 2 weeks ago), period unit must be same as valueOnePeriodAgo\n * @returns amount change for the latest period and percentage change compared to previous period\n */\nexport const getChangeForPeriod = (\n  valueNow?: number,\n  valueOnePeriodAgo?: number,\n  valueTwoPeriodsAgo?: number,\n): [number, number] => {\n  const currentPeriodAmount = getAmountChange(valueNow, valueOnePeriodAgo)\n  const previousPeriodAmount = getAmountChange(valueOnePeriodAgo, valueTwoPeriodsAgo)\n  const percentageChange = getPercentChange(currentPeriodAmount, previousPeriodAmount)\n  return [currentPeriodAmount, percentageChange]\n}\n","import { getUnixTime, startOfMinute, subDays, subWeeks } from 'date-fns'\n\n/**\n * Returns UTC timestamps for 24h ago, 48h ago, 7d ago and 14d ago relative to current date and time\n */\nexport const getDeltaTimestamps = (): [number, number, number, number] => {\n  const utcCurrentTime = getUnixTime(new Date()) * 1000\n  const t24h = getUnixTime(startOfMinute(subDays(utcCurrentTime, 1)))\n  const t48h = getUnixTime(startOfMinute(subDays(utcCurrentTime, 2)))\n  const t7d = getUnixTime(startOfMinute(subWeeks(utcCurrentTime, 1)))\n  const t14d = getUnixTime(startOfMinute(subWeeks(utcCurrentTime, 2)))\n  return [t24h, t48h, t7d, t14d]\n}\n","/**\n * Get increase/decrease of value compared to the previous value (e.g. 24h volume compared to 24h volume the day before )\n * @param valueNow - more recent value\n * @param valueBefore - value to compare with\n */\nexport const getAmountChange = (valueNow?: number, valueBefore?: number) => {\n  if (valueNow && valueBefore) {\n    return valueNow - valueBefore\n  }\n  if (valueNow) {\n    return valueNow\n  }\n  return 0\n}\n\n/**\n * Get increase/decrease of value compared to the previous value as a percentage\n * @param valueNow - more recent value\n * @param valueBefore - value to compare with\n */\nexport const getPercentChange = (valueNow?: number, valueBefore?: number): number => {\n  if (valueNow && valueBefore) {\n    return ((valueNow - valueBefore) / valueBefore) * 100\n  }\n  return 0\n}\n"],"names":["window","__NEXT_P","push","__webpack_require__","Fields","TOKEN0","TOKEN1","StyledButton","styled","Button","param","theme","colors","input","text","PoolFinder","activeField","address","useAccount","t","useTranslation","native","useNativeCurrency","useState","setActiveField","currency0","setCurrency0","currency1","setCurrency1","usePair","undefined","pairState","pair","addPair","usePairAdder","useEffect","validPairNoLiquidity","PairState","Boolean","JSBI","reserve0","quotient","BIG_INT_ZERO","reserve1","position","useTokenBalance","account","liquidityToken","hasPosition","handleCurrencySelect","useCallback","currency","prerequisiteMessage","jsx_runtime","jsx","LightCard","padding","Text","textAlign","onPresentCurrencyModal","useModal","CurrencySearchModal","onCurrencySelect","showCommonBases","selectedCurrency","commonBasesType","CommonBasesType","Page","jsxs","AppBody","AppHeader","title","subtitle","backTo","AutoColumn","style","gap","endIcon","ChevronDownIcon","onClick","Row","CurrencyLogo","ml","symbol","ColumnCenter","AddIcon","as","Fragment","MinimalPositionCard","NextLinkFromReactRouter","to","variant","width","justify","currencyId","concat","fontWeight","Dots","PoolFinderPage","chains","CHAIN_IDS","find","getChangeForPeriod","valueNow","valueOnePeriodAgo","valueTwoPeriodsAgo","currentPeriodAmount","getAmountChange","previousPeriodAmount","percentageChange","getPercentChange","getDeltaTimestamps","utcCurrentTime","getUnixTime","Date","startOfMinute","subDays","subWeeks","valueBefore"],"sourceRoot":""}