{"version":3,"file":"static/chunks/9859-57d992fa80e8a471.js","mappings":"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","sources":["webpack://_N_E/./src/config/constants/info.ts","webpack://_N_E/./src/state/info/constant.ts","webpack://_N_E/./src/utils/formatInfoNumbers.ts","webpack://_N_E/./src/utils/getBlocksFromTimestamps.ts","webpack://_N_E/./src/utils/getTokenLogoURL.ts","webpack://_N_E/./src/utils/graphql.ts","webpack://_N_E/./src/utils/requestWithTimeout.ts","webpack://_N_E/./src/views/Info/utils/infoQueryHelpers.ts","webpack://_N_E/../../packages/uikit/src/components/Card/StyledCard.tsx","webpack://_N_E/../../packages/uikit/src/components/Card/Card.tsx","webpack://_N_E/<anon>"],"sourcesContent":["export const MINIMUM_SEARCH_CHARACTERS = 2\n\nexport const WEEKS_IN_YEAR = 52.1429\n\nexport const TOTAL_FEE = 0.0029\nexport const LP_HOLDERS_FEE = 0.0022\nexport const TREASURY_FEE = 0.0006\nexport const BUYBACK_FEE = 0.0001\n\nexport const PCS_V2_START = 1619136000 // April 23, 2021, 12:00:00 AM\nexport const PCS_ETH_START = 1664130827 // Sep 23, 2022, 02:33:47 AM\nexport const PCS_GOERLI_START = 1679427696\nexport const ONE_DAY_UNIX = 86400 // 24h * 60m * 60s\nexport const ONE_HOUR_SECONDS = 3600\n\nexport const ITEMS_PER_INFO_TABLE_PAGE = 10\n\n// These tokens are either incorrectly priced or have some other issues that spoil the query data\n// None of them present any interest as they have almost 0 daily trade volume\n\nexport const BSC_TOKEN_WHITELIST = []\nexport const TOKEN_BLACKLIST = [\n  // These ones are copied from v1 info\n  '0x495c7f3a713870f68f8b418b355c085dfdc412c3',\n  '0xc3761eb917cd790b30dad99f6cc5b4ff93c4f9ea',\n  '0xe31debd7abff90b06bca21010dd860d8701fd901',\n  '0xfc989fbb6b3024de5ca0144dc23c18a063942ac1',\n  '0xe40fc6ff5f2895b44268fd2e1a421e07f567e007',\n  '0xfd158609228b43aa380140b46fff3cdf9ad315de',\n  '0xc00af6212fcf0e6fd3143e692ccd4191dc308bea',\n  '0x205969b3ad459f7eba0dee07231a6357183d3fb6',\n  '0x0bd67d358636fd7b0597724aa4f20beedbf3073a',\n  '0xedf5d2a561e8a3cb5a846fbce24d2ccd88f50075',\n  '0x702b0789a3d4dade1688a0c8b7d944e5ba80fc30',\n  '0x041929a760d7049edaef0db246fa76ec975e90cc',\n  '0xba098df8c6409669f5e6ec971ac02cd5982ac108',\n  '0x1bbed115afe9e8d6e9255f18ef10d43ce6608d94',\n  '0xe99512305bf42745fae78003428dcaf662afb35d',\n  '0xbE609EAcbFca10F6E5504D39E3B113F808389056',\n  '0x847daf9dfdc22d5c61c4a857ec8733ef5950e82e',\n  '0xdbf8913dfe14536c0dae5dd06805afb2731f7e7b',\n  // These ones are newly found\n  '0xF1D50dB2C40b63D2c598e2A808d1871a40b1E653',\n  '0x4269e4090ff9dfc99d8846eb0d42e67f01c3ac8b',\n]\n\nexport const ETH_TOKEN_BLACKLIST = ['0x72b169ad8af6c4fb53056b6a2a85602ad6863864']\nexport const ETH_TOKEN_WHITELIST = [\n  '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n  '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n  '0xdac17f958d2ee523a2206206994597c13d831ec7',\n  '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n  '0x993864e43caa7f7f12953ad6feb1d1ca635b875f',\n]\n\nexport const GOERLI_TOKEN_BLACKLIST = ['0x72b169ad8af6c4fb53056b6a2a85602ad6863864']\nexport const GOERLI_TOKEN_WHITELIST = [\n  '0x65f6e06c324c7c167576756a365e221bc0657816',\n  '0xab738f29e55df25d69006aaefb638307b9b0ed3e',\n]\n","import { BLOCKS_CLIENT, BLOCKS_CLIENT_ETH, INFO_CLIENT, INFO_CLIENT_ETH } from 'config/constants/endpoints'\nimport { infoClientETH, infoClient, infoStableSwapClient } from 'utils/graphql'\n\nimport { ChainId } from '@pancakeswap/sdk'\nimport {\n  ETH_TOKEN_BLACKLIST,\n  PCS_ETH_START,\n  PCS_V2_START,\n  TOKEN_BLACKLIST,\n  BSC_TOKEN_WHITELIST,\n  ETH_TOKEN_WHITELIST,\n} from 'config/constants/info'\n\nexport type MultiChainName = 'BSC' | 'ETH'\n\nexport const multiChainQueryMainToken = {\n  BSC: 'BNB',\n  ETH: 'ETH',\n}\n\nexport const multiChainBlocksClient = {\n  BSC: BLOCKS_CLIENT,\n  ETH: BLOCKS_CLIENT_ETH,\n}\n\nexport const multiChainStartTime = {\n  BSC: PCS_V2_START,\n  ETH: PCS_ETH_START,\n}\n\nexport const multiChainId = {\n  BSC: ChainId.BSC,\n  ETH: ChainId.ETHEREUM,\n}\n\nexport const multiChainPaths = {\n  [ChainId.BSC]: '',\n  [ChainId.ETHEREUM]: '/eth',\n}\n\nexport const multiChainQueryClient = {\n  BSC: infoClient,\n  ETH: infoClientETH,\n}\n\nexport const multiChainQueryEndPoint = {\n  BSC: INFO_CLIENT,\n  ETH: INFO_CLIENT_ETH,\n}\n\nexport const multiChainScan = {\n  BSC: 'BscScan',\n  ETH: 'EtherScan',\n}\n\nexport const multiChainTokenBlackList = {\n  BSC: TOKEN_BLACKLIST,\n  ETH: ETH_TOKEN_BLACKLIST,\n}\n\nexport const multiChainTokenWhiteList = {\n  BSC: BSC_TOKEN_WHITELIST,\n  ETH: ETH_TOKEN_WHITELIST,\n}\n\nexport const getMultiChainQueryEndPointWithStableSwap = (chainName: MultiChainName) => {\n  const isStableSwap = checkIsStableSwap()\n  if (isStableSwap) return infoStableSwapClient\n  return multiChainQueryClient[chainName]\n}\n\nexport const checkIsStableSwap = () => window.location.href.includes('stableSwap')\n","import numeral from 'numeral'\n\n// Returns first 2 digits after first non-zero decimal\n// i.e. 0.001286 -> 0.0012, 0.9845 -> 0.98, 0.0102 -> 0.010, etc\n// Intended to be used for tokens whose value is less than $1\n// https://stackoverflow.com/a/23887837\nexport const getFirstThreeNonZeroDecimals = (value: number) => {\n  return value.toFixed(9).match(/^-?\\d*\\.?0*\\d{0,2}/)[0]\n}\n\nexport type formatAmountNotation = 'compact' | 'standard'\n\n/**\n * This function is used to format token prices, liquidity, amount of tokens in TX, and in general any numbers on info section\n * @param amount - amount to be formatted\n * @param notation - whether to show 1M or 1,000,000\n * @param displayThreshold - threshold below which it will return simply <displayThreshold instead of actual value, e.g. if 0.001 -> returns <0.001 for 0.0005\n * @param tokenPrecision - set to true when you want precision to be 3 decimals for values < 1 and 2 decimals for values > 1\n * @param isInteger - if true the values will contain decimal part only if the amount is > 1000\n * @returns formatted string ready to be displayed\n */\nexport const formatAmount = (\n  amount: number | undefined,\n  options?: {\n    notation?: formatAmountNotation\n    displayThreshold?: number\n    tokenPrecision?: boolean\n    isInteger?: boolean\n  },\n) => {\n  const {\n    notation = amount >= 10000 ? 'compact' : 'standard',\n    displayThreshold,\n    tokenPrecision,\n    isInteger,\n  } = options || { notation: amount >= 10000 ? 'compact' : 'standard' }\n  if (amount === 0) {\n    if (isInteger) {\n      return '0'\n    }\n    return '0.00'\n  }\n  if (!amount) return '-'\n  if (displayThreshold && amount < displayThreshold) {\n    return `<${displayThreshold}`\n  }\n  if (amount < 1 && !tokenPrecision) {\n    return getFirstThreeNonZeroDecimals(amount)\n  }\n\n  let precision = 2\n  if (tokenPrecision) {\n    precision = amount < 1 ? 3 : 2\n  }\n\n  let format = `0.${'0'.repeat(precision)}a`\n\n  if (notation === 'standard') {\n    format = `0,0.${'0'.repeat(precision)}`\n  }\n\n  if (isInteger && amount < 1000) {\n    format = '0'\n  }\n\n  const amountWithPrecision = parseFloat(amount.toFixed(precision))\n\n  // toUpperCase is needed cause numeral doesn't have support for capital K M B out of the box\n  return numeral(amountWithPrecision).format(format).toUpperCase()\n}\n","import { gql } from 'graphql-request'\nimport orderBy from 'lodash/orderBy'\nimport { multiChainBlocksClient, MultiChainName } from 'state/info/constant'\nimport { Block } from '../state/info/types'\nimport { multiQuery } from '../views/Info/utils/infoQueryHelpers'\n\nconst getBlockSubqueries = (timestamps: number[]) =>\n  timestamps.map((timestamp) => {\n    return `t${timestamp}:blocks(first: 1, orderBy: timestamp, orderDirection: desc, where: { timestamp_gt: ${timestamp}, timestamp_lt: ${\n      timestamp + 600\n    } }) {\n      number\n    }`\n  })\n\nconst blocksQueryConstructor = (subqueries: string[]) => {\n  return gql`query blocks {\n    ${subqueries}\n  }`\n}\n\n/**\n * @notice Fetches block objects for an array of timestamps.\n * @param {Array} timestamps\n */\nexport const getBlocksFromTimestamps = async (\n  timestamps: number[],\n  sortDirection: 'asc' | 'desc' | undefined = 'desc',\n  skipCount: number | undefined = 500,\n  chainName: MultiChainName | undefined = 'BSC',\n): Promise<Block[]> => {\n  if (timestamps?.length === 0) {\n    return []\n  }\n\n  const fetchedData: any = await multiQuery(\n    blocksQueryConstructor,\n    getBlockSubqueries(timestamps),\n    multiChainBlocksClient[chainName],\n    skipCount,\n  )\n\n  const blocks: Block[] = []\n  if (fetchedData) {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key of Object.keys(fetchedData)) {\n      if (fetchedData[key].length > 0) {\n        blocks.push({\n          timestamp: key.split('t')[1],\n          number: parseInt(fetchedData[key][0].number, 10),\n        })\n      }\n    }\n    // graphql-request does not guarantee same ordering of batched requests subqueries, hence manual sorting\n    return orderBy(blocks, (block) => block.number, sortDirection)\n  }\n  return blocks\n}\n","import { getAddress } from '@ethersproject/address'\nimport memoize from 'lodash/memoize'\nimport { ChainId, Token } from '@pancakeswap/sdk'\n\nconst mapping = {\n  [ChainId.BSC]: 'smartchain',\n  [ChainId.ETHEREUM]: 'ethereum',\n}\n\nconst getTokenLogoURL = memoize(\n  (token?: Token) => {\n    if (token && mapping[token.chainId]) {\n      return `https://assets-cdn.trustwallet.com/blockchains/${mapping[token.chainId]}/assets/${getAddress(\n        token.address,\n      )}/logo.png`\n    }\n    return null\n  },\n  (t) => `${t.chainId}#${t.address}`,\n)\n\nexport const getTokenLogoURLByAddress = memoize(\n  (address?: string, chainId?: number) => {\n    if (address && chainId && mapping[chainId]) {\n      return `https://assets-cdn.trustwallet.com/blockchains/${mapping[chainId]}/assets/${getAddress(address)}/logo.png`\n    }\n    return null\n  },\n  (address, chainId) => `${chainId}#${address}`,\n)\n\nexport default getTokenLogoURL\n","import { BIT_QUERY, INFO_CLIENT, STABLESWAP_SUBGRAPH_CLIENT, INFO_CLIENT_ETH } from 'config/constants/endpoints'\nimport { GraphQLClient } from 'graphql-request'\nimport { INFO_CLIENT_WITH_CHAIN } from '../config/constants/endpoints'\n\n// Extra headers\n// Mostly for dev environment\n// No production env check since production preview might also need them\nexport const getGQLHeaders = (endpoint: string) => {\n  if (endpoint === INFO_CLIENT) {\n    return {\n      origin:\n        process.env.NEXT_PUBLIC_NODE_REAL_HEADER ||\n        // hack for inject CI secret on window\n        (typeof window !== 'undefined' &&\n          // @ts-ignore\n          window.nrHeader),\n    }\n  }\n  return undefined\n}\n\nexport const infoClient = new GraphQLClient(INFO_CLIENT)\n\nexport const infoClientWithChain = (chainId: number) => {\n  return new GraphQLClient(INFO_CLIENT_WITH_CHAIN[chainId], { headers: getGQLHeaders(INFO_CLIENT_WITH_CHAIN[chainId]) })\n}\n\nexport const infoClientETH = new GraphQLClient(INFO_CLIENT_ETH)\n\nexport const infoStableSwapClient = new GraphQLClient(STABLESWAP_SUBGRAPH_CLIENT)\n\nexport const infoServerClient = new GraphQLClient(INFO_CLIENT, {\n  timeout: 5000,\n  headers: {\n    origin: 'https://pancakeswap.finance',\n  },\n})\n\nexport const stableSwapClient = new GraphQLClient(STABLESWAP_SUBGRAPH_CLIENT)\n\nexport const bitQueryServerClient = new GraphQLClient(BIT_QUERY, {\n  headers: {\n    // only server, no `NEXT_PUBLIC` not going to expose in client\n    'X-API-KEY': process.env.BIT_QUERY_HEADER,\n  },\n  timeout: 5000,\n})\n","import { GraphQLClient } from 'graphql-request'\n\nconst requestWithTimeout = <T>(\n  graphQLClient: GraphQLClient,\n  request: string,\n  variables?: any,\n  timeout = 30000,\n): Promise<T> => {\n  return Promise.race([\n    variables ? graphQLClient.request<T>(request, variables) : graphQLClient.request<T>(request),\n    new Promise((_, reject) => {\n      setTimeout(() => {\n        reject(new Error(`Request timed out after ${timeout} milliseconds`))\n      }, timeout)\n    }),\n  ]) as Promise<T>\n}\n\nexport default requestWithTimeout\n","import { GraphQLClient } from 'graphql-request'\nimport { getGQLHeaders } from 'utils/graphql'\nimport requestWithTimeout from 'utils/requestWithTimeout'\n\n/**\n * Helper function to get large amount GraphQL subqueries\n * @param queryConstructor constructor function that combines subqueries\n * @param subqueries individual queries\n * @param endpoint GraphQL endpoint\n * @param skipCount how many subqueries to fire at a time\n * @returns\n */\nexport const multiQuery = async (\n  queryConstructor: (subqueries: string[]) => string,\n  subqueries: string[],\n  endpoint: string,\n  skipCount = 1000,\n) => {\n  let fetchedData = {}\n  let allFound = false\n  let skip = 0\n  const client = new GraphQLClient(endpoint, { headers: getGQLHeaders(endpoint) })\n  try {\n    while (!allFound) {\n      let end = subqueries.length\n      if (skip + skipCount < subqueries.length) {\n        end = skip + skipCount\n      }\n      const subqueriesSlice = subqueries.slice(skip, end)\n      // eslint-disable-next-line no-await-in-loop\n      const result: any = await requestWithTimeout(client, queryConstructor(subqueriesSlice))\n      fetchedData = {\n        ...fetchedData,\n        ...result,\n      }\n      allFound = Object.keys(result).length < skipCount || skip + skipCount > subqueries.length\n      skip += skipCount\n    }\n    return fetchedData\n  } catch (error) {\n    console.error('Failed to fetch info data', error)\n    return null\n  }\n}\n","import styled, { css, DefaultTheme } from \"styled-components\";\nimport { space } from \"styled-system\";\nimport { promotedGradient } from \"../../util/animationToolkit\";\nimport { Box } from \"../Box\";\nimport { CardProps } from \"./types\";\n\ninterface StyledCardProps extends CardProps {\n  theme: DefaultTheme;\n}\n\n/**\n * Priority: Warning --> Success --> Active\n */\nconst getBorderColor = ({ isActive, isSuccess, isWarning, borderBackground, theme }: StyledCardProps) => {\n  if (borderBackground) {\n    return borderBackground;\n  }\n  if (isWarning) {\n    return theme.colors.warning;\n  }\n\n  if (isSuccess) {\n    return theme.colors.success;\n  }\n\n  if (isActive) {\n    return `linear-gradient(180deg, ${theme.colors.primaryBright}, ${theme.colors.secondary})`;\n  }\n\n  return theme.colors.cardBorder;\n};\n\nexport const StyledCard = styled.div<StyledCardProps>`\n  background: ${getBorderColor};\n  border-radius: ${({ theme }) => theme.radii.card};\n  color: ${({ theme, isDisabled }) => theme.colors[isDisabled ? \"textDisabled\" : \"text\"]};\n  overflow: hidden;\n  position: relative;\n\n  ${({ isActive }) =>\n    isActive &&\n    css`\n      animation: ${promotedGradient} 3s ease infinite;\n      background-size: 400% 400%;\n    `}\n\n  padding: 1px 1px 3px 1px;\n\n  ${space}\n`;\n\nexport const StyledCardInner = styled(Box)<{ background?: string; hasCustomBorder: boolean }>`\n  width: 100%;\n  height: 100%;\n  overflow: ${({ hasCustomBorder }) => (hasCustomBorder ? \"initial\" : \"inherit\")};\n  background: ${({ theme, background }) => background ?? theme.card.background};\n  border-radius: ${({ theme }) => theme.radii.card};\n`;\n\nStyledCard.defaultProps = {\n  isActive: false,\n  isSuccess: false,\n  isWarning: false,\n  isDisabled: false,\n};\n","import React from \"react\";\nimport { StyledCard, StyledCardInner } from \"./StyledCard\";\nimport { CardProps } from \"./types\";\n\nconst Card: React.FC<React.PropsWithChildren<CardProps>> = ({ ribbon, children, background, ...props }) => {\n  return (\n    <StyledCard {...props}>\n      <StyledCardInner background={background} hasCustomBorder={!!props.borderBackground}>\n        {ribbon}\n        {children}\n      </StyledCardInner>\n    </StyledCard>\n  );\n};\nexport default Card;\n"],"names":["MINIMUM_SEARCH_CHARACTERS","WEEKS_IN_YEAR","TOTAL_FEE","LP_HOLDERS_FEE","TREASURY_FEE","BUYBACK_FEE","PCS_V2_START","PCS_ETH_START","ONE_DAY_UNIX","ONE_HOUR_SECONDS","ITEMS_PER_INFO_TABLE_PAGE","BSC_TOKEN_WHITELIST","TOKEN_BLACKLIST","ETH_TOKEN_BLACKLIST","ETH_TOKEN_WHITELIST","_obj","multiChainQueryMainToken","BSC","ETH","multiChainBlocksClient","BLOCKS_CLIENT","BLOCKS_CLIENT_ETH","multiChainStartTime","multiChainId","ChainId","multiChainPaths","_swc_helpers_src_define_property_mjs__WEBPACK_IMPORTED_MODULE_4__","Z","multiChainQueryClient","infoClient","infoClientETH","multiChainQueryEndPoint","INFO_CLIENT","INFO_CLIENT_ETH","multiChainScan","multiChainTokenBlackList","multiChainTokenWhiteList","getMultiChainQueryEndPointWithStableSwap","chainName","infoStableSwapClient","checkIsStableSwap","window","location","href","includes","formatAmount","amount","options","notation","_ref_notation","displayThreshold","tokenPrecision","isInteger","concat","value","toFixed","match","precision","format","repeat","amountWithPrecision","parseFloat","numeral","toUpperCase","blocksQueryConstructor","subqueries","gql","getBlocksFromTimestamps","_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_5__","timestamps","sortDirection","skipCount","fetchedData","blocks","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","key","length","multiQuery","map","timestamp","_state","sent","undefined","Object","keys","next","done","push","split","number","parseInt","err","return","orderBy","block","mapping","_swc_helpers_src_define_property_mjs__WEBPACK_IMPORTED_MODULE_2__","getTokenLogoURL","memoize","token","chainId","getAddress","address","t","__webpack_exports__","getGQLHeaders","endpoint","origin","process","env","NEXT_PUBLIC_NODE_REAL_HEADER","nrHeader","GraphQLClient","STABLESWAP_SUBGRAPH_CLIENT","timeout","headers","stableSwapClient","BIT_QUERY","BIT_QUERY_HEADER","graphQLClient","request","variables","Promise","race","_","reject","setTimeout","_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_2__","queryConstructor","allFound","skip","client","end","subqueriesSlice","result","slice","requestWithTimeout","_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_5__","console","error","StyledCard","styled","param","isActive","isSuccess","isWarning","borderBackground","theme","colors","warning","success","primaryBright","secondary","cardBorder","radii","card","isDisabled","css","promotedGradient","space","StyledCardInner","Box","hasCustomBorder","background","defaultProps","Card_Card","_param","ribbon","children","props","jsx_runtime","jsx","jsxs"],"sourceRoot":""}