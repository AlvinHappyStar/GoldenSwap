{"version":3,"file":"static/chunks/5086.c03f361ea0f9c601.js","mappings":"6NAuaIA,EAAqB,cAAQ,CAAEC,UAAW,EAAK,GAAGC,OAAO,CA1YnC,CACxBC,QAAS,0CACTC,IAAK,cACLC,MAAO,yBACPC,YAAa,yHACbC,YAAa,CACXC,QAAS,CACPC,KAAM,SACNH,YAAa,oDACbI,SAAU,CACR,CACEC,MAAO,EACPC,MAAO,EACPC,MAAO,CACT,EACD,CACDC,qBAAsB,GACtBC,WAAY,CACVJ,MAAO,CACLF,KAAM,UACNH,YAAa,2HACbU,QAAS,EACTN,SAAU,CAAC,EAAG,EAAE,EAElBE,MAAO,CACLH,KAAM,UACNH,YAAa,wFACbU,QAAS,EACTN,SAAU,CAAC,EAAG,EAAE,EAElBG,MAAO,CACLJ,KAAM,UACNH,YAAa,kFACbU,QAAS,EACTN,SAAU,CAAC,EAAG,EAAE,CAEpB,EACAO,SAAU,CAAC,QAAS,QAAS,QAAQ,EAEvCC,cAAe,CACbT,KAAM,SACNH,YAAa,iCACba,UAAW,EACXC,UAAW,GACXC,QAAS,WACTX,SAAU,CAAC,WAAY,aAAa,EAEtCY,oBAAqB,CACnBb,KAAM,SACNH,YAAa,yCACba,UAAW,EACXC,UAAW,GACXC,QAAS,WACTX,SAAU,CAAC,QAAS,qBAAsB,UAAU,EAEtDa,aAAc,CACZd,KAAM,SACNH,YAAa,uEACbkB,cAAe,GACfC,cAAe,CACbC,KAAM,mCACR,EACAZ,qBAAsB,CACpBY,KAAM,8BACR,EACAhB,SAAU,CACR,CACEiB,MAAO,UACPC,kBAAmB,EACrB,EACA,CACE,+BAAgC,CAC9B,EAAK,CACHC,cAAe,6CACfC,aAAc,4CAChB,CACF,CACF,EACD,EAEHC,wBAAyB,CACvBC,MAAO,CACL,CACEvB,KAAM,SACNU,UAAW,EACXC,UAAW,GACXV,SAAU,CAAC,SAAS,EAEtB,CACED,KAAM,UACNC,SAAU,CAAC,GAAK,EAElB,CACED,KAAM,SACNC,SAAU,CAAC,GAAG,EAEhB,CACED,KAAM,MACR,EACD,EAEHwB,eAAgB,CACdD,MAAO,CACL,CACEN,KAAM,uCACR,EACA,CACEjB,KAAM,SACNe,cAAe,GACfC,cAAe,CACbC,KAAM,mCACR,EACAZ,qBAAsB,CACpBY,KAAM,oCACR,CACF,EACD,EAEHQ,qBAAsB,CACpBF,MAAO,CACL,CACEN,KAAM,uCACR,EACA,CACEjB,KAAM,SACNe,cAAe,GACfC,cAAe,CACbC,KAAM,mCACR,EACAZ,qBAAsB,CACpBY,KAAM,oCACR,CACF,EACD,EAEHS,qBAAsB,CACpBH,MAAO,CACL,CACEN,KAAM,uCACR,EACD,EAEHU,cAAe,CACb3B,KAAM,SACNH,YAAa,6EACbQ,qBAAsB,GACtBC,WAAY,CACVsB,KAAM,CACJ5B,KAAM,SACNH,YAAa,sBACbe,QAAS,YACTF,UAAW,EACXC,UAAW,EACb,EACAd,YAAa,CACXG,KAAM,SACNH,YAAa,yCACbe,QAAS,iBACTF,UAAW,EACXC,UAAW,GACb,CACF,EACAH,SAAU,CAAC,OAAQ,cAAc,CACjCP,SAAU,CACR,CACE2B,KAAM,aACN/B,YAAa,4CACf,EACD,EAEHgC,UAAW,CACT7B,KAAM,SACNH,YAAa,8CACbQ,qBAAsB,GACtBC,WAAY,CACVwB,QAAS,CACP9B,KAAM,UACNH,YAAa,oEACbU,QAAS,EACTN,SAAU,CAAC,EAAG,GAAG,EAEnB8B,QAAS,CACP/B,KAAM,SACNH,YAAa,iEACbe,QAAS,sBACTX,SAAU,CAAC,6CAA6C,EAE1D+B,SAAU,CACRhC,KAAM,UACNH,YAAa,+CACbU,QAAS,EACT0B,QAAS,IACThC,SAAU,CAAC,GAAG,EAEhB2B,KAAM,CACJ5B,KAAM,SACNH,YAAa,wBACba,UAAW,EACXC,UAAW,GACXC,QAAS,6DACTX,SAAU,CAAC,WAAW,EAExBiC,OAAQ,CACNlC,KAAM,SACNH,YAAa,iDACbe,QAAS,yBACTF,UAAW,EACXC,UAAW,GACXV,SAAU,CAAC,OAAO,EAEpBkC,QAAS,CACPnC,KAAM,SACNH,YAAa,gJACbuC,OAAQ,MACRnC,SAAU,CAAC,wDAAwD,EAErEoC,KAAM,CACJrC,KAAM,QACNH,YAAa,4FACbyC,MAAO,CACLrB,KAAM,6BACR,EACAsB,SAAU,GACVtC,SAAU,CAAC,aAAc,WAAW,EAEtCuC,WAAY,CACVvB,KAAM,4BACR,CACF,EACAT,SAAU,CAAC,UAAW,UAAW,WAAY,OAAQ,SAAS,EAEhEiC,eAAgB,CACdzC,KAAM,SACNH,YAAa,8CACbQ,qBAAsB,GACtBC,WAAY,CACVwB,QAAS,CACP9B,KAAM,UACNH,YAAa,8EACbU,QAAS,EACTN,SAAU,CAAC,EAAG,GAAG,EAEnB8B,QAAS,CACP/B,KAAM,SACNH,YAAa,oDACbI,SAAU,CAAC,6BAA6B,EAE1C+B,SAAU,CACRhC,KAAM,UACNH,YAAa,+CACbU,QAAS,EACT0B,QAAS,IACThC,SAAU,CAAC,GAAG,EAEhB2B,KAAM,CACJ5B,KAAM,SACNH,YAAa,wBACba,UAAW,EACXC,UAAW,GACXC,QAAS,6DACTX,SAAU,CAAC,WAAW,EAExBiC,OAAQ,CACNlC,KAAM,SACNH,YAAa,iDACbe,QAAS,yBACTF,UAAW,EACXC,UAAW,GACXV,SAAU,CAAC,OAAO,EAEpBkC,QAAS,CACPnC,KAAM,SACNH,YAAa,gJACbuC,OAAQ,MACRnC,SAAU,CAAC,wDAAwD,EAErEoC,KAAM,CACJrC,KAAM,QACNH,YAAa,4FACbyC,MAAO,CACLrB,KAAM,6BACR,EACAsB,SAAU,GACVtC,SAAU,CAAC,aAAc,WAAW,EAEtCuC,WAAY,CACVvB,KAAM,4BACR,CACF,EACAT,SAAU,CAAC,UAAW,UAAW,WAAY,OAAQ,SAAS,CAElE,EACAR,KAAM,SACNK,qBAAsB,GACtBC,WAAY,CACVsB,KAAM,CACJ5B,KAAM,SACNH,YAAa,6BACba,UAAW,EACXC,UAAW,GACXC,QAAS,YACTX,SAAU,CAAC,gBAAgB,EAE7ByC,UAAW,CACT1C,KAAM,SACNoC,OAAQ,YACRvC,YAAa,8FACf,EACA8C,OAAQ,CACN3C,KAAM,QACR,EACA4C,QAAS,CACP3B,KAAM,uBACR,EACA4B,OAAQ,CACN7C,KAAM,QACNH,YAAa,0CACbiD,SAAU,EACVP,SAAU,GACZ,EACAQ,SAAU,CACR/C,KAAM,QACNH,YAAa,yFACbyC,MAAO,CACLtC,KAAM,SACNH,YAAa,iDACba,UAAW,EACXC,UAAW,GACXC,QAAS,YACTX,SAAU,CAAC,WAAY,UAAW,kBAAkB,EAEtDsC,SAAU,GACVS,YAAa,EACf,EACAX,KAAM,CACJrC,KAAM,SACNH,YAAa,6DACbmB,cAAe,CACbC,KAAM,6BACR,EACAZ,qBAAsB,CACpBY,KAAM,6BACR,EACAF,cAAe,GACfd,SAAU,CACR,CACEgD,WAAY,CACVrB,KAAM,aACN/B,YAAa,4CACf,CACF,EACD,EAEHsC,QAAS,CACPnC,KAAM,SACNH,YAAa,0EACbuC,OAAQ,MACRnC,SAAU,CAAC,wDAAwD,CAEvE,EACAiD,GAAI,CACF5C,WAAY,CAAEqC,OAAQ,CAAEQ,MAAO,OAAQ,CAAE,EACzC3C,SAAU,CAAC,OAAQ,YAAa,UAAW,SAAU,SAAS,EAEhE4C,KAAM,CACJ9C,WAAY,CACVuC,OAAQ,CACNP,MAAO,CACLrB,KAAM,8BACR,EACAjB,KAAM,QACNH,YAAa,0CACbiD,SAAU,EACVP,SAAU,GACZ,CACF,CACF,EACAc,KAAM,CACJ/C,WAAY,CACVuC,OAAQ,CACNP,MAAO,CACLrB,KAAM,yBACR,EACAjB,KAAM,QACNH,YAAa,0CACbiD,SAAU,EACVP,SAAU,GACZ,CACF,CACF,EACA/B,SAAU,CAAC,OAAQ,YAAa,UAAW,SAAS,GAKtD,SAAS8C,EAAaC,CAAO,CAAE,CAC7B,MAAOC,CAAAA,EAAAA,EAAAA,EAAAA,EAAQ,IAAI,CAAE,IAAI,CAAE,UAAa,KAClCC,EAAIC,EACFC,EACGC,EACDC,EACAC,EACFC,EAcEC,EAOEC,kEAzBJN,EAAOO,SAtaEC,CAAG,CAAE,CAEtB,IADIV,EAAIC,EAER,OADiBS,EAAIC,KAAK,CAAC,IAAI,CAAC,EAAE,CAACC,WAAW,IAE5C,IAAK,QACH,MAAO,CAACF,EAAI,KACT,OACH,MAAO,CAAE,QAAwBG,MAAA,CAAjBH,EAAII,SAAS,CAAC,IAAMJ,EAAI,KACrC,OACH,IAAMK,EAAO,IAA+C,EAA9Cf,CAAAA,EAAKU,EAAIM,KAAK,CAAC,wBAAkC,KAAK,EAAIhB,CAAE,CAAC,EAAE,CAC7E,MAAO,CAAE,oCAAwCa,MAAA,CAALE,EAAK,KAAK,wBAA4BF,MAAA,CAALE,EAAK,KAAG,KAClF,OACH,IAAM5C,EAAO,IAA+C,EAA9C8B,CAAAA,EAAKS,EAAIM,KAAK,CAAC,wBAAkC,KAAK,EAAIf,CAAE,CAAC,EAAE,CAC7E,MAAO,CAAE,oCAAwCY,MAAA,CAAL1C,EAAK,KAAK,wBAA4B0C,MAAA,CAAL1C,EAAK,KAAG,SAErF,MAAO,EAAE,CAEf,EAqZ2B2B,GACdK,EAAI,uBAAGA,CAAAA,EAAID,EAAKe,MAAM,cACvBb,EAAMF,CAAI,CAACC,EAAE,CACbE,EAASF,IAAMD,EAAKe,MAAM,CAAG,mBAGtB,gCAAMC,MAAMd,kBAAvBE,EAAWa,EAAAC,IAAA,gBAGX,GADAC,QAAQC,KAAK,CAAC,uBAAwBxB,EAD/BwB,EAAAA,IAAAA,IAEHjB,EACF,MAAM,MAAU,2BAAmCQ,MAAA,CAARf,GAAW,CACxD,mBAEF,GAAI,CAACQ,EAASiB,EAAE,CAAE,CAChB,GAAIlB,EACF,MAAM,MAAU,2BAAmCQ,MAAA,CAARf,GAAW,CACxD,WACF,CAAC,MACY,GAAMQ,EAASC,IAAI,WAMhC,GALIA,CADEA,EAAOY,EAAAC,IAAA,IACJhC,MAAM,EACboC,EAAOjB,EAAKnB,MAAM,CAAE,SAACqC,CAAAA,CAAU,CAC7B,MAAOA,CAAAA,EAAMhD,MAAM,EAAGgD,IAAAA,EAAMhD,MAAM,CAACwC,MAAM,GAGzC,CAACnF,EAAmByE,GAMtB,MALMC,EAAmB,IAIV,EAJWP,CAAAA,EAAK,IAAwC,EAAvCD,CAAAA,EAAKlE,EAAmB4F,MAAM,EAAY,KAAK,EAAI1B,EAAG2B,MAAM,CAAC,SAACC,CAAAA,CAAMN,CAAAA,CAAU,CAE5G,IADIO,EACEC,EAAM,GAAqBjB,MAAA,CAAlBS,EAAMS,QAAQ,CAAC,KAA4ClB,MAAA,CAAzC,IAA6B,EAA5BgB,CAAAA,EAAMP,EAAMU,OAAO,EAAYH,EAAM,EAAE,EACzE,OAAOD,EAAKX,MAAM,CAAG,EAAI,GAAYa,MAAAA,CAATF,EAAK,MAAQf,MAAA,CAAJiB,GAAQ,GAAOjB,MAAA,CAAJiB,EAAK,EACpD,GAAG,EAAY7B,EAAK,eAAe,CAChC,MAAU,iCAAkDY,MAAA,CAAjBL,GAAoB,CAEvE,SAAOD,iBA/BwBJ,iBAiCjC,MAAM,MAAU,kCAAmC,GACrD,EACF","sources":["webpack://_N_E/../../packages/token-lists/dist/getTokenList-2FAKUE6D.mjs","webpack://_N_E/<anon>"],"sourcesContent":["import {\n  __async\n} from \"./chunk-2L3ZO4UM.mjs\";\n\n// ../utils/uriToHttp.ts\nfunction uriToHttp(uri) {\n  var _a, _b;\n  const protocol = uri.split(\":\")[0].toLowerCase();\n  switch (protocol) {\n    case \"https\":\n      return [uri];\n    case \"http\":\n      return [`https${uri.substring(4)}`, uri];\n    case \"ipfs\":\n      const hash = (_a = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)) == null ? void 0 : _a[2];\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`];\n    case \"ipns\":\n      const name = (_b = uri.match(/^ipns:(\\/\\/)?(.*)$/i)) == null ? void 0 : _b[2];\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`];\n    default:\n      return [];\n  }\n}\n\n// react/getTokenList.ts\nimport remove from \"lodash/remove\";\nimport Ajv from \"ajv\";\n\n// schema/pancakeswap.json\nvar pancakeswap_default = {\n  $schema: \"http://json-schema.org/draft-07/schema#\",\n  $id: \"pancakeswap\",\n  title: \"PancakeSwap Token List\",\n  description: \"Schema for lists of tokens compatible with the PancakeSwap Interface, including Uniswap standard and PancakeSwap Aptos\",\n  definitions: {\n    Version: {\n      type: \"object\",\n      description: \"The version of the list, used in change detection\",\n      examples: [\n        {\n          major: 1,\n          minor: 0,\n          patch: 0\n        }\n      ],\n      additionalProperties: false,\n      properties: {\n        major: {\n          type: \"integer\",\n          description: \"The major version of the list. Must be incremented when tokens are removed from the list or token addresses are changed.\",\n          minimum: 0,\n          examples: [1, 2]\n        },\n        minor: {\n          type: \"integer\",\n          description: \"The minor version of the list. Must be incremented when tokens are added to the list.\",\n          minimum: 0,\n          examples: [0, 1]\n        },\n        patch: {\n          type: \"integer\",\n          description: \"The patch version of the list. Must be incremented for any changes to the list.\",\n          minimum: 0,\n          examples: [0, 1]\n        }\n      },\n      required: [\"major\", \"minor\", \"patch\"]\n    },\n    TagIdentifier: {\n      type: \"string\",\n      description: \"The unique identifier of a tag\",\n      minLength: 1,\n      maxLength: 10,\n      pattern: \"^[\\\\w]+$\",\n      examples: [\"compound\", \"stablecoin\"]\n    },\n    ExtensionIdentifier: {\n      type: \"string\",\n      description: \"The name of a token extension property\",\n      minLength: 1,\n      maxLength: 40,\n      pattern: \"^[\\\\w]+$\",\n      examples: [\"color\", \"is_fee_on_transfer\", \"aliases\"]\n    },\n    ExtensionMap: {\n      type: \"object\",\n      description: \"An object containing any arbitrary or vendor-specific token metadata\",\n      maxProperties: 10,\n      propertyNames: {\n        $ref: \"#/definitions/ExtensionIdentifier\"\n      },\n      additionalProperties: {\n        $ref: \"#/definitions/ExtensionValue\"\n      },\n      examples: [\n        {\n          color: \"#000000\",\n          is_verified_by_me: true\n        },\n        {\n          \"x-bridged-addresses-by-chain\": {\n            \"1\": {\n              bridgeAddress: \"0x4200000000000000000000000000000000000010\",\n              tokenAddress: \"0x4200000000000000000000000000000000000010\"\n            }\n          }\n        }\n      ]\n    },\n    ExtensionPrimitiveValue: {\n      anyOf: [\n        {\n          type: \"string\",\n          minLength: 1,\n          maxLength: 42,\n          examples: [\"#00000\"]\n        },\n        {\n          type: \"boolean\",\n          examples: [true]\n        },\n        {\n          type: \"number\",\n          examples: [15]\n        },\n        {\n          type: \"null\"\n        }\n      ]\n    },\n    ExtensionValue: {\n      anyOf: [\n        {\n          $ref: \"#/definitions/ExtensionPrimitiveValue\"\n        },\n        {\n          type: \"object\",\n          maxProperties: 10,\n          propertyNames: {\n            $ref: \"#/definitions/ExtensionIdentifier\"\n          },\n          additionalProperties: {\n            $ref: \"#/definitions/ExtensionValueInner0\"\n          }\n        }\n      ]\n    },\n    ExtensionValueInner0: {\n      anyOf: [\n        {\n          $ref: \"#/definitions/ExtensionPrimitiveValue\"\n        },\n        {\n          type: \"object\",\n          maxProperties: 10,\n          propertyNames: {\n            $ref: \"#/definitions/ExtensionIdentifier\"\n          },\n          additionalProperties: {\n            $ref: \"#/definitions/ExtensionValueInner1\"\n          }\n        }\n      ]\n    },\n    ExtensionValueInner1: {\n      anyOf: [\n        {\n          $ref: \"#/definitions/ExtensionPrimitiveValue\"\n        }\n      ]\n    },\n    TagDefinition: {\n      type: \"object\",\n      description: \"Definition of a tag that can be associated with a token via its identifier\",\n      additionalProperties: false,\n      properties: {\n        name: {\n          type: \"string\",\n          description: \"The name of the tag\",\n          pattern: \"^[ \\\\w]+$\",\n          minLength: 1,\n          maxLength: 20\n        },\n        description: {\n          type: \"string\",\n          description: \"A user-friendly description of the tag\",\n          pattern: \"^[ \\\\w\\\\.,:]+$\",\n          minLength: 1,\n          maxLength: 200\n        }\n      },\n      required: [\"name\", \"description\"],\n      examples: [\n        {\n          name: \"Stablecoin\",\n          description: \"A token with value pegged to another asset\"\n        }\n      ]\n    },\n    TokenInfo: {\n      type: \"object\",\n      description: \"Metadata for a single token in a token list\",\n      additionalProperties: false,\n      properties: {\n        chainId: {\n          type: \"integer\",\n          description: \"The chain ID of the Ethereum network where this token is deployed\",\n          minimum: 1,\n          examples: [1, 42]\n        },\n        address: {\n          type: \"string\",\n          description: \"The checksummed address of the token on the specified chain ID\",\n          pattern: \"^0x[a-fA-F0-9]{40}$\",\n          examples: [\"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\"]\n        },\n        decimals: {\n          type: \"integer\",\n          description: \"The number of decimals for the token balance\",\n          minimum: 0,\n          maximum: 255,\n          examples: [18]\n        },\n        name: {\n          type: \"string\",\n          description: \"The name of the token\",\n          minLength: 1,\n          maxLength: 40,\n          pattern: \"^[ \\\\w.'+\\\\-%/\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\xFF:&\\\\[\\\\]\\\\(\\\\)]+$\",\n          examples: [\"USD Coin\"]\n        },\n        symbol: {\n          type: \"string\",\n          description: \"The symbol for the token; must be alphanumeric\",\n          pattern: \"^[a-zA-Z0-9+\\\\-%/$.]+$\",\n          minLength: 1,\n          maxLength: 20,\n          examples: [\"USDC\"]\n        },\n        logoURI: {\n          type: \"string\",\n          description: \"A URI to the token logo asset; if not set, interface will attempt to find a logo based on the token address; suggest SVG or PNG of size 64x64\",\n          format: \"uri\",\n          examples: [\"ipfs://QmXfzKRvjZz3u5JRgC4v5mGVbm9ahrUiB4DgzHBsnWbTMM\"]\n        },\n        tags: {\n          type: \"array\",\n          description: \"An array of tag identifiers associated with the token; tags are defined at the list level\",\n          items: {\n            $ref: \"#/definitions/TagIdentifier\"\n          },\n          maxItems: 10,\n          examples: [\"stablecoin\", \"compound\"]\n        },\n        extensions: {\n          $ref: \"#/definitions/ExtensionMap\"\n        }\n      },\n      required: [\"chainId\", \"address\", \"decimals\", \"name\", \"symbol\"]\n    },\n    AptosTokenInfo: {\n      type: \"object\",\n      description: \"Metadata for a single token in a token list\",\n      additionalProperties: false,\n      properties: {\n        chainId: {\n          type: \"integer\",\n          description: \"The chain ID of the Aptos network where this token is deployed, 0 is devent\",\n          minimum: 0,\n          examples: [1, 42]\n        },\n        address: {\n          type: \"string\",\n          description: \"The address of the coin on the specified chain ID\",\n          examples: [\"0x1::aptos_coin::AptosCoin\"]\n        },\n        decimals: {\n          type: \"integer\",\n          description: \"The number of decimals for the token balance\",\n          minimum: 0,\n          maximum: 255,\n          examples: [18]\n        },\n        name: {\n          type: \"string\",\n          description: \"The name of the token\",\n          minLength: 1,\n          maxLength: 40,\n          pattern: \"^[ \\\\w.'+\\\\-%/\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\xFF:&\\\\[\\\\]\\\\(\\\\)]+$\",\n          examples: [\"USD Coin\"]\n        },\n        symbol: {\n          type: \"string\",\n          description: \"The symbol for the token; must be alphanumeric\",\n          pattern: \"^[a-zA-Z0-9+\\\\-%/$.]+$\",\n          minLength: 1,\n          maxLength: 20,\n          examples: [\"USDC\"]\n        },\n        logoURI: {\n          type: \"string\",\n          description: \"A URI to the token logo asset; if not set, interface will attempt to find a logo based on the token address; suggest SVG or PNG of size 64x64\",\n          format: \"uri\",\n          examples: [\"ipfs://QmXfzKRvjZz3u5JRgC4v5mGVbm9ahrUiB4DgzHBsnWbTMM\"]\n        },\n        tags: {\n          type: \"array\",\n          description: \"An array of tag identifiers associated with the token; tags are defined at the list level\",\n          items: {\n            $ref: \"#/definitions/TagIdentifier\"\n          },\n          maxItems: 10,\n          examples: [\"stablecoin\", \"compound\"]\n        },\n        extensions: {\n          $ref: \"#/definitions/ExtensionMap\"\n        }\n      },\n      required: [\"chainId\", \"address\", \"decimals\", \"name\", \"symbol\"]\n    }\n  },\n  type: \"object\",\n  additionalProperties: false,\n  properties: {\n    name: {\n      type: \"string\",\n      description: \"The name of the token list\",\n      minLength: 1,\n      maxLength: 30,\n      pattern: \"^[\\\\w ]+$\",\n      examples: [\"My Token List\"]\n    },\n    timestamp: {\n      type: \"string\",\n      format: \"date-time\",\n      description: \"The timestamp of this list version; i.e. when this immutable version of the list was created\"\n    },\n    schema: {\n      type: \"string\"\n    },\n    version: {\n      $ref: \"#/definitions/Version\"\n    },\n    tokens: {\n      type: \"array\",\n      description: \"The list of tokens included in the list\",\n      minItems: 1,\n      maxItems: 1e4\n    },\n    keywords: {\n      type: \"array\",\n      description: \"Keywords associated with the contents of the list; may be used in list discoverability\",\n      items: {\n        type: \"string\",\n        description: \"A keyword to describe the contents of the list\",\n        minLength: 1,\n        maxLength: 20,\n        pattern: \"^[\\\\w ]+$\",\n        examples: [\"compound\", \"lending\", \"personal tokens\"]\n      },\n      maxItems: 20,\n      uniqueItems: true\n    },\n    tags: {\n      type: \"object\",\n      description: \"A mapping of tag identifiers to their name and description\",\n      propertyNames: {\n        $ref: \"#/definitions/TagIdentifier\"\n      },\n      additionalProperties: {\n        $ref: \"#/definitions/TagDefinition\"\n      },\n      maxProperties: 20,\n      examples: [\n        {\n          stablecoin: {\n            name: \"Stablecoin\",\n            description: \"A token with value pegged to another asset\"\n          }\n        }\n      ]\n    },\n    logoURI: {\n      type: \"string\",\n      description: \"A URI for the logo of the token list; prefer SVG or PNG of size 256x256\",\n      format: \"uri\",\n      examples: [\"ipfs://QmXfzKRvjZz3u5JRgC4v5mGVbm9ahrUiB4DgzHBsnWbTMM\"]\n    }\n  },\n  if: {\n    properties: { schema: { const: \"aptos\" } },\n    required: [\"name\", \"timestamp\", \"version\", \"tokens\", \"schema\"]\n  },\n  then: {\n    properties: {\n      tokens: {\n        items: {\n          $ref: \"#/definitions/AptosTokenInfo\"\n        },\n        type: \"array\",\n        description: \"The list of tokens included in the list\",\n        minItems: 1,\n        maxItems: 1e4\n      }\n    }\n  },\n  else: {\n    properties: {\n      tokens: {\n        items: {\n          $ref: \"#/definitions/TokenInfo\"\n        },\n        type: \"array\",\n        description: \"The list of tokens included in the list\",\n        minItems: 1,\n        maxItems: 1e4\n      }\n    }\n  },\n  required: [\"name\", \"timestamp\", \"version\", \"tokens\"]\n};\n\n// react/getTokenList.ts\nvar tokenListValidator = new Ajv({ allErrors: true }).compile(pancakeswap_default);\nfunction getTokenList(listUrl) {\n  return __async(this, null, function* () {\n    var _a, _b;\n    const urls = uriToHttp(listUrl);\n    for (let i = 0; i < urls.length; i++) {\n      const url = urls[i];\n      const isLast = i === urls.length - 1;\n      let response;\n      try {\n        response = yield fetch(url);\n      } catch (error) {\n        console.error(\"Failed to fetch list\", listUrl, error);\n        if (isLast)\n          throw new Error(`Failed to download list ${listUrl}`);\n        continue;\n      }\n      if (!response.ok) {\n        if (isLast)\n          throw new Error(`Failed to download list ${listUrl}`);\n        continue;\n      }\n      const json = yield response.json();\n      if (json.tokens) {\n        remove(json.tokens, (token) => {\n          return token.symbol ? token.symbol.length === 0 : true;\n        });\n      }\n      if (!tokenListValidator(json)) {\n        const validationErrors = (_b = (_a = tokenListValidator.errors) == null ? void 0 : _a.reduce((memo, error) => {\n          var _a2;\n          const add = `${error.dataPath} ${(_a2 = error.message) != null ? _a2 : \"\"}`;\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`;\n        }, \"\")) != null ? _b : \"unknown error\";\n        throw new Error(`Token list failed validation: ${validationErrors}`);\n      }\n      return json;\n    }\n    throw new Error(\"Unrecognized list URL protocol.\");\n  });\n}\nexport {\n  getTokenList as default,\n  tokenListValidator\n};\n"],"names":["tokenListValidator","allErrors","compile","$schema","$id","title","description","definitions","Version","type","examples","major","minor","patch","additionalProperties","properties","minimum","required","TagIdentifier","minLength","maxLength","pattern","ExtensionIdentifier","ExtensionMap","maxProperties","propertyNames","$ref","color","is_verified_by_me","bridgeAddress","tokenAddress","ExtensionPrimitiveValue","anyOf","ExtensionValue","ExtensionValueInner0","ExtensionValueInner1","TagDefinition","name","TokenInfo","chainId","address","decimals","maximum","symbol","logoURI","format","tags","items","maxItems","extensions","AptosTokenInfo","timestamp","schema","version","tokens","minItems","keywords","uniqueItems","stablecoin","if","const","then","else","getTokenList","listUrl","__async","_a","_b","urls","i","url","isLast","response","json","validationErrors","uriToHttp","uri","split","toLowerCase","concat","substring","hash","match","length","fetch","_state","sent","console","error","ok","remove","token","errors","reduce","memo","_a2","add","dataPath","message"],"sourceRoot":""}