{"version":3,"file":"static/chunks/1800-28289940337add92.js","mappings":"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","sources":["webpack://_N_E/./src/hooks/useCurrentBlockTimestamp.ts","webpack://_N_E/./src/views/Voting/components/CastVoteModal/DetailsView.tsx","webpack://_N_E/./src/views/Voting/components/CastVoteModal/styles.tsx","webpack://_N_E/./src/views/Voting/components/Layout.tsx","webpack://_N_E/./src/views/Voting/helpers.ts","webpack://_N_E/./src/views/Voting/hooks/useGetVotingPower.tsx","webpack://_N_E/../../packages/uikit/src/components/Card/StyledCard.tsx","webpack://_N_E/../../packages/uikit/src/components/Card/Card.tsx","webpack://_N_E/../../packages/uikit/src/components/Card/CardBody.tsx","webpack://_N_E/../../packages/uikit/src/components/Card/CardHeader.tsx","webpack://_N_E/../../packages/uikit/src/components/ReactMarkdown/styles.tsx","webpack://_N_E/../../packages/uikit/src/components/ReactMarkdown/ReactMarkdown.tsx","webpack://_N_E/../../packages/uikit/src/components/Spinner/Spinner.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import { BigNumber } from '@ethersproject/bignumber'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Flex, LinkExternal, Text, Box, HelpIcon, useTooltip, RocketIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from '@pancakeswap/localization'\nimport styled from 'styled-components'\nimport { getBlockExploreLink } from 'utils'\nimport { formatNumber } from '@pancakeswap/utils/formatBalance'\nimport useCurrentBlockTimestamp from 'hooks/useCurrentBlockTimestamp'\nimport { ModalInner, VotingBoxBorder, VotingBoxCardInner } from './styles'\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  display: inline-flex;\n  font-size: 14px;\n  > svg {\n    width: 14px;\n  }\n`\n\nconst FixedTermWrapper = styled(Box)<{ expired?: boolean }>`\n  width: 100%;\n  margin: 16px 0;\n  padding: 1px 1px 3px 1px;\n  background: ${({ theme, expired }) => (expired ? theme.colors.warning : 'linear-gradient(180deg, #53dee9, #7645d9)')};\n  border-radius: ${({ theme }) => theme.radii.default};\n`\n\nconst FixedTermCardInner = styled(Box)<{ expired?: boolean }>`\n  position: relative;\n  z-index: 1;\n  padding: 8px 12px;\n  background: ${({ theme }) => theme.colors.backgroundAlt};\n  border-radius: ${({ theme }) => theme.radii.default};\n\n  &:before {\n    position: absolute;\n    content: '';\n    top: 0;\n    left: 0;\n    z-index: -1;\n    width: 100%;\n    height: 100%;\n    pointer-events: none;\n    border-radius: ${({ theme }) => theme.radii.default};\n    background: ${({ theme, expired }) => (expired ? 'rgba(255, 178, 55, 0.098)' : theme.colors.gradientBubblegum)};\n  }\n`\n\nconst StyleLink = styled(Link)`\n  text-decoration: underline;\n`\n\ninterface DetailsViewProps {\n  total: number\n  cakeBalance?: number\n  cakeVaultBalance?: number\n  cakePoolBalance?: number\n  poolsBalance?: number\n  cakeBnbLpBalance?: number\n  ifoPoolBalance?: number\n  lockedCakeBalance?: number\n  lockedEndTime?: number\n  block: number\n}\n\nconst DetailsView: React.FC<React.PropsWithChildren<DetailsViewProps>> = ({\n  total,\n  cakeBalance,\n  cakeVaultBalance,\n  cakePoolBalance,\n  poolsBalance,\n  cakeBnbLpBalance,\n  ifoPoolBalance,\n  lockedCakeBalance,\n  lockedEndTime,\n  block,\n}) => {\n  const { t } = useTranslation()\n  const blockTimestamp = useCurrentBlockTimestamp()\n\n  const isBoostingExpired = useMemo(() => {\n    return lockedEndTime !== 0 && new BigNumber(blockTimestamp?.toString()).gte(lockedEndTime)\n  }, [blockTimestamp, lockedEndTime])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      {Number.isFinite(lockedCakeBalance) && (\n        <Box>\n          <Text>\n            {isBoostingExpired\n              ? t(\n                  'Your vCAKE boosting was expired at the snapshot block. Renew your fixed-term staking position to activate the boost for future voting proposals.',\n                )\n              : t(\n                  'Voting power is calculated using the staking amount and remaining staking duration of the fixed-term CAKE staking position at the block.',\n                )}\n          </Text>\n          <Text bold m=\"10px 0\">\n            {`${t('CAKE locked:')} ${formatNumber(lockedCakeBalance, 0, 2)}`}\n          </Text>\n          <StyleLink href=\"/pools\">{t('Go to Pools')}</StyleLink>\n        </Box>\n      )}\n    </>,\n    {\n      placement: 'bottom',\n    },\n  )\n\n  return (\n    <ModalInner mb=\"0\">\n      <Text as=\"p\" mb=\"24px\" fontSize=\"14px\" color=\"textSubtle\">\n        {t(\n          'Your voting power is determined by the amount of CAKE you held and the remaining duration on the fixed-term staking position (if you have one) at the block detailed below. CAKE held in other places does not contribute to your voting power.',\n        )}\n      </Text>\n      <Text color=\"secondary\" textTransform=\"uppercase\" mb=\"4px\" bold fontSize=\"14px\">\n        {t('Overview')}\n      </Text>\n      <VotingBoxBorder>\n        <VotingBoxCardInner>\n          <Text color=\"secondary\">{t('Your Voting Power')}</Text>\n          <Text bold fontSize=\"20px\">\n            {formatNumber(total, 0, 3)}\n          </Text>\n        </VotingBoxCardInner>\n      </VotingBoxBorder>\n      <Text color=\"secondary\" textTransform=\"uppercase\" mb=\"4px\" bold fontSize=\"14px\">\n        {t('Your voting power at block')}\n        <StyledLinkExternal isBscScan href={getBlockExploreLink(block, 'block')} ml=\"8px\">\n          {block}\n        </StyledLinkExternal>\n      </Text>\n      {Number.isFinite(cakeBalance) && (\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n          <Text color=\"textSubtle\" fontSize=\"16px\">\n            {t('Wallet')}\n          </Text>\n          <Text textAlign=\"right\">{formatNumber(cakeBalance, 0, 3)}</Text>\n        </Flex>\n      )}\n      {Number.isFinite(cakeVaultBalance) && (\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n          <Text color=\"textSubtle\" fontSize=\"16px\">\n            {t('Flexible CAKE Staking')}\n          </Text>\n          <Text textAlign=\"right\">{formatNumber(cakeVaultBalance, 0, 3)}</Text>\n        </Flex>\n      )}\n      {Number.isFinite(cakePoolBalance) && (\n        <>\n          {lockedCakeBalance === 0 ? (\n            <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n              <Flex>\n                <Text color=\"textSubtle\" fontSize=\"16px\">\n                  {t('Fixed Term CAKE Staking')}\n                </Text>\n                {tooltipVisible && tooltip}\n                <Flex ref={targetRef}>\n                  <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n                </Flex>\n              </Flex>\n              <Text color=\"failure\" textAlign=\"right\">\n                {formatNumber(cakePoolBalance, 0, 3)}\n              </Text>\n            </Flex>\n          ) : (\n            <FixedTermWrapper expired={isBoostingExpired}>\n              <FixedTermCardInner expired={isBoostingExpired}>\n                <Flex>\n                  <Text color=\"textSubtle\" fontSize=\"16px\" mr=\"auto\">\n                    {t('Fixed Term CAKE Staking')}\n                  </Text>\n                  {tooltipVisible && tooltip}\n                  <Flex ref={targetRef}>\n                    <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n                  </Flex>\n                </Flex>\n                <Flex mt=\"10px\" flexDirection=\"column\" alignItems=\"flex-end\">\n                  <Text bold color={isBoostingExpired ? 'warning' : 'secondary'} fontSize=\"16px\">\n                    {formatNumber(cakePoolBalance, 0, 3)}\n                  </Text>\n                  <Flex>\n                    <RocketIcon color={isBoostingExpired ? 'warning' : 'secondary'} width=\"15px\" height=\"15px\" />\n                    <Text ml=\"4px\" color={isBoostingExpired ? 'warning' : 'secondary'} fontSize=\"12px\">\n                      {isBoostingExpired ? t('Boosting Expired') : t('Boosted by vCAKE')}\n                    </Text>\n                  </Flex>\n                </Flex>\n              </FixedTermCardInner>\n            </FixedTermWrapper>\n          )}\n        </>\n      )}\n      {Number.isFinite(ifoPoolBalance) && Number(ifoPoolBalance) > 0 && (\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n          <Text color=\"textSubtle\" fontSize=\"16px\">\n            {t('IFO Pool')}\n          </Text>\n          <Text textAlign=\"right\">{formatNumber(ifoPoolBalance, 0, 3)}</Text>\n        </Flex>\n      )}\n      {Number.isFinite(poolsBalance) && (\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n          <Text color=\"textSubtle\" fontSize=\"16px\">\n            {t('Other Syrup Pools')}\n          </Text>\n          <Text textAlign=\"right\">{formatNumber(poolsBalance, 0, 3)}</Text>\n        </Flex>\n      )}\n      {Number.isFinite(cakeBnbLpBalance) && (\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n          <Text color=\"textSubtle\" fontSize=\"16px\">\n            {t('CAKE BNB LP')}\n          </Text>\n          <Text textAlign=\"right\">{formatNumber(cakeBnbLpBalance, 0, 3)}</Text>\n        </Flex>\n      )}\n    </ModalInner>\n  )\n}\n\nexport default DetailsView\n","import { Box, BoxProps } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nexport const VotingBoxBorder = styled(Box)<{ hasBoosted?: boolean }>`\n  border-radius: 12px;\n  margin-bottom: 24px;\n  padding: 1px 1px 3px 1px;\n  border: ${({ hasBoosted }) => (hasBoosted ? '0px' : '1px')};\n  border-style: solid;\n  border-color: ${({ theme, hasBoosted }) => (hasBoosted ? 'transparent' : theme.colors.cardBorder)};\n  background: ${({ hasBoosted }) => (hasBoosted ? 'linear-gradient(180deg, #53dee9, #7645d9)' : 'transparent')};\n`\n\nexport const VotingBoxCardInner = styled(Box)<{ hasBoosted?: boolean }>`\n  height: 64px;\n  display: flex;\n  padding: 0 16px;\n  align-items: center;\n  border-radius: 12px;\n  justify-content: space-between;\n  background: ${({ theme, hasBoosted }) => (hasBoosted ? theme.colors.gradientBubblegum : 'transparent')};\n`\n\nexport const ModalInner: React.FC<React.PropsWithChildren<BoxProps>> = (props) => {\n  return <Box mb=\"24px\" maxWidth={['100%', '100%', '100%', '320px']} {...props} />\n}\n","import styled from 'styled-components'\n\nconst Layout = styled.div`\n  align-items: start;\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: minmax(0, 1fr);\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    grid-template-columns: 1fr 332px;\n  }\n`\n\nexport default Layout\n","import { JsonRpcProvider } from '@ethersproject/providers'\nimport { bscTokens } from '@pancakeswap/tokens'\nimport BigNumber from 'bignumber.js'\nimport cakeVaultAbiV2 from 'config/abi/cakeVaultV2.json'\nimport { SNAPSHOT_HUB_API } from 'config/constants/endpoints'\nimport fromPairs from 'lodash/fromPairs'\nimport groupBy from 'lodash/groupBy'\nimport { Proposal, ProposalState, ProposalType, Vote } from 'state/types'\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\nimport { multicallv2 } from 'utils/multicall'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ADMINS, PANCAKE_SPACE, SNAPSHOT_VERSION } from './config'\nimport { getScores } from './getScores'\nimport * as strategies from './strategies'\n\nexport const isCoreProposal = (proposal: Proposal) => {\n  return ADMINS.includes(proposal.author.toLowerCase())\n}\n\nexport const filterProposalsByType = (proposals: Proposal[], proposalType: ProposalType) => {\n  if (proposals) {\n    switch (proposalType) {\n      case ProposalType.COMMUNITY:\n        return proposals.filter((proposal) => !isCoreProposal(proposal))\n      case ProposalType.CORE:\n        return proposals.filter((proposal) => isCoreProposal(proposal))\n      case ProposalType.ALL:\n      default:\n        return proposals\n    }\n  } else {\n    return []\n  }\n}\n\nexport const filterProposalsByState = (proposals: Proposal[], state: ProposalState) => {\n  return proposals.filter((proposal) => proposal.state === state)\n}\n\nexport interface Message {\n  address: string\n  msg: string\n  sig: string\n}\n\nconst STRATEGIES = [\n  { name: 'cake', params: { symbol: 'CAKE', address: bscTokens.cake.address, decimals: 18, max: 300 } },\n]\nconst NETWORK = '56'\n\n/**\n * Generates metadata required by snapshot to validate payload\n */\nexport const generateMetaData = () => {\n  return {\n    plugins: {},\n    network: 56,\n    strategies: STRATEGIES,\n  }\n}\n\n/**\n * Returns data that is required on all snapshot payloads\n */\nexport const generatePayloadData = () => {\n  return {\n    version: SNAPSHOT_VERSION,\n    timestamp: (Date.now() / 1e3).toFixed(),\n    space: PANCAKE_SPACE,\n  }\n}\n\n/**\n * General function to send commands to the snapshot api\n */\nexport const sendSnapshotData = async (message: Message) => {\n  const response = await fetch(SNAPSHOT_HUB_API, {\n    method: 'post',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(message),\n  })\n\n  if (!response.ok) {\n    const error = await response.json()\n    throw new Error(error?.error_description)\n  }\n\n  const data = await response.json()\n  return data\n}\n\nexport const VOTING_POWER_BLOCK = {\n  v0: 16300686,\n  v1: 17137653,\n}\n\n/**\n *  Get voting power by single user for each category\n */\ninterface GetVotingPowerType {\n  total: number\n  voter: string\n  poolsBalance?: number\n  cakeBalance?: number\n  cakePoolBalance?: number\n  cakeBnbLpBalance?: number\n  cakeVaultBalance?: number\n  ifoPoolBalance?: number\n  lockedCakeBalance?: number\n  lockedEndTime?: number\n}\n\nconst nodeRealProvider = new JsonRpcProvider('https://bsc-mainnet.nodereal.io/v1/5a516406afa140ffa546ee10af7c9b24', 56)\n\nexport const getVotingPower = async (\n  account: string,\n  poolAddresses: string[],\n  blockNumber?: number,\n): Promise<GetVotingPowerType> => {\n  if (blockNumber && (blockNumber >= VOTING_POWER_BLOCK.v0 || blockNumber >= VOTING_POWER_BLOCK.v1)) {\n    const cakeVaultAddress = getCakeVaultAddress()\n    const version = blockNumber >= VOTING_POWER_BLOCK.v1 ? 'v1' : 'v0'\n\n    const [pricePerShare, { shares, lockEndTime, userBoostedShare }] = await multicallv2({\n      abi: cakeVaultAbiV2,\n      provider: nodeRealProvider,\n      calls: [\n        {\n          address: cakeVaultAddress,\n          name: 'getPricePerFullShare',\n        },\n        {\n          address: cakeVaultAddress,\n          params: [account],\n          name: 'userInfo',\n        },\n      ],\n      options: {\n        blockTag: blockNumber,\n      },\n    })\n\n    const [cakeBalance, cakeBnbLpBalance, cakePoolBalance, cakeVaultBalance, poolsBalance, total, ifoPoolBalance] =\n      await getScores(\n        PANCAKE_SPACE,\n        [\n          strategies.cakeBalanceStrategy(version),\n          strategies.cakeBnbLpBalanceStrategy(version),\n          strategies.cakePoolBalanceStrategy(version),\n          strategies.cakeVaultBalanceStrategy(version),\n          strategies.createPoolsBalanceStrategy(poolAddresses, version),\n          strategies.createTotalStrategy(poolAddresses, version),\n          strategies.ifoPoolBalanceStrategy,\n        ],\n        NETWORK,\n        [account],\n        blockNumber,\n      )\n\n    const lockedCakeBalance = convertSharesToCake(\n      new BigNumber(shares.toString()),\n      new BigNumber(pricePerShare.toString()),\n      18,\n      3,\n      new BigNumber(userBoostedShare.toString()),\n    )?.cakeAsNumberBalance\n\n    const versionOne =\n      version === 'v0'\n        ? {\n            ifoPoolBalance: ifoPoolBalance[account] ? ifoPoolBalance[account] : 0,\n          }\n        : {}\n\n    return {\n      ...versionOne,\n      voter: account,\n      total: total[account] ? total[account] : 0,\n      poolsBalance: poolsBalance[account] ? poolsBalance[account] : 0,\n      cakeBalance: cakeBalance[account] ? cakeBalance[account] : 0,\n      cakePoolBalance: cakePoolBalance[account] ? cakePoolBalance[account] : 0,\n      cakeBnbLpBalance: cakeBnbLpBalance[account] ? cakeBnbLpBalance[account] : 0,\n      cakeVaultBalance: cakeVaultBalance[account] ? cakeVaultBalance[account] : 0,\n      lockedCakeBalance: Number.isFinite(lockedCakeBalance) ? lockedCakeBalance : 0,\n      lockedEndTime: lockEndTime ? +lockEndTime.toString() : 0,\n    }\n  }\n\n  const [total] = await getScores(PANCAKE_SPACE, STRATEGIES, NETWORK, [account], blockNumber)\n\n  return {\n    total: total[account] ? total[account] : 0,\n    voter: account,\n  }\n}\n\nexport const calculateVoteResults = (votes: Vote[]): { [key: string]: Vote[] } => {\n  if (votes) {\n    const result = groupBy(votes, (vote) => vote.proposal.choices[vote.choice - 1])\n    return result\n  }\n  return {}\n}\n\nexport const getTotalFromVotes = (votes: Vote[]) => {\n  if (votes) {\n    return votes.reduce((accum, vote) => {\n      let power = parseFloat(vote.metadata?.votingPower)\n\n      if (!power) {\n        power = 0\n      }\n\n      return accum + power\n    }, 0)\n  }\n  return 0\n}\n\n/**\n * Get voting power by a list of voters, only total\n */\nexport async function getVotingPowerByCakeStrategy(voters: string[], blockNumber: number) {\n  const strategyResponse = await getScores(PANCAKE_SPACE, STRATEGIES, NETWORK, voters, blockNumber)\n\n  const result = fromPairs(\n    voters.map((voter) => {\n      const defaultTotal = strategyResponse.reduce(\n        (total, scoreList) => total + (scoreList[voter] ? scoreList[voter] : 0),\n        0,\n      )\n\n      return [voter, defaultTotal]\n    }),\n  )\n\n  return result\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport { useAccount } from 'wagmi'\nimport { FetchStatus } from 'config/constants/types'\nimport useSWRImmutable from 'swr/immutable'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getActivePools } from 'utils/calls'\nimport { bscRpcProvider } from 'utils/providers'\nimport { getVotingPower } from '../helpers'\n\ninterface State {\n  cakeBalance?: number\n  cakeVaultBalance?: number\n  cakePoolBalance?: number\n  poolsBalance?: number\n  cakeBnbLpBalance?: number\n  ifoPoolBalance?: number\n  total: number\n  lockedCakeBalance?: number\n  lockedEndTime?: number\n}\n\nconst useGetVotingPower = (block?: number): State & { isLoading: boolean; isError: boolean } => {\n  const { address: account } = useAccount()\n  const { data, status, error } = useSWRImmutable(account ? [account, block, 'votingPower'] : null, async () => {\n    const blockNumber = block || (await bscRpcProvider.getBlockNumber())\n    const eligiblePools = await getActivePools(blockNumber)\n    const poolAddresses = eligiblePools.map(({ contractAddress }) => getAddress(contractAddress, ChainId.BSC))\n    const {\n      cakeBalance,\n      cakeBnbLpBalance,\n      cakePoolBalance,\n      total,\n      poolsBalance,\n      cakeVaultBalance,\n      ifoPoolBalance,\n      lockedCakeBalance,\n      lockedEndTime,\n    } = await getVotingPower(account, poolAddresses, blockNumber)\n    return {\n      cakeBalance,\n      cakeBnbLpBalance,\n      cakePoolBalance,\n      poolsBalance,\n      cakeVaultBalance,\n      ifoPoolBalance,\n      total,\n      lockedCakeBalance,\n      lockedEndTime,\n    }\n  })\n  if (error) console.error(error)\n\n  return { ...data, isLoading: status !== FetchStatus.Fetched, isError: status === FetchStatus.Failed }\n}\n\nexport default useGetVotingPower\n","import styled, { css, DefaultTheme } from \"styled-components\";\nimport { space } from \"styled-system\";\nimport { promotedGradient } from \"../../util/animationToolkit\";\nimport { Box } from \"../Box\";\nimport { CardProps } from \"./types\";\n\ninterface StyledCardProps extends CardProps {\n  theme: DefaultTheme;\n}\n\n/**\n * Priority: Warning --> Success --> Active\n */\nconst getBorderColor = ({ isActive, isSuccess, isWarning, borderBackground, theme }: StyledCardProps) => {\n  if (borderBackground) {\n    return borderBackground;\n  }\n  if (isWarning) {\n    return theme.colors.warning;\n  }\n\n  if (isSuccess) {\n    return theme.colors.success;\n  }\n\n  if (isActive) {\n    return `linear-gradient(180deg, ${theme.colors.primaryBright}, ${theme.colors.secondary})`;\n  }\n\n  return theme.colors.cardBorder;\n};\n\nexport const StyledCard = styled.div<StyledCardProps>`\n  background: ${getBorderColor};\n  border-radius: ${({ theme }) => theme.radii.card};\n  color: ${({ theme, isDisabled }) => theme.colors[isDisabled ? \"textDisabled\" : \"text\"]};\n  overflow: hidden;\n  position: relative;\n\n  ${({ isActive }) =>\n    isActive &&\n    css`\n      animation: ${promotedGradient} 3s ease infinite;\n      background-size: 400% 400%;\n    `}\n\n  padding: 1px 1px 3px 1px;\n\n  ${space}\n`;\n\nexport const StyledCardInner = styled(Box)<{ background?: string; hasCustomBorder: boolean }>`\n  width: 100%;\n  height: 100%;\n  overflow: ${({ hasCustomBorder }) => (hasCustomBorder ? \"initial\" : \"inherit\")};\n  background: ${({ theme, background }) => background ?? theme.card.background};\n  border-radius: ${({ theme }) => theme.radii.card};\n`;\n\nStyledCard.defaultProps = {\n  isActive: false,\n  isSuccess: false,\n  isWarning: false,\n  isDisabled: false,\n};\n","import React from \"react\";\nimport { StyledCard, StyledCardInner } from \"./StyledCard\";\nimport { CardProps } from \"./types\";\n\nconst Card: React.FC<React.PropsWithChildren<CardProps>> = ({ ribbon, children, background, ...props }) => {\n  return (\n    <StyledCard {...props}>\n      <StyledCardInner background={background} hasCustomBorder={!!props.borderBackground}>\n        {ribbon}\n        {children}\n      </StyledCardInner>\n    </StyledCard>\n  );\n};\nexport default Card;\n","import styled from \"styled-components\";\nimport { space, SpaceProps } from \"styled-system\";\n\nexport type CardBodyProps = SpaceProps;\n\nconst CardBody = styled.div<CardBodyProps>`\n  ${space}\n`;\n\nCardBody.defaultProps = {\n  p: \"24px\",\n};\n\nexport default CardBody;\n","import styled from \"styled-components\";\nimport { space, SpaceProps } from \"styled-system\";\nimport { CardTheme } from \"./types\";\n\nexport interface CardHeaderProps extends SpaceProps {\n  variant?: keyof CardTheme[\"cardHeaderBackground\"];\n}\n\nconst CardHeader = styled.div<CardHeaderProps>`\n  background: ${({ theme, variant = \"default\" }) => theme.card.cardHeaderBackground[variant]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n  ${space}\n`;\n\nCardHeader.defaultProps = {\n  p: \"24px\",\n};\n\nexport default CardHeader;\n","import styled from \"styled-components\";\nimport { NormalComponents, SpecialComponents } from \"react-markdown/src/ast-to-react\";\nimport { Text } from \"../Text\";\nimport { Heading } from \"../Heading\";\n\nconst Table = styled.table`\n  margin-bottom: 32px;\n  margin-top: 32px;\n  width: 100%;\n\n  td,\n  th {\n    color: ${({ theme }) => theme.colors.text};\n    padding: 8px;\n  }\n`;\nconst TableBox = styled.div`\n  width: 100%;\n  overflow: auto;\n  -webkit-overflow-scrolling: touch;\n`;\n\nconst ThemedComponent = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  margin-bottom: 16px;\n  margin-top: 16px;\n\n  li {\n    margin-bottom: 8px;\n  }\n`;\n\nconst Pre = styled.pre`\n  color: ${({ theme }) => theme.colors.text};\n  margin-bottom: 16px;\n  margin-top: 16px;\n  max-width: 100%;\n  overflow-x: auto;\n`;\n\nconst AStyle = styled.a`\n  word-break: break-all;\n`;\n\nconst Title = (props: any) => {\n  return <Heading as=\"h4\" scale=\"lg\" my=\"16px\" {...props} />;\n};\n\nconst markdownComponents: Partial<NormalComponents & SpecialComponents> = {\n  h1: Title,\n  h2: Title,\n  h3: Title,\n  h4: Title,\n  h5: Title,\n  h6: Title,\n  p: (props) => {\n    // @ts-ignore\n    return <Text as=\"p\" my=\"16px\" {...props} />;\n  },\n  table: ({ ...props }) => {\n    return (\n      <TableBox>\n        <Table>{props.children}</Table>\n      </TableBox>\n    );\n  },\n  ol: (props: any) => {\n    return <ThemedComponent as=\"ol\" {...props} />;\n  },\n  ul: (props: any) => {\n    return <ThemedComponent as=\"ul\" {...props} />;\n  },\n  pre: Pre,\n  a: AStyle,\n};\n\nexport default markdownComponents;\n","import ReactMarkdownLib, { ReactMarkdownOptions } from \"react-markdown\";\nimport gfm from \"remark-gfm\";\nimport markdownComponents from \"./styles\";\n\nconst ReactMarkdown: React.FC<React.PropsWithChildren<ReactMarkdownOptions>> = (props) => {\n  return <ReactMarkdownLib remarkPlugins={[gfm]} components={markdownComponents} {...props} />;\n};\n\nexport default ReactMarkdown;\n","import React from \"react\";\nimport { Image, Box } from \"@pancakeswap/uikit\";\nimport { SpinnerProps } from \"./types\";\n\nconst Spinner: React.FC<React.PropsWithChildren<SpinnerProps>> = ({ size = 128 }) => {\n  return (\n    <Box width={size} height={size * 1.197} position=\"relative\">\n      <Image\n        width={size}\n        height={size * 1.197}\n        src=\"https://assets.pancakeswap.finance/web/pancake-3d-spinner-v2.gif\"\n        alt=\"pancake-3d-spinner\"\n      />\n    </Box>\n  );\n};\n\nexport default Spinner;\n"],"names":["useCurrentBlockTimestamp","useSingleCallResult","multicall","useMulticallContract","result","StyledLinkExternal","styled","LinkExternal","FixedTermWrapper","Box","param","theme","expired","colors","warning","radii","default","FixedTermCardInner","backgroundAlt","gradientBubblegum","StyleLink","Link","__webpack_exports__","total","cakeBalance","cakeVaultBalance","cakePoolBalance","poolsBalance","cakeBnbLpBalance","ifoPoolBalance","lockedCakeBalance","lockedEndTime","block","t","useTranslation","blockTimestamp","isBoostingExpired","useMemo","BigNumber","toString","gte","useTooltip","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","jsx","Fragment","Number","isFinite","jsxs","Text","bold","m","formatNumber","concat","href","placement","targetRef","tooltip","tooltipVisible","ModalInner","mb","as","fontSize","color","textTransform","VotingBoxBorder","VotingBoxCardInner","isBscScan","getBlockExploreLink","ml","Flex","alignItems","justifyContent","textAlign","ref","HelpIcon","width","height","mr","mt","flexDirection","RocketIcon","hasBoosted","cardBorder","props","maxWidth","Layout","mediaQueries","lg","isCoreProposal","proposal","ADMINS","author","toLowerCase","filterProposalsByType","proposals","proposalType","ProposalType","filter","filterProposalsByState","state","STRATEGIES","name","params","symbol","address","bscTokens","decimals","max","_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_12__","Z","message","response","error","fetch","SNAPSHOT_HUB_API","method","headers","Accept","body","JSON","stringify","_state","sent","ok","json","error_description","VOTING_POWER_BLOCK","v0","v1","nodeRealProvider","JsonRpcProvider","getVotingPower","account","poolAddresses","blockNumber","convertSharesToCake","cakeVaultAddress","version","_ref","pricePerShare","shares","lockEndTime","userBoostedShare","_ref1","versionOne","getCakeVaultAddress","multicallv2","abi","cakeVaultAbiV2","provider","calls","options","blockTag","_swc_helpers_src_sliced_to_array_mjs__WEBPACK_IMPORTED_MODULE_15__","apply","_ref_","getScores","PANCAKE_SPACE","strategies","NETWORK","cakeAsNumberBalance","_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_17__","_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_18__","voter","_ref2","calculateVoteResults","votes","groupBy","vote","choices","choice","getTotalFromVotes","reduce","accum","power","parseFloat","metadata","votingPower","useAccount","useSWRImmutable","_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_8__","bscRpcProvider","getActivePools","eligiblePools","map","contractAddress","getAddress","ChainId","data","status","console","_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_10__","_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_11__","isLoading","FetchStatus","isError","StyledCard","isActive","isSuccess","isWarning","borderBackground","success","primaryBright","secondary","card","isDisabled","css","promotedGradient","space","StyledCardInner","hasCustomBorder","background","defaultProps","Card_Card","_param","ribbon","children","jsx_runtime","CardBody","p","CardHeader","variant","cardHeaderBackground","_param_variant","Table","text","TableBox","ThemedComponent","Pre","AStyle","Title","Heading","scale","my","styles","h1","h2","h3","h4","h5","h6","table","ol","ul","pre","a","ReactMarkdown_ReactMarkdown","ReactMarkdownLib","remarkPlugins","gfm","components","markdownComponents","size","_param_size","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","position","Image","src","alt"],"sourceRoot":""}