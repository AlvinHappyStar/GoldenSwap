{"version":3,"file":"static/chunks/9729-a3782098f2cefaa9.js","mappings":"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","sources":["webpack://_N_E/../../packages/uikit/src/components/BalanceInput/BalanceInput.tsx","webpack://_N_E/../../packages/uikit/src/components/BalanceInput/styles.tsx","webpack://_N_E/../../packages/uikit/src/components/Button/ExpandableButton.tsx","webpack://_N_E/../../packages/uikit/src/components/RoiCalculatorModal/RoiCalculatorFooter.tsx","webpack://_N_E/../../packages/uikit/src/components/RoiCalculatorModal/RoiCard.tsx","webpack://_N_E/../../packages/uikit/src/components/RoiCalculatorModal/AnimatedArrow.tsx","webpack://_N_E/../../packages/uikit/src/components/RoiCalculatorModal/RoiCalculatorModal.tsx","webpack://_N_E/../../packages/uikit/src/components/RoiCalculatorModal/useRoiCalculatorReducer.ts","webpack://_N_E/../../packages/uikit/src/components/Svg/Icons/Add.tsx","webpack://_N_E/../../packages/uikit/src/components/Svg/Icons/Calculate.tsx","webpack://_N_E/../../packages/uikit/src/components/Svg/Icons/Checkmark.tsx","webpack://_N_E/../../packages/uikit/src/components/Svg/Icons/ChevronUp.tsx","webpack://_N_E/../../packages/uikit/src/components/Svg/Icons/Community.tsx","webpack://_N_E/../../packages/uikit/src/components/Svg/Icons/Currency.tsx","webpack://_N_E/../../packages/uikit/src/components/Svg/Icons/Minus.tsx","webpack://_N_E/../../packages/uikit/src/components/Svg/Icons/Pencil.tsx","webpack://_N_E/../../packages/uikit/src/components/Svg/Icons/RocketIcon.tsx","webpack://_N_E/../../packages/uikit/src/components/Svg/Icons/Timer.tsx","webpack://_N_E/../../packages/uikit/src/components/Svg/Icons/Verified.tsx","webpack://_N_E/../../packages/uikit/src/components/Svg/Icons/Vote.tsx","webpack://_N_E/../../packages/uikit/src/widgets/Farm/components/FarmTabButtons.tsx","webpack://_N_E/../../packages/uikit/src/widgets/Farm/components/FarmApyButton/index.tsx","webpack://_N_E/../../packages/uikit/src/widgets/Farm/components/Tags/index.tsx","webpack://_N_E/../../packages/uikit/src/widgets/Farm/components/FarmCard/DetailsSection.tsx","webpack://_N_E/../../packages/uikit/src/widgets/Farm/components/FarmCard/index.tsx","webpack://_N_E/../../packages/uikit/src/widgets/Farm/components/StakedLP/index.tsx","webpack://_N_E/../../packages/uikit/src/widgets/Farm/components/DepositModal/index.tsx","webpack://_N_E/../../packages/uikit/src/widgets/Farm/components/WithdrawModal/index.tsx","webpack://_N_E/../../packages/uikit/src/widgets/Farm/components/FarmTable/CellLayout.tsx","webpack://_N_E/../../packages/uikit/src/widgets/Farm/components/FarmTable/Earned.tsx","webpack://_N_E/../../packages/uikit/src/widgets/Farm/components/FarmTable/Details.tsx","webpack://_N_E/../../packages/uikit/src/widgets/Farm/components/FarmTable/Liquidity.tsx","webpack://_N_E/../../packages/uikit/src/widgets/Farm/components/FarmTable/Multiplier.tsx","webpack://_N_E/../../packages/uikit/src/widgets/Farm/components/FarmTable/FarmTokenInfo.tsx","webpack://_N_E/../../packages/uikit/src/widgets/Farm/components/FarmTable/Actions/styles.ts","webpack://_N_E/../../packages/uikit/src/widgets/Farm/components/FarmTable/Actions/HarvestAction.tsx","webpack://_N_E/../../packages/uikit/src/widgets/Farm/components/FarmTable/Actions/AccountNotConnect.tsx","webpack://_N_E/../../packages/uikit/src/widgets/Farm/components/FarmTable/Actions/StakeComponent.tsx","webpack://_N_E/../../packages/uikit/src/widgets/Farm/components/FarmTable/Actions/StakeActionDataNotReady.tsx","webpack://_N_E/../../packages/uikit/src/widgets/Farm/components/FarmTable/Actions/EnableStakeAction.tsx","webpack://_N_E/../../packages/uikit/src/widgets/Farm/components/FarmTable/Actions/StakedActionComponent.tsx","webpack://_N_E/../../packages/uikit/src/widgets/Farm/components/FarmTable/index.tsx","webpack://_N_E/../../packages/uikit/src/widgets/Farm/FarmWidget.tsx","webpack://_N_E/../../packages/uikit/src/widgets/Farm/constants.ts","webpack://_N_E/../../packages/uikit/src/widgets/Modal/Spacer.tsx","webpack://_N_E/../../packages/uikit/src/widgets/Modal/ModalActions.tsx","webpack://_N_E/../../packages/uikit/src/widgets/Modal/ModalInput.tsx","webpack://_N_E/../../packages/utils/compoundApyHelpers.ts","webpack://_N_E/../../packages/utils/trimTrailZero.ts","webpack://_N_E/<anon>"],"sourcesContent":["import React from \"react\";\nimport { Flex, Box } from \"../Box\";\nimport { SwapVertIcon } from \"../Svg\";\nimport Text from \"../Text/Text\";\nimport { StyledBalanceInput, StyledInput, UnitContainer, SwitchUnitsButton } from \"./styles\";\nimport { BalanceInputProps } from \"./types\";\n\nconst BalanceInput: React.FC<React.PropsWithChildren<BalanceInputProps>> = ({\n  value,\n  placeholder = \"0.0\",\n  onUserInput,\n  currencyValue,\n  inputProps,\n  innerRef,\n  isWarning = false,\n  decimals = 18,\n  unit,\n  switchEditingUnits,\n  ...props\n}) => {\n  const handleOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.currentTarget.validity.valid) {\n      onUserInput(e.currentTarget.value.replace(/,/g, \".\"));\n    }\n  };\n\n  return (\n    <StyledBalanceInput isWarning={isWarning} {...props}>\n      <Flex justifyContent=\"flex-end\">\n        <Box>\n          <Flex alignItems=\"center\">\n            <StyledInput\n              pattern={`^[0-9]*[.,]?[0-9]{0,${decimals}}$`}\n              inputMode=\"decimal\"\n              min=\"0\"\n              value={value}\n              onChange={handleOnChange}\n              placeholder={placeholder}\n              ref={innerRef}\n              {...inputProps}\n            />\n            {unit && <UnitContainer>{unit}</UnitContainer>}\n          </Flex>\n          {currencyValue && (\n            <Text fontSize=\"12px\" textAlign=\"right\" color=\"textSubtle\">\n              {currencyValue}\n            </Text>\n          )}\n        </Box>\n        {switchEditingUnits && (\n          <Flex alignItems=\"center\" pl=\"12px\">\n            <SwitchUnitsButton scale=\"sm\" variant=\"text\" onClick={switchEditingUnits}>\n              <SwapVertIcon color=\"textSubtle\" />\n            </SwitchUnitsButton>\n          </Flex>\n        )}\n      </Flex>\n    </StyledBalanceInput>\n  );\n};\n\nexport default BalanceInput;\n","import styled from \"styled-components\";\nimport Box from \"../Box/Box\";\nimport Input from \"../Input/Input\";\nimport Text from \"../Text/Text\";\nimport IconButton from \"../Button/IconButton\";\nimport { BalanceInputProps } from \"./types\";\n\nexport const SwitchUnitsButton = styled(IconButton)`\n  width: 16px;\n`;\n\nexport const UnitContainer = styled(Text)`\n  margin-left: 4px;\n  text-align: right;\n  color: ${({ theme }) => theme.colors.textSubtle};\n  white-space: nowrap;\n`;\n\nexport const StyledBalanceInput = styled(Box)<{ isWarning: BalanceInputProps[\"isWarning\"] }>`\n  background-color: ${({ theme }) => theme.colors.input};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  box-shadow: ${({ theme, isWarning }) => theme.shadows[isWarning ? \"warning\" : \"inset\"]};\n  padding: 8px 16px;\n`;\n\nexport const StyledInput = styled(Input)<{ textAlign?: string }>`\n  background: transparent;\n  border-radius: 0;\n  box-shadow: none;\n  padding-left: 0;\n  padding-right: 0;\n  text-align: ${({ textAlign = \"right\" }) => textAlign};\n  border: none;\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n\n  &:focus:not(:disabled) {\n    box-shadow: none;\n  }\n`;\n","import React from \"react\";\nimport { ChevronDownIcon, ChevronUpIcon } from \"../Svg\";\nimport Button from \"./Button\";\nimport IconButton from \"./IconButton\";\n\ninterface Props {\n  onClick?: () => void;\n  expanded?: boolean;\n}\n\nexport const ExpandableButton: React.FC<React.PropsWithChildren<Props>> = ({ onClick, expanded, children }) => {\n  return (\n    <IconButton aria-label=\"Hide or show expandable content\" onClick={onClick}>\n      {children}\n      {expanded ? <ChevronUpIcon color=\"invertedContrast\" /> : <ChevronDownIcon color=\"invertedContrast\" />}\n    </IconButton>\n  );\n};\nExpandableButton.defaultProps = {\n  expanded: false,\n};\n\nexport const ExpandableLabel: React.FC<React.PropsWithChildren<Props>> = ({ onClick, expanded, children }) => {\n  return (\n    <Button\n      variant=\"text\"\n      aria-label=\"Hide or show expandable content\"\n      onClick={onClick}\n      endIcon={expanded ? <ChevronUpIcon color=\"primary\" /> : <ChevronDownIcon color=\"primary\" />}\n    >\n      {children}\n    </Button>\n  );\n};\nExpandableLabel.defaultProps = {\n  expanded: false,\n};\n","import { useTranslation } from \"@pancakeswap/localization\";\nimport { getApy } from \"@pancakeswap/utils/compoundApyHelpers\";\nimport { useMemo, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { BIG_ONE_HUNDRED } from \"@pancakeswap/utils/bigNumber\";\nimport { useTooltip } from \"../../hooks/useTooltip\";\nimport { Box, Flex, Grid } from \"../Box\";\nimport { ExpandableLabel } from \"../Button\";\nimport { Link, LinkExternal } from \"../Link\";\nimport { HelpIcon } from \"../Svg\";\nimport { Text } from \"../Text\";\n\nconst Footer = styled(Flex)`\n  width: 100%;\n  background: ${({ theme }) => theme.colors.dropdown};\n`;\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin-top: 16px;\n  padding: 0;\n  li {\n    margin: 0;\n    padding: 0;\n  }\n  li::before {\n    content: \"•\";\n    margin-right: 4px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n  li::marker {\n    font-size: 12px;\n  }\n`;\n\ninterface RoiCalculatorFooterProps {\n  isFarm: boolean;\n  apr?: number;\n  apy?: number;\n  displayApr?: string;\n  autoCompoundFrequency: number;\n  multiplier?: string;\n  linkLabel: string;\n  linkHref: string;\n  performanceFee: number;\n  rewardCakePerSecond?: boolean;\n  isLocked?: boolean;\n  stableSwapAddress?: string;\n  stableLpFee?: number;\n}\n\nconst RoiCalculatorFooter: React.FC<React.PropsWithChildren<RoiCalculatorFooterProps>> = ({\n  isFarm,\n  apr = 0,\n  apy = 0,\n  displayApr,\n  autoCompoundFrequency,\n  multiplier,\n  linkLabel,\n  linkHref,\n  performanceFee,\n  rewardCakePerSecond,\n  isLocked = false,\n  stableSwapAddress,\n  stableLpFee,\n}) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const { t } = useTranslation();\n  const {\n    targetRef: multiplierRef,\n    tooltip: multiplierTooltip,\n    tooltipVisible: multiplierTooltipVisible,\n  } = useTooltip(\n    <>\n      {rewardCakePerSecond ? (\n        <>\n          <Text>\n            {t(\n              \"The Multiplier represents the proportion of CAKE rewards each farm receives, as a proportion of the CAKE produced each second.\"\n            )}\n          </Text>\n          <Text my=\"24px\">\n            {\" \"}\n            {t(\"For example, if a 1x farm received 1 CAKE per second, a 40x farm would receive 40 CAKE per second.\")}\n          </Text>\n          <Text>{t(\"This amount is already included in all APR calculations for the farm.\")}</Text>\n        </>\n      ) : (\n        <>\n          <Text>\n            {t(\n              \"The Multiplier represents the proportion of CAKE rewards each farm receives, as a proportion of the CAKE produced each block.\"\n            )}\n          </Text>\n          <Text my=\"24px\">\n            {\" \"}\n            {t(\"For example, if a 1x farm received 1 CAKE per block, a 40x farm would receive 40 CAKE per block.\")}\n          </Text>\n          <Text>\n            {t(\n              \"We have recently rebased multipliers by a factor of 10, this is only a visual change and does not affect the amount of CAKE each farm receives.\"\n            )}\n          </Text>\n          <Link\n            mt=\"8px\"\n            display=\"inline\"\n            href=\"https://medium.com/pancakeswap/farm-mutlipliers-visual-update-1f5f5f615afd\"\n            external\n          >\n            {t(\"Read more\")}\n          </Link>\n        </>\n      )}\n    </>,\n    { placement: \"top-end\", tooltipOffset: [20, 10] }\n  );\n\n  const gridRowCount = isFarm ? 4 : 2;\n  const lpRewardsAPR = useMemo(\n    () =>\n      isFarm\n        ? Number.isFinite(Number(displayApr)) && Number.isFinite(apr)\n          ? Math.max(Number(displayApr) - apr, 0).toFixed(2)\n          : null\n        : null,\n    [isFarm, displayApr, apr]\n  );\n\n  return (\n    <Footer p=\"16px\" flexDirection=\"column\">\n      <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded((prev) => !prev)}>\n        {isExpanded ? t(\"Hide\") : t(\"Details\")}\n      </ExpandableLabel>\n      {isExpanded && (\n        <Box px=\"8px\">\n          <Grid gridTemplateColumns=\"2.5fr 1fr\" gridRowGap=\"8px\" gridTemplateRows={`repeat(${gridRowCount}, auto)`}>\n            {!isFarm && (\n              <>\n                <Text color=\"textSubtle\" small>\n                  {Number.isFinite(apy) && apy !== 0 && !isLocked ? t(\"APY\") : t(\"APR\")}\n                </Text>\n                <Text small textAlign=\"right\">\n                  {Number.isFinite(apy) && apy !== 0 ? apy.toFixed(2) : apr?.toFixed(2)}%\n                </Text>\n              </>\n            )}\n            {isFarm && (\n              <>\n                <Text color=\"textSubtle\" small>\n                  {t(\"APR (incl. LP rewards)\")}\n                </Text>\n                <Text small textAlign=\"right\">\n                  {displayApr}%\n                </Text>\n                <Text color=\"textSubtle\" small>\n                  *{t(\"Base APR (CAKE yield only)\")}\n                </Text>\n                <Text small textAlign=\"right\">\n                  {apr.toFixed(2)}%\n                </Text>\n                <Text color=\"textSubtle\" small>\n                  *{t(\"LP Rewards APR\")}\n                </Text>\n                <Text small textAlign=\"right\">\n                  {lpRewardsAPR === \"0\" || !lpRewardsAPR ? \"-\" : lpRewardsAPR}%\n                </Text>\n              </>\n            )}\n            {!Number.isFinite(apy) && (\n              <Text color=\"textSubtle\" small>\n                {t(\"APY (%compoundTimes%x daily compound)\", {\n                  compoundTimes: autoCompoundFrequency > 0 ? autoCompoundFrequency : 1,\n                })}\n              </Text>\n            )}\n            {!Number.isFinite(apy) && (\n              <Text small textAlign=\"right\">\n                {(\n                  getApy(apr, autoCompoundFrequency > 0 ? autoCompoundFrequency : 1, 365, performanceFee) * 100\n                ).toFixed(2)}\n                %\n              </Text>\n            )}\n            {isFarm && (\n              <>\n                <Text color=\"textSubtle\" small>\n                  {t(\"Farm Multiplier\")}\n                </Text>\n                <Flex justifyContent=\"flex-end\" alignItems=\"flex-end\">\n                  <Text small textAlign=\"right\" mr=\"4px\">\n                    {multiplier}\n                  </Text>\n                  <span ref={multiplierRef}>\n                    <HelpIcon color=\"textSubtle\" width=\"16px\" height=\"16px\" />\n                  </span>\n                  {multiplierTooltipVisible && multiplierTooltip}\n                </Flex>\n              </>\n            )}\n          </Grid>\n          <BulletList>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\" lineHeight={1.1}>\n                {t(\"Calculated based on current rates.\")}\n              </Text>\n            </li>\n            {isFarm && (\n              <>\n                <li>\n                  <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                    {t(\"LP rewards: %percent%% trading fees, distributed proportionally among LP token holders.\", {\n                      percent: stableSwapAddress && stableLpFee ? BIG_ONE_HUNDRED.times(stableLpFee).toNumber() : 0.17,\n                    })}\n                  </Text>\n                </li>\n                <li>\n                  <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                    {t(\n                      \"To provide stable estimates, APR figures are calculated once per day on the farm page. For real time APR, please visit the\"\n                    )}\n                    <Link\n                      style={{ display: \"inline-block\" }}\n                      fontSize=\"12px\"\n                      ml=\"3px\"\n                      href={`/info${stableSwapAddress ? `/pairs/${stableSwapAddress}?type=stableSwap` : \"\"}`}\n                    >\n                      {t(\"Info Page\")}\n                    </Link>\n                  </Text>\n                </li>\n              </>\n            )}\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\" lineHeight={1.1}>\n                {t(\n                  \"All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.\"\n                )}\n              </Text>\n            </li>\n            {performanceFee > 0 && (\n              <li>\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t(\"All estimated rates take into account this pool’s %fee%% performance fee\", {\n                    fee: performanceFee,\n                  })}\n                </Text>\n              </li>\n            )}\n          </BulletList>\n          {linkHref && (\n            <Flex justifyContent=\"center\" mt=\"24px\">\n              <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n            </Flex>\n          )}\n        </Box>\n      )}\n    </Footer>\n  );\n};\n\nexport default RoiCalculatorFooter;\n","import { useRef, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useTranslation } from \"@pancakeswap/localization\";\nimport { CalculatorMode, RoiCalculatorReducerState } from \"./useRoiCalculatorReducer\";\nimport { Box, Flex } from \"../Box\";\nimport { Text } from \"../Text\";\nimport { Input } from \"../Input\";\nimport { IconButton } from \"../Button\";\nimport { CheckmarkIcon, PencilIcon } from \"../Svg\";\n\nconst MILLION = 1000000;\nconst TRILLION = 1000000000000;\n\nconst RoiCardWrapper = styled(Box)`\n  background: linear-gradient(180deg, #53dee9, #7645d9);\n  padding: 1px;\n  width: 100%;\n  border-radius: ${({ theme }) => theme.radii.default};\n`;\n\nconst RoiCardInner = styled(Box)`\n  min-height: 120px;\n  padding: 24px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  background: ${({ theme }) => theme.colors.gradientBubblegum};\n`;\n\nconst RoiInputContainer = styled(Box)`\n  position: relative;\n  & > input {\n    padding-left: 28px;\n    max-width: 70%;\n  }\n  &:before {\n    position: absolute;\n    content: \"$\";\n    color: ${({ theme }) => theme.colors.textSubtle};\n    left: 16px;\n    top: 8px;\n  }\n`;\n\nconst RoiDisplayContainer = styled(Flex)`\n  max-width: 82%;\n  margin-right: 8px;\n`;\n\nconst RoiDollarAmount = styled(Text)<{ fadeOut: boolean }>`\n  position: relative;\n  overflow-x: auto;\n  &::-webkit-scrollbar {\n    height: 0px;\n  }\n\n  ${({ fadeOut, theme }) =>\n    fadeOut &&\n    `\n      &:after {\n        background: linear-gradient(\n          to right,\n          ${theme.colors.background}00,\n          ${theme.colors.background}E6\n        );\n        content: '';\n        height: 100%;\n        pointer-events: none;\n        position: absolute;\n        right: 0;\n        top: 0;\n        width: 40px;\n      }\n  `}\n`;\n\ninterface RoiCardProps {\n  earningTokenSymbol: string;\n  calculatorState: RoiCalculatorReducerState;\n  setTargetRoi: (amount: string) => void;\n  setCalculatorMode: (mode: CalculatorMode) => void;\n}\n\nconst RoiCard: React.FC<React.PropsWithChildren<RoiCardProps>> = ({\n  earningTokenSymbol,\n  calculatorState,\n  setTargetRoi,\n  setCalculatorMode,\n}) => {\n  const [expectedRoi, setExpectedRoi] = useState(\"\");\n  const inputRef = useRef<HTMLInputElement | null>(null);\n  const { roiUSD, roiTokens, roiPercentage } = calculatorState.data;\n  const { mode } = calculatorState.controls;\n\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [mode]);\n\n  const onEnterEditing = () => {\n    setCalculatorMode(CalculatorMode.PRINCIPAL_BASED_ON_ROI);\n    setExpectedRoi(\n      roiUSD.toLocaleString(\"en\", {\n        minimumFractionDigits: roiUSD > MILLION ? 0 : 2,\n        maximumFractionDigits: roiUSD > MILLION ? 0 : 2,\n      })\n    );\n  };\n\n  const onExitRoiEditing = () => {\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL);\n  };\n  const handleExpectedRoiChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.currentTarget.validity.valid) {\n      const roiAsString = event.target.value.replace(/,/g, \".\");\n      setTargetRoi(roiAsString);\n      setExpectedRoi(roiAsString);\n    }\n  };\n  return (\n    <RoiCardWrapper>\n      <RoiCardInner>\n        <Text fontSize=\"12px\" color=\"secondary\" bold textTransform=\"uppercase\">\n          {t(\"ROI at current rates\")}\n        </Text>\n        <Flex justifyContent=\"space-between\" mt=\"4px\" height=\"36px\">\n          {mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI ? (\n            <>\n              <RoiInputContainer>\n                <Input\n                  ref={inputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"^[0-9]+[.,]?[0-9]*$\"\n                  scale=\"sm\"\n                  value={expectedRoi}\n                  placeholder=\"0.0\"\n                  onChange={handleExpectedRoiChange}\n                />\n              </RoiInputContainer>\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onExitRoiEditing}>\n                <CheckmarkIcon color=\"primary\" />\n              </IconButton>\n            </>\n          ) : (\n            <>\n              <RoiDisplayContainer onClick={onEnterEditing}>\n                {/* Dollar sign is separate cause its not supposed to scroll with a number if number is huge */}\n                <Text fontSize=\"24px\" bold>\n                  $\n                </Text>\n                <RoiDollarAmount fontSize=\"24px\" bold fadeOut={roiUSD > TRILLION}>\n                  {roiUSD.toLocaleString(\"en\", {\n                    minimumFractionDigits: roiUSD > MILLION ? 0 : 2,\n                    maximumFractionDigits: roiUSD > MILLION ? 0 : 2,\n                  })}\n                </RoiDollarAmount>\n              </RoiDisplayContainer>\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onEnterEditing}>\n                <PencilIcon color=\"primary\" />\n              </IconButton>\n            </>\n          )}\n        </Flex>\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          ~ {roiTokens} {earningTokenSymbol}\n          <Text\n            fontSize=\"12px\"\n            color=\"textSubtle\"\n            ml=\"3px\"\n            display=\"inline-block\"\n            maxWidth=\"100%\"\n            style={{ lineBreak: \"anywhere\" }}\n          >\n            ({roiPercentage.toLocaleString(\"en\", { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\n            %)\n          </Text>\n        </Text>\n      </RoiCardInner>\n    </RoiCardWrapper>\n  );\n};\n\nexport default RoiCard;\n","import { useState, useEffect } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { CalculatorMode, RoiCalculatorReducerState } from \"./useRoiCalculatorReducer\";\nimport { Flex } from \"../Box\";\nimport { ArrowDownIcon, ArrowUpIcon } from \"../Svg\";\n\nconst rotate = keyframes`\n  0% {\n    transform: scale(1);\n    stroke-width: 0;\n  }\n  50% {\n    transform: scale(1.3);\n    stroke-width: 2;\n  }\n  100% {\n    transform: scale(1);\n    stroke-width: 0;\n  }\n`;\n\nconst ArrowContainer = styled(Flex)`\n  & > svg {\n    animation: 0.2s ${rotate} linear;\n    stroke: ${({ theme }) => `${theme.colors.primary3D}`};\n    stroke-width: 0;\n  }\n`;\n\ninterface AnimatedArrowProps {\n  calculatorState: RoiCalculatorReducerState;\n}\n\nconst AnimatedArrow: React.FC<React.PropsWithChildren<AnimatedArrowProps>> = ({ calculatorState }) => {\n  const [key, setKey] = useState(\"roiArrow-0\");\n  const { mode } = calculatorState.controls;\n\n  // Trigger animation on state change\n  useEffect(() => {\n    setKey((prevKey) => {\n      const prevId = parseInt(prevKey.split(\"-\")[1], 10);\n      return `roiArrow-${prevId + 1}`;\n    });\n  }, [calculatorState]);\n\n  return (\n    <ArrowContainer justifyContent=\"center\" my=\"24px\" key={key}>\n      {mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL ? (\n        <ArrowDownIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\n      ) : (\n        <ArrowUpIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\n      )}\n    </ArrowContainer>\n  );\n};\n\nexport default AnimatedArrow;\n","import { useTranslation } from \"@pancakeswap/localization\";\nimport { getBalanceNumber } from \"@pancakeswap/utils/formatBalance\";\nimport BigNumber from \"bignumber.js\";\nimport { useEffect, useMemo, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport RoiCalculatorFooter from \"./RoiCalculatorFooter\";\nimport RoiCard from \"./RoiCard\";\nimport useRoiCalculatorReducer, {\n  CalculatorMode,\n  DefaultCompoundStrategy,\n  EditingCurrency,\n} from \"./useRoiCalculatorReducer\";\nimport AnimatedArrow from \"./AnimatedArrow\";\nimport { Flex } from \"../Box\";\nimport { Text } from \"../Text\";\nimport { HelpIcon } from \"../Svg\";\nimport { Button } from \"../Button\";\nimport { Checkbox } from \"../Checkbox\";\nimport { Modal } from \"../../widgets/Modal\";\nimport { BalanceInput } from \"../BalanceInput\";\nimport { useTooltip } from \"../../hooks/useTooltip\";\nimport { ButtonMenu, ButtonMenuItem } from \"../ButtonMenu\";\n\nconst StyledModal = styled(Modal)`\n  & > :nth-child(2) {\n    padding: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    width: 380px;\n  }\n`;\n\nconst ScrollableContainer = styled.div`\n  padding: 24px;\n  max-height: 500px;\n  overflow-y: auto;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-height: none;\n  }\n`;\n\nconst FullWidthButtonMenu = styled(ButtonMenu)<{ disabled?: boolean }>`\n  width: 100%;\n\n  & > button {\n    width: 100%;\n  }\n\n  opacity: ${({ disabled }) => (disabled ? 0.5 : 1)};\n`;\n\nexport interface RoiCalculatorModalProps {\n  account: string;\n  pid?: number;\n  earningTokenPrice: number;\n  apr?: number;\n  apy?: number;\n  displayApr?: string;\n  linkLabel: string;\n  linkHref: string;\n  stakingTokenBalance: BigNumber;\n  stakingTokenDecimals: number;\n  stakingTokenSymbol: string;\n  stakingTokenPrice: number;\n  earningTokenSymbol?: string;\n  multiplier?: string;\n  autoCompoundFrequency?: number;\n  performanceFee?: number;\n  isFarm?: boolean;\n  initialState?: any;\n  initialValue?: string;\n  strategy?: any;\n  header?: React.ReactNode;\n  rewardCakePerSecond?: boolean;\n  onBack?: () => void;\n  onDismiss?: () => void;\n  bCakeCalculatorSlot?: (stakingTokenBalance: string) => React.ReactNode;\n  isLocked?: boolean;\n  stableSwapAddress?: string;\n  stableLpFee?: number;\n}\n\nconst RoiCalculatorModal: React.FC<React.PropsWithChildren<RoiCalculatorModalProps>> = ({\n  account,\n  earningTokenPrice,\n  apr,\n  apy,\n  displayApr,\n  linkLabel,\n  linkHref,\n  stakingTokenBalance,\n  stakingTokenSymbol,\n  stakingTokenPrice,\n  multiplier,\n  initialValue,\n  earningTokenSymbol = \"CAKE\",\n  autoCompoundFrequency = 0,\n  performanceFee = 0,\n  isFarm = false,\n  initialState,\n  strategy,\n  header,\n  children,\n  stakingTokenDecimals,\n  rewardCakePerSecond,\n  onBack,\n  onDismiss,\n  bCakeCalculatorSlot,\n  isLocked = false,\n  stableSwapAddress,\n  stableLpFee,\n}) => {\n  const { t } = useTranslation();\n  const balanceInputRef = useRef<HTMLInputElement | null>(null);\n\n  const {\n    state,\n    setPrincipalFromUSDValue,\n    setPrincipalFromTokenValue,\n    setStakingDuration,\n    toggleCompounding,\n    toggleEditingCurrency,\n    setCompoundingFrequency,\n    setCalculatorMode,\n    setTargetRoi,\n    dispatch,\n  } = useRoiCalculatorReducer({ stakingTokenPrice, earningTokenPrice, autoCompoundFrequency }, initialState);\n\n  const { compounding, activeCompoundingIndex, stakingDuration, editingCurrency } = state.controls;\n  const { principalAsUSD, principalAsToken } = state.data;\n\n  // Auto-focus input on opening modal\n  useEffect(() => {\n    if (balanceInputRef.current) {\n      balanceInputRef.current.focus();\n    }\n  }, []);\n\n  // If user comes to calculator from staking modal - initialize with whatever they put in there\n  useEffect(() => {\n    if (initialValue) {\n      setPrincipalFromTokenValue(initialValue);\n    }\n  }, [initialValue, setPrincipalFromTokenValue]);\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    isFarm\n      ? t(\"“My Balance” here includes both LP Tokens in your wallet, and LP Tokens already staked in this farm.\")\n      : t(\n          \"“My Balance” here includes both %assetSymbol% in your wallet, and %assetSymbol% already staked in this pool.\",\n          { assetSymbol: stakingTokenSymbol }\n        ),\n    { placement: \"top-end\", tooltipOffset: [20, 10] }\n  );\n\n  const onBalanceFocus = () => {\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL);\n  };\n  const editingUnit = editingCurrency === EditingCurrency.TOKEN ? stakingTokenSymbol : \"USD\";\n  const editingValue = editingCurrency === EditingCurrency.TOKEN ? principalAsToken : principalAsUSD;\n  const conversionUnit = editingCurrency === EditingCurrency.TOKEN ? \"USD\" : stakingTokenSymbol;\n  const conversionValue = editingCurrency === EditingCurrency.TOKEN ? principalAsUSD : principalAsToken;\n  const onUserInput = editingCurrency === EditingCurrency.TOKEN ? setPrincipalFromTokenValue : setPrincipalFromUSDValue;\n\n  const DURATION = useMemo(() => [t(\"1D\"), t(\"7D\"), t(\"30D\"), t(\"1Y\"), t(\"5Y\")], [t]);\n\n  const isDisableMyBalance = useMemo(() => {\n    return (\n      !Number.isFinite(stakingTokenPrice) || !stakingTokenBalance.isFinite() || stakingTokenBalance.lte(0) || !account\n    );\n  }, [account, stakingTokenBalance, stakingTokenPrice]);\n\n  return (\n    <StyledModal\n      title={t(\"ROI Calculator\")}\n      onDismiss={onBack || onDismiss}\n      onBack={onBack}\n      headerBackground=\"gradientCardHeader\"\n    >\n      <ScrollableContainer>\n        {strategy ? (\n          strategy(state, dispatch)\n        ) : (\n          <DefaultCompoundStrategy\n            state={state}\n            apr={apy ?? apr}\n            dispatch={dispatch}\n            earningTokenPrice={earningTokenPrice}\n            performanceFee={performanceFee}\n            stakingTokenPrice={stakingTokenPrice}\n          />\n        )}\n        {header}\n        <Flex flexDirection=\"column\" mb=\"8px\">\n          <Text color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n            {t(\"%asset% staked\", { asset: stakingTokenSymbol })}\n          </Text>\n          <BalanceInput\n            inputProps={{ scale: \"sm\" }}\n            currencyValue={`${conversionValue} ${conversionUnit}`}\n            innerRef={balanceInputRef}\n            placeholder=\"0.00\"\n            value={editingValue}\n            unit={editingUnit}\n            decimals={stakingTokenDecimals}\n            onUserInput={onUserInput}\n            switchEditingUnits={toggleEditingCurrency}\n            onFocus={onBalanceFocus}\n          />\n          <Flex justifyContent=\"space-between\" mt=\"8px\">\n            <Button\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"68px\"\n              variant=\"tertiary\"\n              onClick={() => setPrincipalFromUSDValue(\"100\")}\n            >\n              $100\n            </Button>\n            <Button\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"68px\"\n              variant=\"tertiary\"\n              onClick={() => setPrincipalFromUSDValue(\"1000\")}\n            >\n              $1000\n            </Button>\n            <Button\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"128px\"\n              variant=\"tertiary\"\n              style={{ textTransform: \"uppercase\" }}\n              disabled={isDisableMyBalance}\n              onClick={() =>\n                setPrincipalFromUSDValue(\n                  getBalanceNumber(stakingTokenBalance.times(stakingTokenPrice), stakingTokenDecimals).toString()\n                )\n              }\n            >\n              {t(\"My Balance\")}\n            </Button>\n            <span ref={targetRef}>\n              <HelpIcon width=\"16px\" height=\"16px\" color=\"textSubtle\" />\n            </span>\n            {tooltipVisible && tooltip}\n          </Flex>\n          {children || (\n            <>\n              <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n                {t(\"Staked for\")}\n              </Text>\n              <FullWidthButtonMenu activeIndex={stakingDuration} onItemClick={setStakingDuration} scale=\"sm\">\n                {DURATION.map((duration) => (\n                  <ButtonMenuItem key={duration} variant=\"tertiary\">\n                    {duration}\n                  </ButtonMenuItem>\n                ))}\n              </FullWidthButtonMenu>\n            </>\n          )}\n          {bCakeCalculatorSlot && bCakeCalculatorSlot(principalAsToken)}\n          {autoCompoundFrequency === 0 && (\n            <>\n              <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n                {t(\"Compounding every\")}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Flex flex=\"1\">\n                  <Checkbox scale=\"sm\" checked={compounding} onChange={toggleCompounding} />\n                </Flex>\n                <Flex flex=\"6\">\n                  <FullWidthButtonMenu\n                    scale=\"sm\"\n                    disabled={!compounding}\n                    activeIndex={activeCompoundingIndex}\n                    onItemClick={setCompoundingFrequency}\n                  >\n                    <ButtonMenuItem>{t(\"1D\")}</ButtonMenuItem>\n                    <ButtonMenuItem>{t(\"7D\")}</ButtonMenuItem>\n                    <ButtonMenuItem>{t(\"14D\")}</ButtonMenuItem>\n                    <ButtonMenuItem>{t(\"30D\")}</ButtonMenuItem>\n                  </FullWidthButtonMenu>\n                </Flex>\n              </Flex>\n            </>\n          )}\n        </Flex>\n        <AnimatedArrow calculatorState={state} />\n        <Flex>\n          <RoiCard\n            calculatorState={state}\n            earningTokenSymbol={earningTokenSymbol}\n            setTargetRoi={setTargetRoi}\n            setCalculatorMode={setCalculatorMode}\n          />\n        </Flex>\n      </ScrollableContainer>\n      <RoiCalculatorFooter\n        isFarm={isFarm}\n        apr={apr}\n        apy={apy}\n        displayApr={displayApr}\n        autoCompoundFrequency={autoCompoundFrequency}\n        multiplier={multiplier}\n        linkLabel={linkLabel}\n        linkHref={linkHref}\n        performanceFee={performanceFee}\n        rewardCakePerSecond={rewardCakePerSecond}\n        isLocked={isLocked}\n        stableSwapAddress={stableSwapAddress}\n        stableLpFee={stableLpFee}\n      />\n    </StyledModal>\n  );\n};\n\nexport default RoiCalculatorModal;\n","import { useEffect, useReducer, useCallback } from \"react\";\nimport merge from \"lodash/merge\";\nimport BigNumber from \"bignumber.js\";\nimport { getRoi, getInterestBreakdown, getPrincipalForInterest } from \"@pancakeswap/utils/compoundApyHelpers\";\n\n/**\n * This hook is handling all the calculator state and calculations.\n * UI connected to it is merely representation of the data and buttons to trigger actions\n */\n\n// Mapping from the compounding frequency button index to actual compounding frequency\n// in number of compounds per day\nconst compoundingIndexToFrequency = {\n  0: 1,\n  1: 0.142857142,\n  2: 0.071428571, // once every 7 days\n  3: 0.033333333, // once every 30 days\n};\n\nconst TOKEN_PRECISION = 10;\nconst USD_PRECISION = 2;\n\n// Used to track/react which currency user is editing (i.e. USD amount or Token amount)\nexport enum EditingCurrency {\n  TOKEN,\n  USD,\n}\n\n// Calculator works in 2 modes\nexport enum CalculatorMode {\n  ROI_BASED_ON_PRINCIPAL, // User edits principal value and sees what ROI they get\n  PRINCIPAL_BASED_ON_ROI, // User edits ROI value and sees what principal they need to invest to reach it\n}\n\nexport interface RoiCalculatorReducerState {\n  controls: {\n    compounding: boolean; // Compounding checkbox state\n    compoundingFrequency: number; // Compounding frequency in number of compounds per day\n    activeCompoundingIndex: number; // index of active compounding button in ButtonMenu\n    stakingDuration: number; // index of active staking duration button in ButtonMenu\n    mode: CalculatorMode;\n    editingCurrency: EditingCurrency;\n  };\n  data: {\n    principalAsToken: string; // Used as value for Inputs\n    principalAsUSD: string; // Used as value for Inputs\n    roiUSD: number;\n    roiTokens: number;\n    roiPercentage: number; // ROI expressed in percentage relative to principal\n  };\n}\n\nconst defaultState: RoiCalculatorReducerState = {\n  controls: {\n    compounding: true,\n    compoundingFrequency: 1, // how many compound in a day , e.g. 1 = once a day, 0.071 - once per 2 weeks\n    activeCompoundingIndex: 0, // active compounding selected in\n    stakingDuration: 3,\n    mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL,\n    editingCurrency: EditingCurrency.USD,\n  },\n  data: {\n    principalAsToken: \"0.00\",\n    principalAsUSD: \"\",\n    roiUSD: 0,\n    roiTokens: 0,\n    roiPercentage: 0,\n  },\n};\n\nconst roiCalculatorReducer = (\n  state: RoiCalculatorReducerState,\n  action: { type: string; payload?: any }\n): RoiCalculatorReducerState => {\n  switch (action.type) {\n    case \"setStakingDuration\": {\n      const controls = { ...state.controls, stakingDuration: action.payload };\n      return {\n        ...state,\n        controls,\n      };\n    }\n    case \"toggleCompounding\": {\n      const toggledCompounding = !state.controls.compounding;\n      const controls = { ...state.controls, compounding: toggledCompounding };\n      return {\n        ...state,\n        controls,\n      };\n    }\n    case \"setCompoundingFrequency\": {\n      const { index, autoCompoundFrequency } = action.payload;\n      if (autoCompoundFrequency) {\n        return {\n          ...state,\n          controls: {\n            ...state.controls,\n            compoundingFrequency: autoCompoundFrequency,\n          },\n        };\n      }\n      const compoundingFrequency = (compoundingIndexToFrequency as any)[index];\n      const controls = { ...state.controls, compoundingFrequency, activeCompoundingIndex: index };\n      return {\n        ...state,\n        controls,\n      };\n    }\n    case \"setPrincipal\": {\n      const { principalAsUSD, principalAsToken } = action.payload;\n      const data = { ...state.data, principalAsUSD, principalAsToken };\n      const controls = { ...state.controls, mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL };\n      return {\n        controls,\n        data,\n      };\n    }\n    case \"setPrincipalForTargetRoi\": {\n      const { principalAsUSD, principalAsToken, roiPercentage } = action.payload;\n      const data = { ...state.data, principalAsUSD, principalAsToken, roiPercentage };\n      return {\n        ...state,\n        data,\n      };\n    }\n    case \"setCalculatorMode\": {\n      const mode = action.payload;\n      const controls = { ...state.controls, mode };\n      if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\n        const roiUSD = parseFloat(state.data.roiUSD.toFixed(USD_PRECISION));\n        const data = { ...state.data, roiUSD };\n        return { controls, data };\n      }\n      return { ...state, controls };\n    }\n    case \"setRoi\": {\n      const data = { ...state.data, ...action.payload };\n      return { ...state, data };\n    }\n    case \"setTargetRoi\": {\n      const { roiUSD, roiTokens } = action.payload;\n      const data = { ...state.data, roiUSD, roiTokens };\n      const controls = { ...state.controls, mode: CalculatorMode.PRINCIPAL_BASED_ON_ROI };\n      return { controls, data };\n    }\n    case \"toggleEditingCurrency\": {\n      const currencyAfterChange =\n        state.controls.editingCurrency === EditingCurrency.USD ? EditingCurrency.TOKEN : EditingCurrency.USD;\n      const controls = { ...state.controls, editingCurrency: currencyAfterChange };\n      return { ...state, controls };\n    }\n    default:\n      return state;\n  }\n};\n\nconst useRoiCalculatorReducer = (\n  {\n    stakingTokenPrice,\n    earningTokenPrice,\n    autoCompoundFrequency,\n  }: {\n    stakingTokenPrice: number;\n    earningTokenPrice: number;\n    autoCompoundFrequency: number;\n  },\n  initialState: any\n) => {\n  const [state, dispatch] = useReducer(roiCalculatorReducer, merge(defaultState, initialState));\n\n  // If pool is auto-compounding set state's compounding frequency to this pool's auto-compound frequency\n  useEffect(() => {\n    if (autoCompoundFrequency > 0) {\n      dispatch({ type: \"setCompoundingFrequency\", payload: { autoCompoundFrequency } });\n    }\n  }, [autoCompoundFrequency]);\n\n  // Handler for compounding frequency buttons\n  const setCompoundingFrequency = (index: number) => {\n    dispatch({ type: \"setCompoundingFrequency\", payload: { index } });\n  };\n\n  // Handler for principal input when in USD mode\n  const setPrincipalFromUSDValue = (amount: string) => {\n    const principalAsTokenBN = new BigNumber(amount).div(stakingTokenPrice);\n    const principalAsToken = principalAsTokenBN.gt(0) ? principalAsTokenBN.toFixed(TOKEN_PRECISION) : \"0.00\";\n    dispatch({ type: \"setPrincipal\", payload: { principalAsUSD: amount, principalAsToken } });\n  };\n\n  // Handler for principal input when in Token mode\n  const setPrincipalFromTokenValue = useCallback(\n    (amount: string) => {\n      const principalAsUsdBN = new BigNumber(amount).times(stakingTokenPrice);\n      const principalAsUsdString = principalAsUsdBN.gt(0) ? principalAsUsdBN.toFixed(USD_PRECISION) : \"0.00\";\n      dispatch({\n        type: \"setPrincipal\",\n        payload: { principalAsUSD: principalAsUsdString, principalAsToken: amount },\n      });\n    },\n    [stakingTokenPrice]\n  );\n\n  // Handler for staking duration buttons\n  const setStakingDuration = (stakingDurationIndex: number) => {\n    dispatch({ type: \"setStakingDuration\", payload: stakingDurationIndex });\n  };\n\n  // Handler for compounding checkbox\n  const toggleCompounding = () => {\n    dispatch({ type: \"toggleCompounding\" });\n  };\n\n  // Handler for principal input mode switch\n  const toggleEditingCurrency = () => {\n    dispatch({ type: \"toggleEditingCurrency\" });\n  };\n\n  const setCalculatorMode = (modeToSet: CalculatorMode) => {\n    dispatch({ type: \"setCalculatorMode\", payload: modeToSet });\n  };\n\n  // Handler for ROI input\n  const setTargetRoi = (amount: string) => {\n    const targetRoiAsTokens = new BigNumber(amount).div(earningTokenPrice);\n    dispatch({\n      type: \"setTargetRoi\",\n      payload: { roiUSD: +amount, roiTokens: targetRoiAsTokens.isNaN() ? 0 : targetRoiAsTokens.toNumber() },\n    });\n  };\n\n  return {\n    state,\n    setPrincipalFromUSDValue,\n    setPrincipalFromTokenValue,\n    setStakingDuration,\n    toggleCompounding,\n    toggleEditingCurrency,\n    setCompoundingFrequency,\n    setCalculatorMode,\n    setTargetRoi,\n    dispatch,\n  };\n};\n\nexport default useRoiCalculatorReducer;\n\ninterface DefaultCompoundStrategyProps {\n  state: any;\n  apr?: number;\n  earningTokenPrice: number;\n  stakingTokenPrice: number;\n  performanceFee: number;\n  dispatch: any;\n}\n\nexport function DefaultCompoundStrategy({\n  state,\n  apr = 0,\n  earningTokenPrice,\n  stakingTokenPrice,\n  performanceFee,\n  dispatch,\n}: DefaultCompoundStrategyProps) {\n  const { principalAsUSD, roiUSD } = state.data;\n  const { compounding, compoundingFrequency, stakingDuration, mode } = state.controls;\n\n  // Calculates and sets ROI whenever related values change\n  useEffect(() => {\n    if (mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL) {\n      const principalInUSDAsNumber = parseFloat(principalAsUSD);\n      const compoundFrequency = compounding ? compoundingFrequency : 0;\n      const interestBreakdown = getInterestBreakdown({\n        principalInUSD: principalInUSDAsNumber,\n        apr,\n        earningTokenPrice,\n        compoundFrequency,\n        performanceFee,\n      });\n      const hasInterest = !Number.isNaN(interestBreakdown[stakingDuration]);\n      const roiTokens = hasInterest ? interestBreakdown[stakingDuration] : 0;\n      const roiAsUSD = hasInterest ? roiTokens * earningTokenPrice : 0;\n      const roiPercentage = hasInterest\n        ? getRoi({\n            amountEarned: roiAsUSD,\n            amountInvested: principalInUSDAsNumber,\n          })\n        : 0;\n      dispatch({ type: \"setRoi\", payload: { roiUSD: roiAsUSD, roiTokens, roiPercentage } });\n    }\n  }, [\n    principalAsUSD,\n    apr,\n    stakingDuration,\n    earningTokenPrice,\n    performanceFee,\n    compounding,\n    compoundingFrequency,\n    mode,\n    dispatch,\n  ]);\n\n  // Calculates and sets principal based on expected ROI value\n  useEffect(() => {\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\n      const principalForExpectedRoi = getPrincipalForInterest(\n        roiUSD,\n        apr,\n        compounding ? compoundingFrequency : 0,\n        performanceFee\n      );\n      const principalUSD = !Number.isNaN(principalForExpectedRoi[stakingDuration])\n        ? principalForExpectedRoi[stakingDuration]\n        : 0;\n      const principalToken = new BigNumber(principalUSD).div(stakingTokenPrice);\n      const roiPercentage = getRoi({\n        amountEarned: roiUSD,\n        amountInvested: principalUSD,\n      });\n      dispatch({\n        type: \"setPrincipalForTargetRoi\",\n        payload: {\n          principalAsUSD: principalUSD.toFixed(USD_PRECISION),\n          principalAsToken: principalToken.toFixed(TOKEN_PRECISION),\n          roiPercentage,\n        },\n      });\n    }\n  }, [\n    stakingDuration,\n    apr,\n    compounding,\n    compoundingFrequency,\n    mode,\n    roiUSD,\n    stakingTokenPrice,\n    performanceFee,\n    dispatch,\n  ]);\n\n  return null;\n}\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<React.PropsWithChildren<SvgProps>> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M18 13H13V18C13 18.55 12.55 19 12 19C11.45 19 11 18.55 11 18V13H6C5.45 13 5 12.55 5 12C5 11.45 5.45 11 6 11H11V6C11 5.45 11.45 5 12 5C12.55 5 13 5.45 13 6V11H18C18.55 11 19 11.45 19 12C19 12.55 18.55 13 18 13Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<React.PropsWithChildren<SvgProps>> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M19 3H5C3.9 3 3 3.9 3 5V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3ZM19 19H5V5H19V19Z\" />\n      <path d=\"M11.25 7.72H6.25V9.22H11.25V7.72Z\" />\n      <path d=\"M18 15.75H13V17.25H18V15.75Z\" />\n      <path d=\"M18 13.25H13V14.75H18V13.25Z\" />\n      <path d=\"M8 18H9.5V16H11.5V14.5H9.5V12.5H8V14.5H6V16H8V18Z\" />\n      <path d=\"M14.09 10.95L15.5 9.54L16.91 10.95L17.97 9.89L16.56 8.47L17.97 7.06L16.91 6L15.5 7.41L14.09 6L13.03 7.06L14.44 8.47L13.03 9.89L14.09 10.95Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<React.PropsWithChildren<SvgProps>> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M9.00012 16.2L5.50012 12.7C5.11012 12.31 4.49012 12.31 4.10012 12.7C3.71012 13.09 3.71012 13.71 4.10012 14.1L8.29012 18.29C8.68012 18.68 9.31012 18.68 9.70012 18.29L20.3001 7.70001C20.6901 7.31001 20.6901 6.69001 20.3001 6.30001C19.9101 5.91001 19.2901 5.91001 18.9001 6.30001L9.00012 16.2Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<React.PropsWithChildren<SvgProps>> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M8.11997 14.7101L12 10.8301L15.88 14.7101C16.27 15.1001 16.9 15.1001 17.29 14.7101C17.68 14.3201 17.68 13.6901 17.29 13.3001L12.7 8.7101C12.31 8.3201 11.68 8.3201 11.29 8.7101L6.69997 13.3001C6.30997 13.6901 6.30997 14.3201 6.69997 14.7101C7.08997 15.0901 7.72997 15.1001 8.11997 14.7101Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<React.PropsWithChildren<SvgProps>> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M4 13C5.1 13 6 12.1 6 11C6 9.9 5.1 9 4 9C2.9 9 2 9.9 2 11C2 12.1 2.9 13 4 13ZM5.13 14.1C4.76 14.04 4.39 14 4 14C3.01 14 2.07 14.21 1.22 14.58C0.48 14.9 0 15.62 0 16.43V17C0 17.5523 0.447715 18 1 18H4.5V16.39C4.5 15.56 4.73 14.78 5.13 14.1ZM20 13C21.1 13 22 12.1 22 11C22 9.9 21.1 9 20 9C18.9 9 18 9.9 18 11C18 12.1 18.9 13 20 13ZM24 16.43C24 15.62 23.52 14.9 22.78 14.58C21.93 14.21 20.99 14 20 14C19.61 14 19.24 14.04 18.87 14.1C19.27 14.78 19.5 15.56 19.5 16.39V18H23C23.5523 18 24 17.5523 24 17V16.43ZM16.24 13.65C15.07 13.13 13.63 12.75 12 12.75C10.37 12.75 8.93 13.14 7.76 13.65C6.68 14.13 6 15.21 6 16.39V17C6 17.5523 6.44772 18 7 18H17C17.5523 18 18 17.5523 18 17V16.39C18 15.21 17.32 14.13 16.24 13.65ZM8.07 16C8.16 15.77 8.2 15.61 8.98 15.31C9.95 14.93 10.97 14.75 12 14.75C13.03 14.75 14.05 14.93 15.02 15.31C15.79 15.61 15.83 15.77 15.93 16H8.07ZM12 8C12.55 8 13 8.45 13 9C13 9.55 12.55 10 12 10C11.45 10 11 9.55 11 9C11 8.45 11.45 8 12 8ZM12 6C10.34 6 9 7.34 9 9C9 10.66 10.34 12 12 12C13.66 12 15 10.66 15 9C15 7.34 13.66 6 12 6Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<React.PropsWithChildren<SvgProps>> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M13 7C13 6.44772 12.5523 6 12 6C11.4478 6 11 6.44772 11 7V7.51206C9.97631 7.76875 9.16137 8.59434 8.94664 9.66796C8.60189 11.3917 9.92035 13 11.6783 13H12.7143C13.1483 13 13.5 13.3518 13.5 13.7857C13.5 14.2197 13.1483 14.5714 12.7143 14.5714H11.4947C11.3096 14.5714 11.1282 14.5201 10.9706 14.4231L10.5241 14.1483C10.0538 13.8589 9.43783 14.0055 9.14838 14.4759C8.85893 14.9463 9.00559 15.5622 9.47594 15.8517L9.92241 16.1264C10.2535 16.3302 10.6197 16.4668 11 16.5304V17C11 17.5523 11.4478 18 12 18C12.5523 18 13 17.5523 13 17V16.557C14.4043 16.4139 15.5 15.2278 15.5 13.7857C15.5 12.2472 14.2528 11 12.7143 11H11.6783C11.1824 11 10.8106 10.5464 10.9078 10.0602C10.9813 9.69293 11.3037 9.42857 11.6783 9.42857H12.2948C12.5269 9.42857 12.7494 9.52076 12.9135 9.68485L13.0786 9.84996C13.4692 10.2405 14.1023 10.2405 14.4929 9.84996C14.8834 9.45944 14.8834 8.82627 14.4929 8.43575L14.3278 8.27064C13.9582 7.90106 13.4983 7.64249 13 7.5164V7Z\" />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M2 12C2 6.48 6.48 2 12 2C17.52 2 22 6.48 22 12C22 17.52 17.52 22 12 22C6.48 22 2 17.52 2 12ZM4 12C4 16.41 7.59 20 12 20C16.41 20 20 16.41 20 12C20 7.59 16.41 4 12 4C7.59 4 4 7.59 4 12Z\"\n      />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<React.PropsWithChildren<SvgProps>> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M18 13H6C5.45 13 5 12.55 5 12C5 11.45 5.45 11 6 11H18C18.55 11 19 11.45 19 12C19 12.55 18.55 13 18 13Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<React.PropsWithChildren<SvgProps>> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 19 19\" {...props}>\n      <path d=\"M0 15.46V18.5C0 18.78 0.22 19 0.5 19H3.54C3.67 19 3.8 18.95 3.89 18.85L14.81 7.94L11.06 4.19L0.15 15.1C0.0500001 15.2 0 15.32 0 15.46ZM17.71 5.04C18.1 4.65 18.1 4.02 17.71 3.63L15.37 1.29C14.98 0.899998 14.35 0.899998 13.96 1.29L12.13 3.12L15.88 6.87L17.71 5.04Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<React.PropsWithChildren<SvgProps>> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 15 15\" {...props}>\n      <path d=\"M8.34588 13.6273C8.0575 13.8656 7.63823 13.7399 7.49172 13.3958L6.78828 11.7438C7.73587 11.3939 8.62311 10.9234 9.44396 10.3744C9.44396 10.3744 9.66966 11.6436 9.38982 12.3723C9.20938 12.8421 8.73469 13.3061 8.34588 13.6273ZM3.25141 8.2087L1.60451 7.50815C1.25825 7.36086 1.1335 6.93831 1.37577 6.6505C1.69974 6.26564 2.16489 5.79794 2.63298 5.61886C3.35861 5.34125 4.62149 5.55437 4.62149 5.55437C4.07225 6.3748 3.60147 7.26158 3.25141 8.2087ZM12.8903 2.10977C12.8903 2.10977 9.90266 0.830267 6.4865 4.2453C5.1647 5.56643 4.37403 7.02028 3.861 8.29315C3.69201 8.7456 3.80668 9.24027 4.13864 9.57809L5.42423 10.857C5.75619 11.1948 6.25111 11.3034 6.70378 11.1345C8.22388 10.5552 9.6041 9.66087 10.7537 8.51033C14.1699 5.09589 12.8903 2.10977 12.8903 2.10977ZM8.62311 6.3748C8.15233 5.90426 8.15233 5.13812 8.62311 4.66758C9.09389 4.19704 9.86042 4.19704 10.3312 4.66758C10.7959 5.13812 10.802 5.90426 10.3312 6.3748C9.86042 6.84534 9.09389 6.84534 8.62311 6.3748Z\" />\n      <path d=\"M3.77609 10.3019C3.54971 10.0756 3.23604 9.92849 2.92949 10.0208C2.22706 10.2322 1.71542 10.8838 1.71542 11.6548L1.71542 13.361H3.42253C4.19392 13.361 4.84581 12.8496 5.05736 12.1476C5.14968 11.8412 5.00246 11.5277 4.77608 11.3014L3.77609 10.3019Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<React.PropsWithChildren<SvgProps>> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M15.0701 1.01H9.07007V3.01H15.0701V1.01ZM11.0701 14.01H13.0701V8.01H11.0701V14.01ZM19.1001 7.39L20.5201 5.97C20.0901 5.46 19.6201 4.98 19.1101 4.56L17.6901 5.98C16.1401 4.74 14.1901 4 12.0701 4C7.10007 4 3.07007 8.03 3.07007 13C3.07007 17.97 7.09007 22 12.0701 22C17.0501 22 21.0701 17.97 21.0701 13C21.0701 10.89 20.3301 8.94 19.1001 7.39ZM12.0701 20.01C8.20007 20.01 5.07007 16.88 5.07007 13.01C5.07007 9.14 8.20007 6.01 12.0701 6.01C15.9401 6.01 19.0701 9.14 19.0701 13.01C19.0701 16.88 15.9401 20.01 12.0701 20.01Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<React.PropsWithChildren<SvgProps>> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M23 12L20.56 9.21L20.9 5.52L17.29 4.7L15.4 1.5L12 2.96L8.6 1.5L6.71 4.69L3.1 5.5L3.44 9.2L1 12L3.44 14.79L3.1 18.49L6.71 19.31L8.6 22.5L12 21.03L15.4 22.49L17.29 19.3L20.9 18.48L20.56 14.79L23 12ZM9.38 16.01L7 13.61C6.61 13.22 6.61 12.59 7 12.2L7.07 12.13C7.46 11.74 8.1 11.74 8.49 12.13L10.1 13.75L15.25 8.59C15.64 8.2 16.28 8.2 16.67 8.59L16.74 8.66C17.13 9.05 17.13 9.68 16.74 10.07L10.82 16.01C10.41 16.4 9.78 16.4 9.38 16.01Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<React.PropsWithChildren<SvgProps>> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M2 21.8966H12C12.55 21.8966 13 22.3466 13 22.8966C13 23.4466 12.55 23.8966 12 23.8966H2C1.45 23.8966 1 23.4466 1 22.8966C1 22.3466 1.45 21.8966 2 21.8966ZM5.24 8.96661L8.07 6.13661L20.8 18.8666C21.58 19.6466 21.58 20.9166 20.8 21.6966C20.02 22.4766 18.75 22.4766 17.97 21.6966L5.24 8.96661ZM13.73 3.30661L16.56 6.13661C17.34 6.91661 17.34 8.18661 16.56 8.96661L15.14 10.3866L9.49 4.72661L10.9 3.31661C11.68 2.52661 12.95 2.52661 13.73 3.30661ZM3.83 10.3766L9.49 16.0366L8.08 17.4466C7.3 18.2266 6.03 18.2266 5.25 17.4466L2.42 14.6166C1.64 13.8366 1.64 12.5666 2.42 11.7866L3.83 10.3766Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useRouter } from \"next/router\";\nimport { useTranslation } from \"@pancakeswap/localization\";\nimport { NextLinkFromReactRouter } from \"../../../components/NextLink\";\nimport { NotificationDot } from \"../../../components/NotificationDot\";\nimport { ButtonMenu, ButtonMenuItem } from \"../../../components/ButtonMenu\";\nimport { Text } from \"../../../components/Text\";\nimport { Flex } from \"../../../components/Box\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`;\n\ninterface FarmTabButtonsProps {\n  hasStakeInFinishedFarms: boolean;\n}\n\nexport const FarmTabButtons: React.FC<React.PropsWithChildren<FarmTabButtonsProps>> = ({ hasStakeInFinishedFarms }) => {\n  const router = useRouter();\n  const { t } = useTranslation();\n\n  let activeIndex;\n  switch (router.pathname) {\n    case \"/farms\":\n      activeIndex = 0;\n      break;\n    case \"/farms/history\":\n      activeIndex = 1;\n      break;\n    case \"/_mp/farms/history\":\n      activeIndex = 1;\n      break;\n    case \"/farms/archived\":\n      activeIndex = 2;\n      break;\n    default:\n      activeIndex = 0;\n      break;\n  }\n\n  return (\n    <Wrapper>\n      <Flex width=\"max-content\" flexDirection=\"column\">\n        <Text textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\" bold>\n          {t(\"Filter by\")}\n        </Text>\n        <ButtonMenu activeIndex={activeIndex} scale=\"sm\" variant=\"subtle\">\n          <ButtonMenuItem as={NextLinkFromReactRouter} to=\"/farms\">\n            {t(\"Live\")}\n          </ButtonMenuItem>\n          <NotificationDot show={hasStakeInFinishedFarms}>\n            <ButtonMenuItem as={NextLinkFromReactRouter} to=\"/farms/history\" id=\"finished-farms-button\">\n              {t(\"Finished\")}\n            </ButtonMenuItem>\n          </NotificationDot>\n        </ButtonMenu>\n      </Flex>\n    </Wrapper>\n  );\n};\n","import styled from \"styled-components\";\nimport { Flex } from \"../../../../components/Box\";\nimport { CalculateIcon } from \"../../../../components/Svg\";\nimport { IconButton } from \"../../../../components/Button\";\n\nconst ApyLabelContainer = styled(Flex)`\n  cursor: pointer;\n  &:hover {\n    opacity: 0.5;\n  }\n`;\n\ninterface FarmApyButtonProps {\n  hideButton?: boolean;\n  strikethrough?: boolean;\n  variant: \"text\" | \"text-and-button\";\n  handleClickButton: (event: React.MouseEvent<HTMLDivElement>) => void;\n}\n\nexport const FarmApyButton: React.FC<React.PropsWithChildren<FarmApyButtonProps>> = ({\n  hideButton,\n  variant,\n  strikethrough,\n  handleClickButton,\n  children,\n}) => {\n  const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n    if (hideButton) return;\n    handleClickButton(event);\n  };\n\n  return (\n    <Flex flexDirection=\"column\" alignItems=\"flex-start\">\n      <ApyLabelContainer\n        alignItems=\"center\"\n        style={{ textDecoration: strikethrough ? \"line-through\" : \"initial\" }}\n        onClick={handleClick}\n      >\n        {children}\n        {variant === \"text-and-button\" && (\n          <IconButton variant=\"text\" scale=\"sm\" ml=\"4px\">\n            <CalculateIcon width=\"18px\" />\n          </IconButton>\n        )}\n      </ApyLabelContainer>\n    </Flex>\n  );\n};\n","import { useTranslation } from \"@pancakeswap/localization\";\nimport { memo } from \"react\";\nimport { Text, TooltipText } from \"../../../../components/Text\";\nimport { Tag, TagProps } from \"../../../../components/Tag/index\";\nimport { useTooltip } from \"../../../../hooks/useTooltip\";\nimport {\n  AutoRenewIcon,\n  BlockIcon,\n  CommunityIcon,\n  RefreshIcon,\n  TimerIcon,\n  VerifiedIcon,\n  VoteIcon,\n  LockIcon,\n  RocketIcon,\n  CurrencyIcon,\n} from \"../../../../components/Svg\";\n\nconst CoreTag: React.FC<React.PropsWithChildren<TagProps>> = (props) => {\n  const { t } = useTranslation();\n  return (\n    <Tag\n      variant=\"secondary\"\n      style={{ background: \"none\" }}\n      outline\n      startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />}\n      {...props}\n    >\n      {t(\"Core\")}\n    </Tag>\n  );\n};\n\nconst FarmAuctionTagToolTipContent = memo(() => {\n  const { t } = useTranslation();\n  return <Text color=\"text\">{t(\"Farm Auction Winner, add liquidity at your own risk.\")}</Text>;\n});\n\nconst FarmAuctionTag: React.FC<React.PropsWithChildren<TagProps>> = (props) => {\n  const { t } = useTranslation();\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<FarmAuctionTagToolTipContent />, { placement: \"top\" });\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} style={{ textDecoration: \"none\" }}>\n        <Tag\n          variant=\"failure\"\n          style={{ background: \"none\" }}\n          outline\n          startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />}\n          {...props}\n        >\n          {t(\"Farm Auction\")}\n        </Tag>\n      </TooltipText>\n    </>\n  );\n};\n\nconst StableFarmTag: React.FC<React.PropsWithChildren<TagProps>> = (props) => {\n  const { t } = useTranslation();\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\"Fees are lower for stable LP\", { placement: \"top\" });\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TooltipText\n        ref={targetRef}\n        display=\"flex\"\n        style={{ textDecoration: \"none\", justifyContent: \"center\", alignSelf: \"center\" }}\n      >\n        <Tag\n          variant=\"failure\"\n          style={{ background: \"none\" }}\n          outline\n          startIcon={<CurrencyIcon width=\"18px\" color=\"failure\" mr=\"4px\" />}\n          {...props}\n        >\n          {t(\"Stable LP\")}\n        </Tag>\n      </TooltipText>\n    </>\n  );\n};\n\nconst CommunityTag: React.FC<React.PropsWithChildren<TagProps>> = (props) => {\n  const { t } = useTranslation();\n  return (\n    <Tag\n      variant=\"failure\"\n      style={{ background: \"none\" }}\n      outline\n      startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />}\n      {...props}\n    >\n      {t(\"Community\")}\n    </Tag>\n  );\n};\n\nconst DualTag: React.FC<React.PropsWithChildren<TagProps>> = (props) => {\n  const { t } = useTranslation();\n  return (\n    <Tag variant=\"textSubtle\" style={{ background: \"none\" }} outline {...props}>\n      {t(\"Dual\")}\n    </Tag>\n  );\n};\n\nconst ManualPoolTag: React.FC<React.PropsWithChildren<TagProps>> = (props) => {\n  const { t } = useTranslation();\n  return (\n    <Tag\n      variant=\"secondary\"\n      style={{ background: \"none\" }}\n      outline\n      startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />}\n      {...props}\n    >\n      {t(\"Manual\")}\n    </Tag>\n  );\n};\n\nconst LockedOrAutoPoolTag: React.FC<React.PropsWithChildren<TagProps>> = (props) => {\n  const { t } = useTranslation();\n  return (\n    <Tag variant=\"success\" style={{ background: \"none\" }} outline {...props}>\n      {t(\"Auto\")}/{t(\"Locked\")}\n    </Tag>\n  );\n};\n\nconst LockedPoolTag: React.FC<React.PropsWithChildren<TagProps>> = (props) => {\n  const { t } = useTranslation();\n  return (\n    <Tag\n      variant=\"success\"\n      style={{ background: \"none\" }}\n      outline\n      startIcon={<LockIcon width=\"18px\" color=\"success\" mr=\"4px\" />}\n      {...props}\n    >\n      {t(\"Locked\")}\n    </Tag>\n  );\n};\n\nconst CompoundingPoolTag: React.FC<React.PropsWithChildren<TagProps>> = (props) => {\n  const { t } = useTranslation();\n  return (\n    <Tag\n      variant=\"success\"\n      style={{ background: \"none\" }}\n      outline\n      startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />}\n      {...props}\n    >\n      {t(\"Auto\")}\n    </Tag>\n  );\n};\n\nconst VoteNowTag: React.FC<React.PropsWithChildren<TagProps>> = (props) => {\n  const { t } = useTranslation();\n  return (\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t(\"Vote Now\")}\n    </Tag>\n  );\n};\n\nconst SoonTag: React.FC<React.PropsWithChildren<TagProps>> = (props) => {\n  const { t } = useTranslation();\n  return (\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t(\"Soon\")}\n    </Tag>\n  );\n};\n\nconst ClosedTag: React.FC<React.PropsWithChildren<TagProps>> = (props) => {\n  const { t } = useTranslation();\n  return (\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\n      {t(\"Closed\")}\n    </Tag>\n  );\n};\n\nconst BoostedTag: React.FC<React.PropsWithChildren<TagProps>> = (props) => {\n  const { t } = useTranslation();\n  return (\n    <Tag\n      variant=\"success\"\n      style={{ background: \"none\" }}\n      outline\n      startIcon={<RocketIcon width=\"18px\" color=\"success\" mr=\"4px\" />}\n      {...props}\n    >\n      {t(\"Boosted\")}\n    </Tag>\n  );\n};\n\nconst Tags = {\n  CoreTag,\n  FarmAuctionTag,\n  DualTag,\n  ManualPoolTag,\n  CompoundingPoolTag,\n  VoteNowTag,\n  SoonTag,\n  ClosedTag,\n  CommunityTag,\n  StableFarmTag,\n  LockedPoolTag,\n  LockedOrAutoPoolTag,\n  BoostedTag,\n};\n\nexport default Tags;\n","import { useTranslation } from \"@pancakeswap/localization\";\nimport styled from \"styled-components\";\nimport { Flex } from \"../../../../components/Box\";\nimport { LinkExternal } from \"../../../../components/Link\";\nimport { Skeleton } from \"../../../../components/Skeleton\";\nimport { Text } from \"../../../../components/Text\";\n\nexport interface ExpandableSectionProps {\n  scanAddressLink?: string;\n  infoAddress?: string;\n  removed?: boolean;\n  totalValueFormatted?: string;\n  lpLabel: string;\n  addLiquidityUrl?: string;\n  isCommunity?: boolean;\n  auctionHostingEndDate?: string;\n  alignLinksToRight?: boolean;\n}\n\nconst Wrapper = styled.div`\n  margin-top: 24px;\n`;\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  font-weight: 400;\n`;\n\nexport const DetailsSection: React.FC<React.PropsWithChildren<ExpandableSectionProps>> = ({\n  scanAddressLink,\n  infoAddress,\n  removed,\n  totalValueFormatted,\n  lpLabel,\n  addLiquidityUrl,\n  isCommunity,\n  auctionHostingEndDate,\n  alignLinksToRight = true,\n}) => {\n  const {\n    t,\n    currentLanguage: { locale },\n  } = useTranslation();\n\n  return (\n    <Wrapper>\n      {isCommunity && auctionHostingEndDate && (\n        <Flex justifyContent=\"space-between\">\n          <Text>{t(\"Auction Hosting Ends\")}:</Text>\n          <Text>\n            {new Date(auctionHostingEndDate).toLocaleString(locale, {\n              month: \"short\",\n              day: \"numeric\",\n              year: \"numeric\",\n            })}\n          </Text>\n        </Flex>\n      )}\n      <Flex justifyContent=\"space-between\">\n        <Text>{t(\"Total Liquidity\")}:</Text>\n        {totalValueFormatted ? <Text>{totalValueFormatted}</Text> : <Skeleton width={75} height={25} />}\n      </Flex>\n      {!removed && (\n        <Flex mb=\"2px\" justifyContent={alignLinksToRight ? \"flex-end\" : \"flex-start\"}>\n          <StyledLinkExternal href={addLiquidityUrl}>{t(\"Get %symbol%\", { symbol: lpLabel })}</StyledLinkExternal>\n        </Flex>\n      )}\n      {infoAddress && (\n        <Flex mb=\"2px\" justifyContent={alignLinksToRight ? \"flex-end\" : \"flex-start\"}>\n          <StyledLinkExternal href={infoAddress}>{t(\"See Pair Info\")}</StyledLinkExternal>\n        </Flex>\n      )}\n      {scanAddressLink && (\n        <Flex mb=\"2px\" justifyContent={alignLinksToRight ? \"flex-end\" : \"flex-start\"}>\n          <StyledLinkExternal isBscScan href={scanAddressLink}>\n            {t(\"View Contract\")}\n          </StyledLinkExternal>\n        </Flex>\n      )}\n    </Wrapper>\n  );\n};\n","import { DetailsSection } from \"./DetailsSection\";\n\nconst FarmCard = {\n  DetailsSection,\n};\n\nexport default FarmCard;\n","import { BigNumber } from \"bignumber.js\";\nimport { useMemo } from \"react\";\nimport { formatLpBalance, getBalanceNumber } from \"@pancakeswap/utils/formatBalance\";\nimport { Flex } from \"../../../../components/Box\";\nimport { Balance } from \"../../../../components/Balance\";\nimport { Heading } from \"../../../../components/Heading\";\nimport { RefreshIcon } from \"../../../../components/Svg\";\n\ninterface StakedLPProps {\n  stakedBalance: BigNumber;\n  tokenSymbol: string;\n  quoteTokenSymbol: string;\n  lpTotalSupply: BigNumber;\n  lpTokenPrice: BigNumber;\n  tokenAmountTotal: BigNumber;\n  quoteTokenAmountTotal: BigNumber;\n  pendingFarmLength?: number;\n  decimals: number;\n  onClickLoadingIcon?: () => void;\n}\n\nconst StakedLP: React.FunctionComponent<React.PropsWithChildren<StakedLPProps>> = ({\n  stakedBalance,\n  quoteTokenSymbol,\n  tokenSymbol,\n  lpTotalSupply,\n  lpTokenPrice,\n  tokenAmountTotal,\n  quoteTokenAmountTotal,\n  pendingFarmLength = 0,\n  decimals,\n  onClickLoadingIcon,\n}) => {\n  const displayBalance = useMemo(() => {\n    return formatLpBalance(stakedBalance, decimals);\n  }, [stakedBalance, decimals]);\n\n  return (\n    <Flex flexDirection=\"column\" alignItems=\"flex-start\">\n      <Flex>\n        <Heading color={stakedBalance.eq(0) ? \"textDisabled\" : \"text\"}>{displayBalance}</Heading>\n        {pendingFarmLength > 0 && <RefreshIcon style={{ cursor: \"pointer\" }} spin onClick={onClickLoadingIcon} />}\n      </Flex>\n      {stakedBalance.gt(0) && lpTokenPrice.gt(0) && (\n        <>\n          <Balance\n            fontSize=\"12px\"\n            color=\"textSubtle\"\n            decimals={2}\n            value={getBalanceNumber(lpTokenPrice.times(stakedBalance), decimals)}\n            unit=\" USD\"\n            prefix=\"~\"\n          />\n          <Flex style={{ gap: \"4px\" }}>\n            <Balance\n              fontSize=\"12px\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={stakedBalance.div(lpTotalSupply).times(tokenAmountTotal).toNumber()}\n              unit={` ${tokenSymbol}`}\n            />\n            <Balance\n              fontSize=\"12px\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={stakedBalance.div(lpTotalSupply).times(quoteTokenAmountTotal).toNumber()}\n              unit={` ${quoteTokenSymbol}`}\n            />\n          </Flex>\n        </>\n      )}\n    </Flex>\n  );\n};\n\nexport default StakedLP;\n","import BigNumber from \"bignumber.js\";\nimport { useCallback, useMemo, useState } from \"react\";\nimport styled from \"styled-components\";\nimport _toNumber from \"lodash/toNumber\";\nimport { useTranslation } from \"@pancakeswap/localization\";\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from \"@pancakeswap/utils/formatBalance\";\nimport { getInterestBreakdown } from \"@pancakeswap/utils/compoundApyHelpers\";\nimport { BIG_ZERO } from \"@pancakeswap/utils/bigNumber\";\nimport { trimTrailZero } from \"@pancakeswap/utils/trimTrailZero\";\nimport { Modal, ModalV2, ModalBody, ModalActions, ModalInput } from \"../../../Modal/index\";\nimport { Flex, Box } from \"../../../../components/Box\";\nimport { Text } from \"../../../../components/Text\";\nimport { Button, IconButton } from \"../../../../components/Button\";\nimport { LinkExternal } from \"../../../../components/Link\";\nimport { Skeleton } from \"../../../../components/Skeleton\";\nimport { Message, MessageText } from \"../../../../components/Message\";\nimport { AutoRenewIcon, ErrorIcon, CalculateIcon } from \"../../../../components/Svg\";\nimport { RoiCalculatorModal } from \"../../../../components/RoiCalculatorModal\";\n\nconst AnnualRoiContainer = styled((props) => <Flex {...props} />)`\n  cursor: pointer;\n`;\n\nconst AnnualRoiDisplay = styled((props) => <Text {...props} />)`\n  width: 72px;\n  max-width: 72px;\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`;\n\ninterface DepositModalProps {\n  account: string;\n  pid: number;\n  max: BigNumber;\n  stakedBalance: BigNumber;\n  multiplier?: string;\n  lpPrice?: BigNumber;\n  lpLabel?: string;\n  tokenName?: string;\n  apr?: number;\n  displayApr?: string;\n  addLiquidityUrl?: string;\n  cakePrice?: BigNumber;\n  showActiveBooster?: boolean;\n  lpTotalSupply: BigNumber;\n  bCakeMultiplier?: number | null;\n  showCrossChainFarmWarning?: boolean;\n  crossChainWarningText?: string;\n  decimals: number;\n  allowance?: BigNumber;\n  enablePendingTx?: boolean;\n  onDismiss?: () => void;\n  onConfirm: (amount: string) => void;\n  handleApprove?: () => void;\n  bCakeCalculatorSlot?: (stakingTokenBalance: string) => React.ReactNode;\n}\n\nconst DepositModal: React.FC<React.PropsWithChildren<DepositModalProps>> = ({\n  account,\n  max,\n  stakedBalance,\n  tokenName = \"\",\n  multiplier,\n  displayApr,\n  lpPrice = BIG_ZERO,\n  lpLabel = \"\",\n  apr = 0,\n  addLiquidityUrl = \"\",\n  cakePrice = BIG_ZERO,\n  showActiveBooster,\n  bCakeMultiplier,\n  showCrossChainFarmWarning,\n  crossChainWarningText,\n  decimals,\n  allowance,\n  enablePendingTx,\n  onConfirm,\n  onDismiss,\n  handleApprove,\n  bCakeCalculatorSlot,\n}) => {\n  const [val, setVal] = useState(\"\");\n  const [valUSDPrice, setValUSDPrice] = useState(BIG_ZERO);\n  const [pendingTx, setPendingTx] = useState(false);\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false);\n  const { t } = useTranslation();\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max, decimals);\n  }, [max, decimals]);\n\n  const needEnable = useMemo(() => {\n    if (allowance) {\n      const amount = getDecimalAmount(new BigNumber(val), decimals);\n      return amount.gt(allowance);\n    }\n    return false;\n  }, [allowance, decimals, val]);\n\n  const lpTokensToStake = new BigNumber(val);\n  const fullBalanceNumber = useMemo(() => new BigNumber(fullBalance), [fullBalance]);\n\n  const usdToStake = lpTokensToStake.times(lpPrice);\n\n  const interestBreakdown = getInterestBreakdown({\n    principalInUSD: !lpTokensToStake.isNaN() ? usdToStake.toNumber() : 0,\n    apr,\n    earningTokenPrice: cakePrice.toNumber(),\n  });\n\n  const annualRoi = cakePrice.times(interestBreakdown[3]);\n  const annualRoiAsNumber = annualRoi.toNumber();\n  const formattedAnnualRoi = formatNumber(annualRoiAsNumber, annualRoi.gt(10000) ? 0 : 2, annualRoi.gt(10000) ? 0 : 2);\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      if (e.currentTarget.validity.valid) {\n        const inputVal = e.currentTarget.value.replace(/,/g, \".\");\n        setVal(inputVal);\n\n        const USDPrice = inputVal === \"\" ? BIG_ZERO : new BigNumber(inputVal).times(lpPrice);\n        setValUSDPrice(USDPrice);\n      }\n    },\n    [setVal, setValUSDPrice, lpPrice]\n  );\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance);\n\n    const USDPrice = new BigNumber(fullBalance).times(lpPrice);\n    setValUSDPrice(USDPrice);\n  }, [fullBalance, setVal, setValUSDPrice, lpPrice]);\n\n  const handlePercentInput = useCallback(\n    (percent: number) => {\n      const totalAmount = fullBalanceNumber.dividedBy(100).multipliedBy(percent);\n      const amount = trimTrailZero(totalAmount.toNumber().toFixed(decimals));\n      setVal(amount as string);\n\n      const USDPrice = totalAmount.times(lpPrice);\n      setValUSDPrice(USDPrice);\n    },\n    [fullBalanceNumber, decimals, lpPrice]\n  );\n\n  if (showRoiCalculator) {\n    return (\n      <ModalV2 isOpen={showRoiCalculator}>\n        <RoiCalculatorModal\n          account={account}\n          linkLabel={t(\"Get %symbol%\", { symbol: lpLabel })}\n          stakingTokenBalance={stakedBalance.plus(max)}\n          stakingTokenDecimals={decimals}\n          stakingTokenSymbol={tokenName}\n          stakingTokenPrice={lpPrice.toNumber()}\n          earningTokenPrice={cakePrice.toNumber()}\n          apr={bCakeMultiplier ? apr * bCakeMultiplier : apr}\n          multiplier={multiplier}\n          displayApr={bCakeMultiplier ? (_toNumber(displayApr) - apr + apr * bCakeMultiplier).toFixed(2) : displayApr}\n          linkHref={addLiquidityUrl}\n          isFarm\n          initialValue={val}\n          onBack={() => setShowRoiCalculator(false)}\n          bCakeCalculatorSlot={bCakeCalculatorSlot}\n        />\n      </ModalV2>\n    );\n  }\n\n  return (\n    <Modal title={t(\"Stake LP tokens\")} onDismiss={onDismiss}>\n      <ModalBody width={[\"100%\", \"100%\", \"100%\", \"420px\"]}>\n        <ModalInput\n          value={val}\n          valueUSDPrice={valUSDPrice}\n          onSelectMax={handleSelectMax}\n          onPercentInput={handlePercentInput}\n          onChange={handleChange}\n          max={fullBalance}\n          maxAmount={fullBalanceNumber}\n          symbol={tokenName}\n          addLiquidityUrl={addLiquidityUrl}\n          inputTitle={t(\"Stake\")}\n          decimals={decimals}\n          needEnable={needEnable}\n        />\n        {showActiveBooster ? (\n          <Message variant=\"warning\" icon={<ErrorIcon width=\"24px\" color=\"warning\" />} mt=\"32px\">\n            <MessageText>\n              {t(\"The yield booster multiplier will be updated based on the latest staking conditions.\")}\n            </MessageText>\n          </Message>\n        ) : null}\n        <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Text mr=\"8px\" color=\"textSubtle\">\n            {t(\"Annual ROI at current rates\")}:\n          </Text>\n          {Number.isFinite(annualRoiAsNumber) ? (\n            <AnnualRoiContainer\n              alignItems=\"center\"\n              onClick={() => {\n                setShowRoiCalculator(true);\n              }}\n            >\n              <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\n              <IconButton variant=\"text\" scale=\"sm\">\n                <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n              </IconButton>\n            </AnnualRoiContainer>\n          ) : (\n            <Skeleton width={60} />\n          )}\n        </Flex>\n        {showCrossChainFarmWarning && (\n          <Box mt=\"15px\">\n            <Message variant=\"warning\">\n              <MessageText>{crossChainWarningText}</MessageText>\n            </Message>\n          </Box>\n        )}\n        <ModalActions>\n          <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\n            {t(\"Cancel\")}\n          </Button>\n          {needEnable ? (\n            <Button\n              width=\"100%\"\n              isLoading={enablePendingTx}\n              endIcon={enablePendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n              onClick={handleApprove}\n            >\n              {t(\"Enable\")}\n            </Button>\n          ) : pendingTx ? (\n            <Button width=\"100%\" isLoading={pendingTx} endIcon={<AutoRenewIcon spin color=\"currentColor\" />}>\n              {t(\"Confirming\")}\n            </Button>\n          ) : (\n            <Button\n              width=\"100%\"\n              disabled={!lpTokensToStake.isFinite() || lpTokensToStake.eq(0) || lpTokensToStake.gt(fullBalanceNumber)}\n              onClick={async () => {\n                setPendingTx(true);\n                await onConfirm(val);\n                onDismiss?.();\n                setPendingTx(false);\n              }}\n            >\n              {t(\"Confirm\")}\n            </Button>\n          )}\n        </ModalActions>\n        <LinkExternal href={addLiquidityUrl} style={{ alignSelf: \"center\" }}>\n          {t(\"Get %symbol%\", { symbol: tokenName })}\n        </LinkExternal>\n      </ModalBody>\n    </Modal>\n  );\n};\n\nexport default DepositModal;\n","import BigNumber from \"bignumber.js\";\nimport { useCallback, useMemo, useState } from \"react\";\nimport { useTranslation } from \"@pancakeswap/localization\";\nimport { getFullDisplayBalance } from \"@pancakeswap/utils/formatBalance\";\nimport { trimTrailZero } from \"@pancakeswap/utils/trimTrailZero\";\nimport { BIG_ZERO } from \"@pancakeswap/utils/bigNumber\";\nimport { Button } from \"../../../../components/Button\";\nimport { AutoRenewIcon } from \"../../../../components/Svg\";\nimport { Message, MessageText } from \"../../../../components/Message\";\nimport { Box } from \"../../../../components/Box\";\nimport { Modal, ModalBody, ModalActions, ModalInput } from \"../../../Modal/index\";\n\ninterface WithdrawModalProps {\n  max: BigNumber;\n  lpPrice?: BigNumber;\n  onConfirm: (amount: string) => void;\n  onDismiss?: () => void;\n  tokenName?: string;\n  showActiveBooster?: boolean;\n  showCrossChainFarmWarning?: boolean;\n  decimals: number;\n}\n\nconst WithdrawModal: React.FC<React.PropsWithChildren<WithdrawModalProps>> = ({\n  onConfirm,\n  onDismiss,\n  max,\n  lpPrice = BIG_ZERO,\n  tokenName = \"\",\n  showActiveBooster,\n  showCrossChainFarmWarning,\n  decimals,\n}) => {\n  const [val, setVal] = useState(\"\");\n  const [valUSDPrice, setValUSDPrice] = useState(BIG_ZERO);\n  const [pendingTx, setPendingTx] = useState(false);\n  const { t } = useTranslation();\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max, decimals);\n  }, [max, decimals]);\n\n  const valNumber = new BigNumber(val);\n  const fullBalanceNumber = useMemo(() => new BigNumber(fullBalance), [fullBalance]);\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      if (e.currentTarget.validity.valid) {\n        const inputVal = e.currentTarget.value.replace(/,/g, \".\");\n        setVal(inputVal);\n\n        const USDPrice = inputVal === \"\" ? BIG_ZERO : new BigNumber(inputVal).times(lpPrice);\n        setValUSDPrice(USDPrice);\n      }\n    },\n    [setVal, setValUSDPrice, lpPrice]\n  );\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance);\n\n    const USDPrice = new BigNumber(fullBalance).times(lpPrice);\n    setValUSDPrice(USDPrice);\n  }, [fullBalance, setVal, setValUSDPrice, lpPrice]);\n\n  const handlePercentInput = useCallback(\n    (percent: number) => {\n      const totalAmount = fullBalanceNumber.dividedBy(100).multipliedBy(percent);\n      const amount = trimTrailZero(totalAmount.toNumber().toFixed(decimals));\n      setVal(amount as string);\n\n      const USDPrice = totalAmount.times(lpPrice);\n      setValUSDPrice(USDPrice);\n    },\n    [fullBalanceNumber, decimals, lpPrice]\n  );\n\n  return (\n    <Modal title={t(\"Unstake LP tokens\")} onDismiss={onDismiss}>\n      <ModalBody width={[\"100%\", \"100%\", \"100%\", \"420px\"]}>\n        <ModalInput\n          onSelectMax={handleSelectMax}\n          onPercentInput={handlePercentInput}\n          onChange={handleChange}\n          value={val}\n          valueUSDPrice={valUSDPrice}\n          max={fullBalance}\n          maxAmount={fullBalanceNumber}\n          symbol={tokenName}\n          inputTitle={t(\"Unstake\")}\n          decimals={decimals}\n        />\n        {showActiveBooster ? (\n          <Message variant=\"warning\" mt=\"8px\">\n            <MessageText>\n              {t(\"The yield booster multiplier will be updated based on the latest staking conditions.\")}\n            </MessageText>\n          </Message>\n        ) : null}\n        {showCrossChainFarmWarning && (\n          <Box mt=\"15px\">\n            <Message variant=\"warning\">\n              <MessageText>\n                {t(\"For safety, cross-chain transactions will take around 30 minutes to confirm.\")}\n              </MessageText>\n            </Message>\n          </Box>\n        )}\n        <ModalActions>\n          <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\n            {t(\"Cancel\")}\n          </Button>\n          {pendingTx ? (\n            <Button width=\"100%\" isLoading={pendingTx} endIcon={<AutoRenewIcon spin color=\"currentColor\" />}>\n              {t(\"Confirming\")}\n            </Button>\n          ) : (\n            <Button\n              width=\"100%\"\n              disabled={!valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\n              onClick={async () => {\n                setPendingTx(true);\n                await onConfirm(val);\n                onDismiss?.();\n                setPendingTx(false);\n              }}\n            >\n              {t(\"Confirm\")}\n            </Button>\n          )}\n        </ModalActions>\n      </ModalBody>\n    </Modal>\n  );\n};\n\nexport default WithdrawModal;\n","import styled from \"styled-components\";\n\nconst Label = styled.div`\n  font-size: 12px;\n  color: ${({ theme }) => theme.colors.textSubtle};\n  text-align: left;\n`;\n\nconst ContentContainer = styled.div`\n  min-height: 24px;\n  display: flex;\n  align-items: center;\n`;\n\ninterface CellLayoutProps {\n  label?: string;\n}\n\nconst CellLayout: React.FC<React.PropsWithChildren<CellLayoutProps>> = ({ label = \"\", children }) => {\n  return (\n    <div>\n      {label && <Label>{label}</Label>}\n      <ContentContainer>{children}</ContentContainer>\n    </div>\n  );\n};\n\nexport default CellLayout;\n","import styled from \"styled-components\";\nimport { Skeleton } from \"../../../../components/Skeleton\";\nimport { FarmTableEarnedProps } from \"../../types\";\n\ninterface EarnedPropsWithLoading extends FarmTableEarnedProps {\n  userDataReady: boolean;\n}\n\nconst Amount = styled.span<{ earned: number }>`\n  color: ${({ earned, theme }) => (earned ? theme.colors.text : theme.colors.textDisabled)};\n  display: flex;\n  align-items: center;\n`;\n\nconst Earned: React.FunctionComponent<React.PropsWithChildren<EarnedPropsWithLoading>> = ({\n  earnings,\n  userDataReady,\n}) => {\n  const amount = earnings > 0 ? earnings : 0;\n\n  if (userDataReady) {\n    return <Amount earned={amount}>{amount.toLocaleString()}</Amount>;\n  }\n  return (\n    <Amount earned={0}>\n      <Skeleton width={60} />\n    </Amount>\n  );\n};\n\nexport default Earned;\n","import styled from \"styled-components\";\nimport { useTranslation } from \"@pancakeswap/localization\";\nimport { ChevronDownIcon } from \"../../../../components/Svg\";\nimport { useMatchBreakpoints } from \"../../../../contexts\";\n\ninterface DetailsProps {\n  actionPanelToggled: boolean;\n}\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  padding-right: 8px;\n  color: ${({ theme }) => theme.colors.primary};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 0px;\n  }\n`;\n\nconst ArrowIcon = styled((props) => <ChevronDownIcon {...props} />)`\n  transform: ${({ toggled }) => (toggled ? \"rotate(180deg)\" : \"rotate(0)\")};\n  height: 20px;\n`;\n\nconst Details: React.FC<React.PropsWithChildren<DetailsProps>> = ({ actionPanelToggled }) => {\n  const { t } = useTranslation();\n  const { isDesktop } = useMatchBreakpoints();\n\n  return (\n    <Container>\n      {!isDesktop && t(\"Details\")}\n      <ArrowIcon color=\"primary\" toggled={actionPanelToggled} />\n    </Container>\n  );\n};\n\nexport default Details;\n","import styled from \"styled-components\";\nimport { useTranslation } from \"@pancakeswap/localization\";\nimport { Text } from \"../../../../components/Text\";\nimport { HelpIcon } from \"../../../../components/Svg\";\nimport { Skeleton } from \"../../../../components/Skeleton\";\nimport { useTooltip } from \"../../../../hooks/useTooltip\";\nimport { FarmTableLiquidityProps } from \"../../types\";\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`;\n\nconst LiquidityWrapper = styled.div`\n  min-width: 110px;\n  font-weight: 600;\n  text-align: right;\n  margin-right: 14px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: left;\n    margin-right: 0;\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Liquidity: React.FunctionComponent<React.PropsWithChildren<FarmTableLiquidityProps>> = ({ liquidity }) => {\n  const displayLiquidity =\n    liquidity && liquidity.gt(0) ? (\n      `$${Number(liquidity).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    ) : (\n      <Skeleton width={60} />\n    );\n  const { t } = useTranslation();\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"Total value of the funds in this farm’s liquidity pair\"),\n    { placement: \"top-end\", tooltipOffset: [20, 10] }\n  );\n\n  return (\n    <Container>\n      <LiquidityWrapper>\n        <Text>{displayLiquidity}</Text>\n      </LiquidityWrapper>\n      <ReferenceElement ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" />\n      </ReferenceElement>\n      {tooltipVisible && tooltip}\n    </Container>\n  );\n};\n\nexport default Liquidity;\n","import { useTranslation } from \"@pancakeswap/localization\";\nimport styled from \"styled-components\";\nimport { Text } from \"../../../../components/Text\";\nimport { HelpIcon } from \"../../../../components/Svg\";\nimport { Skeleton } from \"../../../../components/Skeleton\";\nimport { useTooltip } from \"../../../../hooks/useTooltip\";\nimport { FarmTableMultiplierProps } from \"../../types\";\nimport { Link } from \"../../../../components/Link\";\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`;\n\nconst MultiplierWrapper = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  width: 36px;\n  text-align: right;\n  margin-right: 14px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: left;\n    margin-right: 0;\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Multiplier: React.FunctionComponent<React.PropsWithChildren<FarmTableMultiplierProps>> = ({\n  multiplier,\n  rewardCakePerSecond,\n}) => {\n  const displayMultiplier = multiplier ? multiplier.toLowerCase() : <Skeleton width={30} />;\n  const { t } = useTranslation();\n  const tooltipContent = (\n    <>\n      {rewardCakePerSecond ? (\n        <>\n          <Text>\n            {t(\n              \"The Multiplier represents the proportion of CAKE rewards each farm receives, as a proportion of the CAKE produced each second.\"\n            )}\n          </Text>\n          <Text my=\"24px\">\n            {\" \"}\n            {t(\"For example, if a 1x farm received 1 CAKE per second, a 40x farm would receive 40 CAKE per second.\")}\n          </Text>\n          <Text>{t(\"This amount is already included in all APR calculations for the farm.\")}</Text>\n        </>\n      ) : (\n        <>\n          <Text>\n            {t(\n              \"The Multiplier represents the proportion of CAKE rewards each farm receives, as a proportion of the CAKE produced each block.\"\n            )}\n          </Text>\n          <Text my=\"24px\">\n            {\" \"}\n            {t(\"For example, if a 1x farm received 1 CAKE per block, a 40x farm would receive 40 CAKE per block.\")}\n          </Text>\n          <Text>\n            {t(\n              \"We have recently rebased multipliers by a factor of 10, this is only a visual change and does not affect the amount of CAKE each farm receives.\"\n            )}\n          </Text>\n          <Link\n            mt=\"8px\"\n            display=\"inline\"\n            href=\"https://medium.com/pancakeswap/farm-mutlipliers-visual-update-1f5f5f615afd\"\n            external\n          >\n            {t(\"Read more\")}\n          </Link>\n        </>\n      )}\n    </>\n  );\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, {\n    placement: \"top-end\",\n    tooltipOffset: [20, 10],\n  });\n\n  return (\n    <Container>\n      <MultiplierWrapper>{displayMultiplier}</MultiplierWrapper>\n      <ReferenceElement ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" />\n      </ReferenceElement>\n      {tooltipVisible && tooltip}\n    </Container>\n  );\n};\n\nexport default Multiplier;\n","import styled from \"styled-components\";\nimport { useTranslation } from \"@pancakeswap/localization\";\nimport { getBalanceNumber } from \"@pancakeswap/utils/formatBalance\";\nimport { Text } from \"../../../../components/Text\";\nimport { Skeleton } from \"../../../../components/Skeleton\";\nimport { Flex } from \"../../../../components/Box\";\nimport { FarmTableFarmTokenInfoProps } from \"../../types\";\n\nconst Container = styled.div`\n  padding-left: 16px;\n  display: flex;\n  align-items: center;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 32px;\n  }\n`;\n\nconst TokenWrapper = styled.div`\n  padding-right: 8px;\n  width: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 40px;\n  }\n`;\n\nconst Farm: React.FunctionComponent<React.PropsWithChildren<FarmTableFarmTokenInfoProps>> = ({\n  label,\n  isReady,\n  stakedBalance,\n  children,\n}) => {\n  const { t } = useTranslation();\n  const rawStakedBalance = stakedBalance ? getBalanceNumber(stakedBalance) : 0;\n\n  const handleRenderFarming = (): JSX.Element => {\n    if (rawStakedBalance) {\n      return (\n        <Text color=\"secondary\" fontSize=\"12px\" bold textTransform=\"uppercase\">\n          {t(\"Farming\")}\n        </Text>\n      );\n    }\n    return <></>;\n  };\n\n  if (!isReady) {\n    return (\n      <Container>\n        <Skeleton mr=\"8px\" width={32} height={32} variant=\"circle\" />\n        <div>\n          <Skeleton width={40} height={10} mb=\"4px\" />\n          <Skeleton width={60} height={24} />\n        </div>\n      </Container>\n    );\n  }\n\n  const pairContainer = (\n    <Container>\n      <TokenWrapper>{children}</TokenWrapper>\n      <div>\n        {handleRenderFarming()}\n        <Text bold>{label}</Text>\n      </div>\n    </Container>\n  );\n\n  return <Flex flexDirection=\"column\">{pairContainer}</Flex>;\n};\n\nexport default Farm;\n","import styled from \"styled-components\";\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 12px;\n    /* max-height: 130px; */\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-right: 0;\n    margin-bottom: 0;\n    /* max-height: 130px; */\n  }\n`;\n\nexport const ActionTitles = styled.div`\n  display: flex;\n  margin-bottom: 8px;\n`;\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const IconButtonWrapper = styled.div`\n  display: flex;\n`;\n\nexport const StyledActionContainer = styled(ActionContainer)`\n  &:nth-child(3) {\n    flex-basis: 100%;\n  }\n  min-height: 124.5px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    &:nth-child(3) {\n      margin-top: 16px;\n    }\n  }\n`;\n","import { useTranslation } from \"@pancakeswap/localization\";\nimport BigNumber from \"bignumber.js\";\nimport { Button } from \"../../../../../components/Button\";\nimport { Heading } from \"../../../../../components/Heading\";\nimport { Text, TooltipText } from \"../../../../../components/Text\";\nimport { Balance } from \"../../../../../components/Balance\";\nimport { Skeleton } from \"../../../../../components/Skeleton\";\nimport { useTooltip } from \"../../../../../hooks/useTooltip\";\nimport { ActionContainer, ActionContent, ActionTitles } from \"./styles\";\nimport { FARMS_SMALL_AMOUNT_THRESHOLD } from \"../../../constants\";\n\ninterface HarvestActionProps {\n  earnings: BigNumber;\n  earningsBusd: number;\n  displayBalance: string | JSX.Element;\n  pendingTx: boolean;\n  userDataReady: boolean;\n  proxyCakeBalance?: number;\n  handleHarvest: () => void;\n}\n\nconst HarvestAction: React.FunctionComponent<React.PropsWithChildren<HarvestActionProps>> = ({\n  earnings,\n  earningsBusd,\n  displayBalance,\n  pendingTx,\n  userDataReady,\n  proxyCakeBalance,\n  handleHarvest,\n}) => {\n  const { t } = useTranslation();\n\n  const toolTipBalance = !userDataReady ? (\n    <Skeleton width={60} />\n  ) : earnings.isGreaterThan(FARMS_SMALL_AMOUNT_THRESHOLD) ? (\n    earnings.toFixed(5, BigNumber.ROUND_DOWN)\n  ) : (\n    `< 0.00001`\n  );\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    `${toolTipBalance} ${t(\n      `CAKE has been harvested to the farm booster contract and will be automatically sent to your wallet upon the next harvest.`\n    )}`,\n    {\n      placement: \"bottom\",\n    }\n  );\n\n  return (\n    <ActionContainer style={{ minHeight: 124.5 }}>\n      <ActionTitles>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n          CAKE\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t(\"Earned\")}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <div>\n          {proxyCakeBalance ? (\n            <>\n              <TooltipText ref={targetRef} decorationColor=\"secondary\">\n                <Heading>{displayBalance}</Heading>\n              </TooltipText>\n              {tooltipVisible && tooltip}\n            </>\n          ) : (\n            <Heading>{displayBalance}</Heading>\n          )}\n          {earningsBusd > 0 && (\n            <Balance fontSize=\"12px\" color=\"textSubtle\" decimals={2} value={earningsBusd} unit=\" USD\" prefix=\"~\" />\n          )}\n        </div>\n        <Button ml=\"4px\" disabled={earnings.eq(0) || pendingTx || !userDataReady} onClick={handleHarvest}>\n          {pendingTx ? t(\"Harvesting\") : t(\"Harvest\")}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  );\n};\n\nexport default HarvestAction;\n","import { useTranslation } from \"@pancakeswap/localization\";\nimport { Text } from \"../../../../../components/Text\";\nimport { ActionContent, ActionTitles, StyledActionContainer } from \"./styles\";\n\nconst AccountNotConnect = ({ children }: { children: React.ReactNode }) => {\n  const { t } = useTranslation();\n\n  return (\n    <StyledActionContainer>\n      <ActionTitles>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t(\"Start Farming\")}\n        </Text>\n      </ActionTitles>\n      <ActionContent>{children}</ActionContent>\n    </StyledActionContainer>\n  );\n};\n\nexport default AccountNotConnect;\n","import { useTranslation } from \"@pancakeswap/localization\";\nimport { StyledActionContainer, ActionContent, ActionTitles } from \"./styles\";\nimport { Text } from \"../../../../../components/Text\";\nimport { Button } from \"../../../../../components/Button\";\n\ninterface StakeComponentProps {\n  lpSymbol: string;\n  isStakeReady: boolean;\n  onPresentDeposit: () => void;\n}\n\nconst StakeComponent: React.FunctionComponent<React.PropsWithChildren<StakeComponentProps>> = ({\n  lpSymbol,\n  isStakeReady,\n  onPresentDeposit,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <StyledActionContainer>\n      <ActionTitles>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\" pr=\"4px\">\n          {t(\"Stake\")}\n        </Text>\n        <Text bold color=\"secondary\" fontSize=\"12px\">\n          {lpSymbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button width=\"100%\" onClick={onPresentDeposit} variant=\"secondary\" disabled={isStakeReady}>\n          {t(\"Stake LP\")}\n        </Button>\n      </ActionContent>\n    </StyledActionContainer>\n  );\n};\n\nexport default StakeComponent;\n","import { useTranslation } from \"@pancakeswap/localization\";\nimport { Text } from \"../../../../../components/Text\";\nimport { Skeleton } from \"../../../../../components/Skeleton\";\nimport { StyledActionContainer, ActionContent, ActionTitles } from \"./styles\";\n\nconst StakeActionDataNotReady = () => {\n  const { t } = useTranslation();\n  return (\n    <StyledActionContainer>\n      <ActionTitles>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t(\"Start Farming\")}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Skeleton width={180} marginBottom={28} marginTop={14} />\n      </ActionContent>\n    </StyledActionContainer>\n  );\n};\n\nexport default StakeActionDataNotReady;\n","import { useTranslation } from \"@pancakeswap/localization\";\nimport { Text } from \"../../../../../components/Text\";\nimport { Button } from \"../../../../../components/Button\";\nimport { StyledActionContainer, ActionContent, ActionTitles } from \"./styles\";\n\ninterface EnableStakeActionProps {\n  pendingTx: boolean;\n  handleApprove: () => void;\n}\n\nconst EnableStakeAction: React.FunctionComponent<React.PropsWithChildren<EnableStakeActionProps>> = ({\n  pendingTx,\n  handleApprove,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <StyledActionContainer>\n      <ActionTitles>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t(\"Enable Farm\")}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button width=\"100%\" disabled={pendingTx} onClick={handleApprove} variant=\"secondary\">\n          {t(\"Enable\")}\n        </Button>\n      </ActionContent>\n    </StyledActionContainer>\n  );\n};\n\nexport default EnableStakeAction;\n","import { ReactNode } from \"react\";\nimport { useTranslation } from \"@pancakeswap/localization\";\nimport { Text } from \"../../../../../components/Text\";\nimport { IconButton } from \"../../../../../components/Button\";\nimport { MinusIcon, AddIcon } from \"../../../../../components/Svg\";\nimport { StyledActionContainer, ActionContent, ActionTitles, IconButtonWrapper } from \"./styles\";\n\ninterface StakedActionComponentProps {\n  lpSymbol: string;\n  children?: ReactNode;\n  disabledMinusButton?: boolean;\n  disabledPlusButton?: boolean;\n  onPresentWithdraw: () => void;\n  onPresentDeposit: () => void;\n}\n\nconst StakedActionComponent: React.FunctionComponent<React.PropsWithChildren<StakedActionComponentProps>> = ({\n  lpSymbol,\n  children,\n  disabledMinusButton,\n  disabledPlusButton,\n  onPresentWithdraw,\n  onPresentDeposit,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <StyledActionContainer>\n      <ActionTitles>\n        <Text bold color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n          {lpSymbol}\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t(\"Staked\")}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        {children}\n        <IconButtonWrapper>\n          <IconButton mr=\"6px\" variant=\"secondary\" disabled={disabledMinusButton} onClick={onPresentWithdraw}>\n            <MinusIcon color=\"primary\" width=\"14px\" />\n          </IconButton>\n          <IconButton variant=\"secondary\" disabled={disabledPlusButton} onClick={onPresentDeposit}>\n            <AddIcon color=\"primary\" width=\"14px\" />\n          </IconButton>\n        </IconButtonWrapper>\n      </ActionContent>\n    </StyledActionContainer>\n  );\n};\n\nexport default StakedActionComponent;\n","import CellLayout from \"./CellLayout\";\nimport Earned from \"./Earned\";\nimport Details from \"./Details\";\nimport Liquidity from \"./Liquidity\";\nimport Multiplier from \"./Multiplier\";\nimport FarmTokenInfo from \"./FarmTokenInfo\";\nimport FarmTableHarvestAction from \"./Actions/HarvestAction\";\nimport AccountNotConnect from \"./Actions/AccountNotConnect\";\nimport StakeComponent from \"./Actions/StakeComponent\";\nimport StakeActionDataNotReady from \"./Actions/StakeActionDataNotReady\";\nimport EnableStakeAction from \"./Actions/EnableStakeAction\";\nimport StakedActionComponent from \"./Actions/StakedActionComponent\";\n\nconst FarmTable = {\n  CellLayout,\n  Earned,\n  Details,\n  Liquidity,\n  Multiplier,\n  FarmTokenInfo,\n  FarmTableHarvestAction,\n  AccountNotConnect,\n  StakeComponent,\n  StakeActionDataNotReady,\n  EnableStakeAction,\n  StakedActionComponent,\n};\n\nexport default FarmTable;\n","import { FarmTabButtons } from \"./components/FarmTabButtons\";\nimport { FarmApyButton } from \"./components/FarmApyButton\";\nimport Tags from \"./components/Tags\";\nimport FarmCard from \"./components/FarmCard\";\nimport StakedLP from \"./components/StakedLP\";\nimport DepositModal from \"./components/DepositModal\";\nimport WithdrawModal from \"./components/WithdrawModal\";\nimport FarmTable from \"./components/FarmTable\";\n\nconst Farm = {\n  FarmTabButtons,\n  FarmApyButton,\n  Tags,\n  FarmCard,\n  StakedLP,\n  DepositModal,\n  WithdrawModal,\n  FarmTable,\n};\n\nexport { Farm };\n","import BigNumber from \"bignumber.js\";\n\nexport const FARMS_SMALL_AMOUNT_THRESHOLD = new BigNumber(0.00001);\n","import { useContext } from \"react\";\nimport styled, { ThemeContext } from \"styled-components\";\n\ninterface SpacerProps {\n  size?: \"sm\" | \"md\" | \"lg\";\n}\n\nconst Spacer: React.FC<React.PropsWithChildren<SpacerProps>> = ({ size = \"md\" }) => {\n  const { spacing } = useContext(ThemeContext);\n\n  let s: string;\n  switch (size) {\n    case \"lg\":\n      s = spacing[6];\n      break;\n    case \"sm\":\n      s = spacing[2];\n      break;\n    case \"md\":\n    default:\n      s = spacing[4];\n  }\n\n  return <StyledSpacer size={s} />;\n};\n\ninterface StyledSpacerProps {\n  size: string;\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size};\n  width: ${(props) => props.size};\n`;\n\nexport default Spacer;\n","import { Children } from \"react\";\nimport styled from \"styled-components\";\nimport Spacer from \"./Spacer\";\n\nconst ModalActions: React.FC<React.PropsWithChildren> = ({ children }) => {\n  const l = Children.toArray(children).length;\n  return (\n    <StyledModalActions>\n      {Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  );\n};\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]} 0;\n`;\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`;\n\nexport default ModalActions;\n","import BigNumber from \"bignumber.js\";\nimport { useMemo } from \"react\";\nimport styled from \"styled-components\";\nimport { useTranslation } from \"@pancakeswap/localization\";\nimport { parseUnits } from \"@ethersproject/units\";\nimport { formatBigNumber } from \"@pancakeswap/utils/formatBalance\";\nimport { trimTrailZero } from \"@pancakeswap/utils/trimTrailZero\";\nimport { Flex } from \"../../components/Box\";\nimport { Text } from \"../../components/Text\";\nimport { Link } from \"../../components/Link\";\nimport { Button } from \"../../components/Button\";\nimport { Balance } from \"../../components/Balance\";\nimport { Input, InputProps } from \"../../components/Input\";\n\ninterface ModalInputProps {\n  max: string;\n  maxAmount?: BigNumber;\n  symbol: string;\n  onSelectMax?: () => void;\n  onPercentInput?: (percent: number) => void;\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void;\n  placeholder?: string;\n  value: string;\n  valueUSDPrice?: BigNumber;\n  addLiquidityUrl?: string;\n  inputTitle?: string;\n  decimals?: number;\n  needEnable?: boolean;\n}\n\nconst StyledTokenInput = styled.div<InputProps>`\n  display: flex;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  box-shadow: ${({ theme, isWarning }) => (isWarning ? theme.colors.warning : theme.shadows.inset)};\n  color: ${({ theme }) => theme.colors.text};\n  padding: 8px 16px 8px 0;\n  width: 100%;\n`;\n\nconst StyledInput = styled(Input)`\n  box-shadow: none;\n  width: 60px;\n  margin: 0 8px;\n  padding: 0 8px;\n  border: none;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    width: 120px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n  }\n`;\n\nconst StyledErrorMessage = styled(Text)`\n  position: absolute;\n  bottom: -22px;\n  a {\n    display: inline;\n  }\n`;\n\nconst ModalInput: React.FC<React.PropsWithChildren<ModalInputProps>> = ({\n  max,\n  maxAmount,\n  symbol,\n  onChange,\n  onSelectMax,\n  onPercentInput,\n  value,\n  valueUSDPrice,\n  addLiquidityUrl,\n  inputTitle,\n  decimals = 18,\n  needEnable,\n}) => {\n  const { t } = useTranslation();\n  const isBalanceZero = max === \"0\" || !max;\n\n  const displayBalance = (balance: string) => {\n    if (isBalanceZero) {\n      return \"0\";\n    }\n\n    const balanceUnits = parseUnits(balance, decimals);\n    return formatBigNumber(balanceUnits, decimals, decimals);\n  };\n\n  const percentAmount = useMemo(\n    () => ({\n      25: maxAmount ? trimTrailZero(maxAmount.dividedBy(100).multipliedBy(25).toNumber().toFixed(decimals)) : undefined,\n      50: maxAmount ? trimTrailZero(maxAmount.dividedBy(100).multipliedBy(50).toNumber().toFixed(decimals)) : undefined,\n      75: maxAmount ? trimTrailZero(maxAmount.dividedBy(100).multipliedBy(75).toNumber().toFixed(decimals)) : undefined,\n    }),\n    [maxAmount, decimals]\n  );\n\n  const isAtPercentMax = maxAmount && value === maxAmount.toString();\n\n  return (\n    <div style={{ position: \"relative\" }}>\n      <StyledTokenInput isWarning={isBalanceZero}>\n        <Flex justifyContent=\"space-between\" pl=\"16px\">\n          <Text fontSize=\"14px\">{inputTitle}</Text>\n          <Text fontSize=\"14px\">{t(\"Balance: %balance%\", { balance: displayBalance(max) })}</Text>\n        </Flex>\n        <Flex alignItems=\"flex-end\" justifyContent=\"space-between\">\n          <StyledInput\n            pattern={`^[0-9]*[.,]?[0-9]{0,${decimals}}$`}\n            inputMode=\"decimal\"\n            step=\"any\"\n            min=\"0\"\n            onChange={onChange}\n            placeholder=\"0\"\n            value={value}\n          />\n          <Text fontSize=\"16px\" mb=\"8px\">\n            {symbol}\n          </Text>\n        </Flex>\n        {valueUSDPrice && (\n          <Flex justifyContent=\"flex-start\" ml=\"1rem\">\n            <Flex maxWidth=\"200px\">\n              <Balance\n                display=\"inline\"\n                fontSize=\"12px\"\n                color=\"textSubtle\"\n                decimals={2}\n                prefix=\"~\"\n                value={valueUSDPrice.toNumber()}\n                unit=\" USD\"\n              />\n            </Flex>\n          </Flex>\n        )}\n        <Flex pt=\"3px\" justifyContent=\"flex-end\">\n          {maxAmount?.isGreaterThan(0) &&\n            onPercentInput &&\n            [25, 50, 75].map((percent) => {\n              let currentPercentAmount;\n              if (percent === 25) currentPercentAmount = percentAmount[25];\n              else if (percent === 50) currentPercentAmount = percentAmount[50];\n              else if (percent === 75) currentPercentAmount = percentAmount[75];\n\n              const isAtCurrentPercent = maxAmount && value === currentPercentAmount;\n\n              return (\n                <Button\n                  key={`btn_quickCurrency${percent}`}\n                  onClick={() => {\n                    onPercentInput(percent);\n                  }}\n                  scale=\"xs\"\n                  mr=\"5px\"\n                  variant={isAtCurrentPercent ? \"primary\" : \"secondary\"}\n                  style={{ textTransform: \"uppercase\" }}\n                >\n                  {percent}%\n                </Button>\n              );\n            })}\n          {maxAmount?.isGreaterThan(0) && (\n            <>\n              <Button\n                onClick={onSelectMax}\n                scale=\"xs\"\n                variant={isAtPercentMax ? \"primary\" : \"secondary\"}\n                style={{ textTransform: \"uppercase\" }}\n              >\n                {t(\"Max\")}\n              </Button>\n            </>\n          )}\n        </Flex>\n      </StyledTokenInput>\n      {isBalanceZero && (\n        <StyledErrorMessage fontSize=\"14px\" color=\"failure\">\n          {t(\"No tokens to stake\")}:{\" \"}\n          <Link fontSize=\"14px\" bold={false} href={addLiquidityUrl} external color=\"failure\">\n            {t(\"Get %symbol%\", { symbol })}\n          </Link>\n        </StyledErrorMessage>\n      )}\n      {needEnable && (\n        <Text color=\"failure\" fontSize=\"12px\" mt=\"8px\">\n          {t('Insufficient token allowance. Click \"Enable\" to approve.')}\n        </Text>\n      )}\n    </div>\n  );\n};\n\nexport default ModalInput;\n","// 1 day, 7 days, 30 days, 1 year, 5 years\nconst DAYS_TO_CALCULATE_AGAINST = [1, 7, 30, 365, 1825]\n\n/**\n *\n * @param principalInUSD - amount user wants to invest in USD\n * @param apr - farm or pool apr as percentage. If its farm APR its only cake rewards APR without LP rewards APR\n * @param earningTokenPrice - price of reward token\n * @param compoundFrequency - how many compounds per 1 day, e.g. 1 = one per day, 0.142857142 - once per week\n * @param performanceFee - performance fee as percentage\n * @returns an array of token values earned as interest, with each element representing interest earned over a different period of time (DAYS_TO_CALCULATE_AGAINST)\n */\nexport const getInterestBreakdown = ({\n  principalInUSD,\n  apr,\n  earningTokenPrice,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}: {\n  principalInUSD: number\n  apr: number\n  earningTokenPrice: number\n  compoundFrequency?: number\n  performanceFee?: number\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  const aprAsDecimal = apr / 100\n\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  // and also cause rounding errors\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimalsNew = isHighValueToken ? 5 : 3\n\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\n    const daysAsDecimalOfYear = days / 365\n    // Calculate the starting TOKEN balance with a dollar balance of principalInUSD.\n    const principal = principalInUSD / earningTokenPrice\n    let interestEarned = principal * aprAsDecimal * (days / 365)\n    if (timesCompounded !== 0) {\n      // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n      const accruedAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n      // To get the TOKEN amount earned, deduct the amount after compounding (accruedAmount) from the starting TOKEN balance (principal)\n      interestEarned = accruedAmount - principal\n      if (performanceFee) {\n        const performanceFeeAsDecimal = performanceFee / 100\n        const performanceFeeAsAmount = interestEarned * performanceFeeAsDecimal\n        interestEarned -= performanceFeeAsAmount\n      }\n    }\n    return parseFloat(interestEarned.toFixed(roundingDecimalsNew))\n  })\n}\n\n/**\n * @param interest how much USD amount you aim to make\n * @param apr APR of farm/pool\n * @param compoundingFrequency how many compounds per 1 day, e.g. 1 = one per day, 0.142857142 - once per week\n * @returns an array of principal values needed to reach target interest, with each element representing principal needed for a different period of time (DAYS_TO_CALCULATE_AGAINST)\n */\nexport const getPrincipalForInterest = (\n  interest: number,\n  apr: number,\n  compoundingFrequency: number,\n  performanceFee = 0,\n) => {\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\n    const apyAsDecimal = getApy(apr, compoundingFrequency, days, performanceFee)\n    // console.log('inside', interest, apyAsDecimal)\n    // const apyAsBN = new BigNumber(apyAsDecimal).decimalPlaces(6, BigNumber.ROUND_DOWN).toNumber()\n    return parseFloat((interest / apyAsDecimal).toFixed(2))\n  })\n}\n\n/**\n * Given APR returns APY\n * @param apr APR as percentage\n * @param compoundFrequency how many compounds per day\n * @param days if other than 365 adjusts (A)PY for period less than a year\n * @param performanceFee performance fee as percentage\n * @returns APY as decimal\n */\nexport const getApy = (apr: number, compoundFrequency = 1, days = 365, performanceFee = 0) => {\n  const daysAsDecimalOfYear = days / 365\n  const aprAsDecimal = apr / 100\n  const timesCompounded = 365 * compoundFrequency\n  let apyAsDecimal = (apr / 100) * daysAsDecimalOfYear\n  if (timesCompounded > 0) {\n    apyAsDecimal = (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear) - 1\n  }\n  if (performanceFee) {\n    const performanceFeeAsDecimal = performanceFee / 100\n    const takenAsPerformanceFee = apyAsDecimal * performanceFeeAsDecimal\n    apyAsDecimal -= takenAsPerformanceFee\n  }\n  return apyAsDecimal\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }: { amountEarned: number; amountInvested: number }) => {\n  if (amountInvested === 0) {\n    return 0\n  }\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","export const trimTrailZero = (numberStr?: string) => {\n  if (!numberStr || !numberStr.includes('.')) return numberStr\n  const splitNum = numberStr.split('.')\n  while (splitNum[1][splitNum[1].length - 1] === '0') splitNum[1] = splitNum[1].slice(0, -1)\n  return splitNum[1].length ? `${splitNum[0]}.${splitNum[1]}` : splitNum[0]\n}\n"],"names":["__webpack_exports__","_param","value","placeholder","onUserInput","currencyValue","inputProps","innerRef","isWarning","_param_decimals","decimals","unit","switchEditingUnits","props","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","StyledBalanceInput","_param_isWarning","jsxs","Flex","justifyContent","Box","alignItems","StyledInput","pattern","concat","inputMode","min","onChange","e","currentTarget","validity","valid","replace","_param_placeholder","ref","UnitContainer","Text","fontSize","textAlign","color","pl","SwitchUnitsButton","scale","variant","onClick","SwapVertIcon","styled","IconButton","param","theme","colors","textSubtle","input","inputSecondary","shadows","Input","_param_textAlign","ExpandableButton","expanded","children","aria-label","ChevronUpIcon","ChevronDownIcon","defaultProps","ExpandableLabel","Button","endIcon","Footer","dropdown","BulletList","RoiCalculatorModal_RoiCalculatorFooter","isFarm","apr","_param_apr","_param_apy","apy","displayApr","autoCompoundFrequency","multiplier","linkLabel","linkHref","performanceFee","rewardCakePerSecond","isLocked","stableSwapAddress","stableLpFee","useState","isExpanded","setIsExpanded","t","useTranslation","useTooltip","jsx_runtime","Fragment","my","Link","mt","display","href","external","placement","tooltipOffset","targetRef","tooltip","tooltipVisible","lpRewardsAPR","useMemo","Number","isFinite","Math","max","toFixed","p","flexDirection","prev","px","Grid","gridTemplateColumns","gridRowGap","gridTemplateRows","small","_param_isLocked","compoundTimes","getApy","mr","span","multiplierRef","HelpIcon","width","height","multiplierTooltipVisible","multiplierTooltip","li","lineHeight","percent","BIG_ONE_HUNDRED","toNumber","style","ml","fee","LinkExternal","RoiCardWrapper","radii","default","RoiCardInner","gradientBubblegum","RoiInputContainer","RoiDisplayContainer","RoiDollarAmount","fadeOut","background","RoiCalculatorModal_RoiCard","earningTokenSymbol","calculatorState","setTargetRoi","setCalculatorMode","expectedRoi","setExpectedRoi","inputRef","useRef","data","roiUSD","roiTokens","roiPercentage","mode","controls","useEffect","CalculatorMode","current","focus","onEnterEditing","toLocaleString","minimumFractionDigits","maximumFractionDigits","bold","textTransform","type","event","roiAsString","target","CheckmarkIcon","PencilIcon","maxWidth","lineBreak","rotate","keyframes","ArrowContainer","primary3D","RoiCalculatorModal_AnimatedArrow","key","setKey","prevKey","prevId","parseInt","split","ArrowDownIcon","ArrowUpIcon","StyledModal","Modal","mediaQueries","md","ScrollableContainer","sm","FullWidthButtonMenu","ButtonMenu","disabled","RoiCalculatorModal_RoiCalculatorModal","account","earningTokenPrice","stakingTokenBalance","stakingTokenSymbol","stakingTokenPrice","initialValue","_param_autoCompoundFrequency","_param_performanceFee","_param_isFarm","initialState","strategy","header","stakingTokenDecimals","onBack","onDismiss","bCakeCalculatorSlot","balanceInputRef","useRoiCalculatorReducer","state","setPrincipalFromUSDValue","setPrincipalFromTokenValue","setStakingDuration","toggleCompounding","toggleEditingCurrency","setCompoundingFrequency","dispatch","compounding","activeCompoundingIndex","stakingDuration","editingCurrency","principalAsUSD","principalAsToken","assetSymbol","editingUnit","EditingCurrency","editingValue","conversionUnit","conversionValue","DURATION","isDisableMyBalance","lte","title","headerBackground","DefaultCompoundStrategy","mb","asset","BalanceInput","onFocus","getBalanceNumber","times","toString","activeIndex","onItemClick","map","duration","ButtonMenuItem","flex","Checkbox","checked","AnimatedArrow","RoiCard","_param_earningTokenSymbol","RoiCalculatorFooter","compoundingIndexToFrequency","TOKEN","USD","ROI_BASED_ON_PRINCIPAL","PRINCIPAL_BASED_ON_ROI","defaultState","compoundingFrequency","roiCalculatorReducer","action","_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_3__","Z","_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_4__","payload","toggledCompounding","index","parseFloat","currencyAfterChange","principalInUSDAsNumber","interestBreakdown","getInterestBreakdown","principalInUSD","compoundFrequency","hasInterest","isNaN","roiAsUSD","getRoi","amountEarned","amountInvested","principalForExpectedRoi","getPrincipalForInterest","principalUSD","principalToken","BigNumber","div","useReducer","merge","amount","principalAsTokenBN","gt","useCallback","principalAsUsdBN","stakingDurationIndex","modeToSet","targetRoiAsTokens","Svg","viewBox","path","d","fillRule","clipRule","Wrapper","ApyLabelContainer","FarmAuctionTagToolTipContent","memo","StyledLinkExternal","AnnualRoiContainer","AnnualRoiDisplay","Label","ContentContainer","Amount","earned","text","textDisabled","Container","primary","ArrowIcon","toggled","ReferenceElement","LiquidityWrapper","lg","MultiplierWrapper","TokenWrapper","ActionContainer","xl","ActionTitles","ActionContent","IconButtonWrapper","StyledActionContainer","Farm","FarmTabButtons","hasStakeInFinishedFarms","router","useRouter","pathname","as","NextLinkFromReactRouter","to","NotificationDot","show","id","FarmApyButton","hideButton","strikethrough","handleClickButton","textDecoration","CalculateIcon","Tags","CoreTag","Tag","outline","startIcon","VerifiedIcon","FarmAuctionTag","TooltipText","CommunityIcon","DualTag","ManualPoolTag","RefreshIcon","CompoundingPoolTag","AutoRenewIcon","VoteNowTag","VoteIcon","SoonTag","TimerIcon","ClosedTag","BlockIcon","CommunityTag","StableFarmTag","alignSelf","CurrencyIcon","LockedPoolTag","LockIcon","LockedOrAutoPoolTag","BoostedTag","RocketIcon","FarmCard","DetailsSection","scanAddressLink","infoAddress","removed","totalValueFormatted","lpLabel","addLiquidityUrl","isCommunity","auctionHostingEndDate","alignLinksToRight","_param_alignLinksToRight","currentLanguage","locale","Date","month","day","year","Skeleton","symbol","isBscScan","StakedLP","stakedBalance","quoteTokenSymbol","tokenSymbol","lpTotalSupply","lpTokenPrice","tokenAmountTotal","quoteTokenAmountTotal","pendingFarmLength","onClickLoadingIcon","displayBalance","formatLpBalance","Heading","eq","_param_pendingFarmLength","cursor","spin","Balance","prefix","gap","DepositModal","tokenName","_param_tokenName","lpPrice","BIG_ZERO","_param_addLiquidityUrl","_param_cakePrice","cakePrice","showActiveBooster","bCakeMultiplier","showCrossChainFarmWarning","crossChainWarningText","allowance","enablePendingTx","onConfirm","handleApprove","val","setVal","valUSDPrice","setValUSDPrice","pendingTx","setPendingTx","showRoiCalculator","setShowRoiCalculator","fullBalance","getFullDisplayBalance","needEnable","getDecimalAmount","lpTokensToStake","fullBalanceNumber","usdToStake","annualRoi","annualRoiAsNumber","formattedAnnualRoi","formatNumber","handleChange","inputVal","handleSelectMax","handlePercentInput","totalAmount","dividedBy","multipliedBy","trimTrailZero","ModalV2","isOpen","RoiCalculatorModal","_param_lpLabel","plus","_toNumber","ModalBody","ModalInput","valueUSDPrice","onSelectMax","onPercentInput","maxAmount","inputTitle","Message","icon","ErrorIcon","MessageText","ModalActions","isLoading","_async_to_generator","_state","sent","WithdrawModal","valNumber","FarmTable","CellLayout","label","_param_label","Earned","earnings","userDataReady","Details","actionPanelToggled","isDesktop","useMatchBreakpoints","Liquidity","liquidity","displayLiquidity","undefined","Multiplier","displayMultiplier","toLowerCase","tooltipContent","FarmTokenInfo","isReady","rawStakedBalance","pairContainer","FarmTableHarvestAction","earningsBusd","proxyCakeBalance","handleHarvest","toolTipBalance","isGreaterThan","FARMS_SMALL_AMOUNT_THRESHOLD","minHeight","pr","decorationColor","AccountNotConnect","StakeComponent","lpSymbol","isStakeReady","onPresentDeposit","StakeActionDataNotReady","marginBottom","marginTop","EnableStakeAction","StakedActionComponent","disabledMinusButton","disabledPlusButton","onPresentWithdraw","MinusIcon","AddIcon","StyledSpacer","size","Modal_Spacer","s","spacing","useContext","ThemeContext","_param_size","StyledModalActions","primaryDark","StyledModalAction","Modal_ModalActions","l","Children","length","child","i","Spacer","StyledTokenInput","warning","inset","xs","StyledErrorMessage","isBalanceZero","percentAmount","isAtPercentMax","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","position","balance","balanceUnits","parseUnits","formatBigNumber","step","pt","currentPercentAmount","isAtCurrentPercent","DAYS_TO_CALCULATE_AGAINST","timesCompounded","_param_compoundFrequency","aprAsDecimal","roundingDecimalsNew","isHighValueToken","round","days","principal","interestEarned","accruedAmount","pow","performanceFeeAsAmount","interest","apyAsDecimal","daysAsDecimalOfYear","takenAsPerformanceFee","numberStr","includes","splitNum","slice"],"sourceRoot":""}