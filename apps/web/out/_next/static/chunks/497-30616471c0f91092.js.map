{"version":3,"file":"static/chunks/497-30616471c0f91092.js","mappings":"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","sources":["webpack://_N_E/./src/config/flag.ts","webpack://_N_E/./src/hooks/useFeatureFlag.ts","webpack://_N_E/./src/hooks/useRefreshEffect.ts","webpack://_N_E/../../packages/farms/src/deserializeFarmUserData.ts","webpack://_N_E/../../packages/farms/src/deserializeFarm.ts","webpack://_N_E/./src/state/farms/selectors.ts","webpack://_N_E/./src/state/farms/hooks.ts","webpack://_N_E/./src/views/Farms/hooks/useBCakeProxyContractAddress.ts","webpack://_N_E/../../packages/uikit/src/components/Balance/Balance.tsx","webpack://_N_E/../../packages/uikit/src/components/Card/StyledCard.tsx","webpack://_N_E/../../packages/uikit/src/components/Card/Card.tsx","webpack://_N_E/../../packages/uikit/src/components/Card/CardBody.tsx","webpack://_N_E/../../packages/uikit/src/components/Layouts/Container.tsx","webpack://_N_E/../../packages/uikit/src/components/Svg/Icons/SwapVert.tsx","webpack://_N_E/<anon>"],"sourcesContent":["export const FLAG_FARM: 'old' | 'pkg' | 'api' = 'pkg'\n","import { FLAG_FARM } from 'config/flag'\nimport { Atom, useAtomValue } from 'jotai'\nimport { createJSONStorage } from 'jotai/utils'\nimport atomWithStorageWithErrorCatch from 'utils/atomWithStorageWithErrorCatch'\n\nconst storage = { ...createJSONStorage(() => sessionStorage), delayInit: true }\nexport const featureFarmApiAtom = atomWithStorageWithErrorCatch<typeof FLAG_FARM>(\n  'feature-farm-api',\n  FLAG_FARM,\n  // @ts-ignore\n  storage,\n)\n\nfeatureFarmApiAtom.onMount = (set) => {\n  const params = new URL(window.location.href).searchParams\n  const flag = params.get('use')\n  if (flag === 'farmApi') {\n    set('api')\n  }\n}\n\nexport function useFeatureFlag<T>(featureAtom: Atom<T>) {\n  return useAtomValue(featureAtom)\n}\n","import { FAST_INTERVAL, SLOW_INTERVAL } from 'config/constants'\nimport { DependencyList, EffectCallback, useEffect } from 'react'\nimport useSWR from 'swr'\nimport { useActiveChainId } from './useActiveChainId'\n\ntype BlockEffectCallback = (blockNumber: number) => ReturnType<EffectCallback>\n\nconst EMPTY_ARRAY = []\n\nexport function useFastRefreshEffect(effect: BlockEffectCallback, deps?: DependencyList) {\n  const { chainId } = useActiveChainId()\n  const { data = 0 } = useSWR(chainId && [FAST_INTERVAL, 'blockNumber', chainId])\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(effect.bind(null, data), [data, ...(deps || EMPTY_ARRAY)])\n}\n\nexport function useSlowRefreshEffect(effect: BlockEffectCallback, deps?: DependencyList) {\n  const { chainId } = useActiveChainId()\n  const { data = 0 } = useSWR(chainId && [SLOW_INTERVAL, 'blockNumber', chainId])\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(effect.bind(null, data), [data, ...(deps || EMPTY_ARRAY)])\n}\n","import BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport { SerializedFarm, DeserializedFarmUserData } from './types'\n\nexport const deserializeFarmUserData = (farm: SerializedFarm): DeserializedFarmUserData => {\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n    proxy: {\n      allowance: farm?.userData?.proxy ? new BigNumber(farm?.userData?.proxy.allowance) : BIG_ZERO,\n      tokenBalance: farm?.userData?.proxy ? new BigNumber(farm?.userData?.proxy.tokenBalance) : BIG_ZERO,\n      stakedBalance: farm?.userData?.proxy ? new BigNumber(farm?.userData?.proxy.stakedBalance) : BIG_ZERO,\n      earnings: farm?.userData?.proxy ? new BigNumber(farm?.userData?.proxy.earnings) : BIG_ZERO,\n    },\n  }\n}\n","import BigNumber from 'bignumber.js'\nimport addSeconds from 'date-fns/addSeconds'\nimport { deserializeToken } from '@pancakeswap/token-lists'\nimport isUndefinedOrNull from '@pancakeswap/utils/isUndefinedOrNull'\nimport { BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport { SerializedFarm, DeserializedFarm } from './types'\nimport { deserializeFarmUserData } from './deserializeFarmUserData'\nimport { FARM_AUCTION_HOSTING_IN_SECONDS } from './const'\n\nexport const deserializeFarm = (\n  farm: SerializedFarm,\n  auctionHostingInSeconds: number = FARM_AUCTION_HOSTING_IN_SECONDS,\n): DeserializedFarm => {\n  const {\n    lpAddress,\n    lpSymbol,\n    pid,\n    vaultPid,\n    dual,\n    multiplier,\n    isCommunity,\n    auctionHostingStartSeconds,\n    quoteTokenPriceBusd,\n    tokenPriceBusd,\n    boosted,\n    infoStableSwapAddress,\n    stableSwapAddress,\n    stableLpFee,\n    stableLpFeeRateOfTotalFee,\n  } = farm\n\n  const auctionHostingStartDate = !isUndefinedOrNull(auctionHostingStartSeconds)\n    ? new Date((auctionHostingStartSeconds as number) * 1000)\n    : null\n  const auctionHostingEndDate = auctionHostingStartDate\n    ? addSeconds(auctionHostingStartDate, auctionHostingInSeconds)\n    : null\n  const now = Date.now()\n  const isFarmCommunity =\n    isCommunity ||\n    !!(\n      auctionHostingStartDate &&\n      auctionHostingEndDate &&\n      auctionHostingStartDate.getTime() < now &&\n      auctionHostingEndDate.getTime() > now\n    )\n\n  return {\n    lpAddress,\n    lpSymbol,\n    pid,\n    vaultPid,\n    dual,\n    multiplier,\n    isCommunity: isFarmCommunity,\n    auctionHostingEndDate: auctionHostingEndDate?.toJSON(),\n    quoteTokenPriceBusd,\n    tokenPriceBusd,\n    token: deserializeToken(farm.token),\n    quoteToken: deserializeToken(farm.quoteToken),\n    userData: deserializeFarmUserData(farm),\n    tokenAmountTotal: farm.tokenAmountTotal ? new BigNumber(farm.tokenAmountTotal) : BIG_ZERO,\n    quoteTokenAmountTotal: farm.quoteTokenAmountTotal ? new BigNumber(farm.quoteTokenAmountTotal) : BIG_ZERO,\n    lpTotalInQuoteToken: farm.lpTotalInQuoteToken ? new BigNumber(farm.lpTotalInQuoteToken) : BIG_ZERO,\n    lpTotalSupply: farm.lpTotalSupply ? new BigNumber(farm.lpTotalSupply) : BIG_ZERO,\n    lpTokenPrice: farm.lpTokenPrice ? new BigNumber(farm.lpTokenPrice) : BIG_ZERO,\n    tokenPriceVsQuote: farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO,\n    poolWeight: farm.poolWeight ? new BigNumber(farm.poolWeight) : BIG_ZERO,\n    boosted,\n    isStable: Boolean(infoStableSwapAddress),\n    stableSwapAddress,\n    stableLpFee,\n    stableLpFeeRateOfTotalFee,\n    lpTokenStakedAmount: farm.lpTokenStakedAmount ? new BigNumber(farm.lpTokenStakedAmount) : BIG_ZERO,\n  }\n}\n","import BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport { getBalanceAmount } from '@pancakeswap/utils/formatBalance'\nimport { createSelector } from '@reduxjs/toolkit'\nimport { deserializeFarm, deserializeFarmUserData } from '@pancakeswap/farms'\nimport { State } from '../types'\n\nconst selectCakeFarm = (state: State) => state.farms.data.find((f) => f.pid === 2)\nconst selectFarmByKey = (key: string, value: string | number) => (state: State) =>\n  state.farms.data.find((f) => f[key] === value)\n\nexport const makeFarmFromPidSelector = (pid: number) =>\n  createSelector([selectFarmByKey('pid', pid)], (farm) => deserializeFarm(farm))\n\nexport const makeBusdPriceFromPidSelector = (pid: number) =>\n  createSelector([selectFarmByKey('pid', pid)], (farm) => {\n    return farm && new BigNumber(farm.tokenPriceBusd)\n  })\n\nexport const makeUserFarmFromPidSelector = (pid: number) =>\n  createSelector([selectFarmByKey('pid', pid)], (farm) => {\n    const { allowance, tokenBalance, stakedBalance, earnings, proxy } = deserializeFarmUserData(farm)\n    return {\n      allowance,\n      tokenBalance,\n      stakedBalance,\n      earnings,\n      proxy,\n    }\n  })\n\nexport const priceCakeFromPidSelector = createSelector([selectCakeFarm], (cakeBnbFarm) => {\n  const cakePriceBusdAsString = cakeBnbFarm?.tokenPriceBusd\n  return new BigNumber(cakePriceBusdAsString)\n})\n\nexport const farmFromLpSymbolSelector = (lpSymbol: string) =>\n  createSelector([selectFarmByKey('lpSymbol', lpSymbol)], (farm) => deserializeFarm(farm))\n\nexport const makeLpTokenPriceFromLpSymbolSelector = (lpSymbol: string) =>\n  createSelector([selectFarmByKey('lpSymbol', lpSymbol)], (farm) => {\n    let lpTokenPrice = BIG_ZERO\n    if (farm) {\n      const lpTotalInQuoteToken = farm.lpTotalInQuoteToken ? new BigNumber(farm.lpTotalInQuoteToken) : BIG_ZERO\n      const lpTotalSupply = farm.lpTotalSupply ? new BigNumber(farm.lpTotalSupply) : BIG_ZERO\n\n      if (lpTotalSupply.gt(0) && lpTotalInQuoteToken.gt(0)) {\n        const farmTokenPriceInUsd = new BigNumber(farm.tokenPriceBusd)\n        const tokenAmountTotal = farm.tokenAmountTotal ? new BigNumber(farm.tokenAmountTotal) : BIG_ZERO\n        // Total value of base token in LP\n        const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(tokenAmountTotal)\n        // Double it to get overall value in LP\n        const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n        // Divide total value of all tokens, by the number of LP tokens\n        const totalLpTokens = getBalanceAmount(lpTotalSupply)\n        lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n      }\n    }\n\n    return lpTokenPrice\n  })\n\nexport const farmSelector = (chainId: number) =>\n  createSelector(\n    (state: State) => state.farms,\n    (farms) => {\n      const deserializedFarmsData = farms.data.map(deserializeFarm).filter((farm) => farm.token.chainId === chainId)\n      const { loadArchivedFarmsData, userDataLoaded, poolLength, regularCakePerBlock } = farms\n\n      return {\n        loadArchivedFarmsData,\n        userDataLoaded,\n        data: deserializedFarmsData,\n        poolLength,\n        regularCakePerBlock,\n      }\n    },\n  )\n","import BigNumber from 'bignumber.js'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { SLOW_INTERVAL } from 'config/constants'\nimport { useCakeBusdPrice } from 'hooks/useBUSDPrice'\nimport { useEffect, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport useSWRImmutable from 'swr/immutable'\nimport { BIG_ZERO } from '@pancakeswap/utils/bigNumber'\nimport { useBCakeProxyContractAddress } from 'views/Farms/hooks/useBCakeProxyContractAddress'\nimport { getMasterchefContract } from 'utils/contractHelpers'\nimport { useFastRefreshEffect } from 'hooks/useRefreshEffect'\nimport { featureFarmApiAtom, useFeatureFlag } from 'hooks/useFeatureFlag'\nimport { getFarmConfig } from '@pancakeswap/farms/constants'\nimport { DeserializedFarm, DeserializedFarmsState, DeserializedFarmUserData } from '@pancakeswap/farms'\nimport { useActiveChainId } from 'hooks/useActiveChainId'\nimport { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync, fetchInitialFarmsData } from '.'\nimport { State } from '../types'\nimport {\n  farmFromLpSymbolSelector,\n  farmSelector,\n  makeBusdPriceFromPidSelector,\n  makeFarmFromPidSelector,\n  makeLpTokenPriceFromLpSymbolSelector,\n  makeUserFarmFromPidSelector,\n} from './selectors'\n\nexport function useFarmsLength() {\n  const { chainId } = useActiveChainId()\n  return useSWRImmutable(chainId ? ['farmsLength', chainId] : null, async () => {\n    const mc = getMasterchefContract(undefined, chainId)\n    return (await mc.poolLength()).toNumber()\n  })\n}\n\nexport const usePollFarmsWithUserData = () => {\n  const dispatch = useAppDispatch()\n  const { account, chainId } = useActiveWeb3React()\n  const {\n    proxyAddress,\n    proxyCreated,\n    isLoading: isProxyContractLoading,\n  } = useBCakeProxyContractAddress(account, chainId)\n  const farmFlag = useFeatureFlag(featureFarmApiAtom)\n\n  useSWRImmutable(\n    chainId ? ['publicFarmData', chainId] : null,\n    async () => {\n      const farmsConfig = await getFarmConfig(chainId)\n      const pids = farmsConfig.map((farmToFetch) => farmToFetch.pid)\n      dispatch(fetchFarmsPublicDataAsync({ pids, chainId, flag: farmFlag }))\n    },\n    {\n      refreshInterval: farmFlag === 'api' ? 50 * 1000 : SLOW_INTERVAL,\n    },\n  )\n\n  const name = proxyCreated\n    ? ['farmsWithUserData', account, proxyAddress, chainId]\n    : ['farmsWithUserData', account, chainId]\n\n  useSWRImmutable(\n    account && chainId && !isProxyContractLoading ? name : null,\n    async () => {\n      const farmsConfig = await getFarmConfig(chainId)\n      const pids = farmsConfig.map((farmToFetch) => farmToFetch.pid)\n      const params = proxyCreated ? { account, pids, proxyAddress, chainId } : { account, pids, chainId }\n\n      dispatch(fetchFarmUserDataAsync(params))\n    },\n    {\n      refreshInterval: SLOW_INTERVAL,\n    },\n  )\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 2 = CAKE-BNB LP\n * 3 = BUSD-BNB LP\n */\nconst coreFarmPIDs = {\n  56: [2, 3],\n  97: [4, 10],\n  5: [13, 11],\n  1: [124, 125],\n}\n\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { chainId } = useActiveChainId()\n  const farmFlag = useFeatureFlag(featureFarmApiAtom)\n\n  useEffect(() => {\n    if (chainId) {\n      dispatch(fetchInitialFarmsData({ chainId }))\n    }\n  }, [chainId, dispatch])\n\n  useFastRefreshEffect(() => {\n    if (chainId && farmFlag !== 'api') {\n      dispatch(fetchFarmsPublicDataAsync({ pids: coreFarmPIDs[chainId], chainId, flag: farmFlag }))\n    }\n  }, [dispatch, chainId, farmFlag])\n}\n\nexport const useFarms = (): DeserializedFarmsState => {\n  const { chainId } = useActiveChainId()\n  return useSelector(useMemo(() => farmSelector(chainId), [chainId]))\n}\n\nexport const useFarmsPoolLength = (): number => {\n  return useSelector((state: State) => state.farms.poolLength)\n}\n\nexport const useFarmFromPid = (pid: number): DeserializedFarm => {\n  const farmFromPid = useMemo(() => makeFarmFromPidSelector(pid), [pid])\n  return useSelector(farmFromPid)\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): DeserializedFarm => {\n  const farmFromLpSymbol = useMemo(() => farmFromLpSymbolSelector(lpSymbol), [lpSymbol])\n  return useSelector(farmFromLpSymbol)\n}\n\nexport const useFarmUser = (pid): DeserializedFarmUserData => {\n  const farmFromPidUser = useMemo(() => makeUserFarmFromPidSelector(pid), [pid])\n  return useSelector(farmFromPidUser)\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const busdPriceFromPid = useMemo(() => makeBusdPriceFromPidSelector(pid), [pid])\n  return useSelector(busdPriceFromPid)\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const lpTokenPriceFromLpSymbol = useMemo(() => makeLpTokenPriceFromLpSymbolSelector(symbol), [symbol])\n  return useSelector(lpTokenPriceFromLpSymbol)\n}\n\n/**\n * @deprecated use the BUSD hook in /hooks\n */\nexport const usePriceCakeBusd = ({ forceMainnet } = { forceMainnet: false }): BigNumber => {\n  const price = useCakeBusdPrice({ forceMainnet })\n  return useMemo(() => (price ? new BigNumber(price.toSignificant(6)) : BIG_ZERO), [price])\n}\n","import useSWRImmutable from 'swr/immutable'\nimport { NO_PROXY_CONTRACT } from 'config/constants'\nimport { useBCakeFarmBoosterContract } from 'hooks/useContract'\nimport { FetchStatus } from 'config/constants/types'\nimport { bCakeSupportedChainId } from '@pancakeswap/farms/src/index'\n\nexport const useBCakeProxyContractAddress = (account?: string, chainId?: number) => {\n  const bCakeFarmBoosterContract = useBCakeFarmBoosterContract()\n  const isSupportedChain = bCakeSupportedChainId.includes(chainId)\n  const { data, status, mutate } = useSWRImmutable(\n    account && isSupportedChain && ['bProxyAddress', account, chainId],\n    async () => bCakeFarmBoosterContract.proxyContract(account),\n  )\n  const isLoading = isSupportedChain ? status !== FetchStatus.Fetched : false\n\n  return {\n    proxyAddress: data,\n    isLoading,\n    proxyCreated: data && data !== NO_PROXY_CONTRACT,\n    refreshProxyAddress: mutate,\n  }\n}\n","import { Text, TextProps } from \"@pancakeswap/uikit\";\nimport { useMemo } from \"react\";\nimport CountUp from \"react-countup\";\n\ninterface BalanceProps extends TextProps {\n  value: number;\n  decimals?: number;\n  unit?: string;\n  isDisabled?: boolean;\n  prefix?: string;\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void;\n}\n\nconst Balance: React.FC<React.PropsWithChildren<BalanceProps>> = ({\n  value,\n  color = \"text\",\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const prefixProp = useMemo(() => (prefix ? { prefix } : {}), [prefix]);\n  const suffixProp = useMemo(() => (unit ? { suffix: unit } : {}), [unit]);\n\n  return (\n    <CountUp\n      start={0}\n      preserveValue\n      delay={0}\n      end={value}\n      {...prefixProp}\n      {...suffixProp}\n      decimals={decimals}\n      duration={1}\n      separator=\",\"\n    >\n      {({ countUpRef }) => (\n        <Text color={isDisabled ? \"textDisabled\" : color} onClick={onClick} {...props}>\n          <span ref={countUpRef} />\n        </Text>\n      )}\n    </CountUp>\n  );\n};\n\nexport default Balance;\n","import styled, { css, DefaultTheme } from \"styled-components\";\nimport { space } from \"styled-system\";\nimport { promotedGradient } from \"../../util/animationToolkit\";\nimport { Box } from \"../Box\";\nimport { CardProps } from \"./types\";\n\ninterface StyledCardProps extends CardProps {\n  theme: DefaultTheme;\n}\n\n/**\n * Priority: Warning --> Success --> Active\n */\nconst getBorderColor = ({ isActive, isSuccess, isWarning, borderBackground, theme }: StyledCardProps) => {\n  if (borderBackground) {\n    return borderBackground;\n  }\n  if (isWarning) {\n    return theme.colors.warning;\n  }\n\n  if (isSuccess) {\n    return theme.colors.success;\n  }\n\n  if (isActive) {\n    return `linear-gradient(180deg, ${theme.colors.primaryBright}, ${theme.colors.secondary})`;\n  }\n\n  return theme.colors.cardBorder;\n};\n\nexport const StyledCard = styled.div<StyledCardProps>`\n  background: ${getBorderColor};\n  border-radius: ${({ theme }) => theme.radii.card};\n  color: ${({ theme, isDisabled }) => theme.colors[isDisabled ? \"textDisabled\" : \"text\"]};\n  overflow: hidden;\n  position: relative;\n\n  ${({ isActive }) =>\n    isActive &&\n    css`\n      animation: ${promotedGradient} 3s ease infinite;\n      background-size: 400% 400%;\n    `}\n\n  padding: 1px 1px 3px 1px;\n\n  ${space}\n`;\n\nexport const StyledCardInner = styled(Box)<{ background?: string; hasCustomBorder: boolean }>`\n  width: 100%;\n  height: 100%;\n  overflow: ${({ hasCustomBorder }) => (hasCustomBorder ? \"initial\" : \"inherit\")};\n  background: ${({ theme, background }) => background ?? theme.card.background};\n  border-radius: ${({ theme }) => theme.radii.card};\n`;\n\nStyledCard.defaultProps = {\n  isActive: false,\n  isSuccess: false,\n  isWarning: false,\n  isDisabled: false,\n};\n","import React from \"react\";\nimport { StyledCard, StyledCardInner } from \"./StyledCard\";\nimport { CardProps } from \"./types\";\n\nconst Card: React.FC<React.PropsWithChildren<CardProps>> = ({ ribbon, children, background, ...props }) => {\n  return (\n    <StyledCard {...props}>\n      <StyledCardInner background={background} hasCustomBorder={!!props.borderBackground}>\n        {ribbon}\n        {children}\n      </StyledCardInner>\n    </StyledCard>\n  );\n};\nexport default Card;\n","import styled from \"styled-components\";\nimport { space, SpaceProps } from \"styled-system\";\n\nexport type CardBodyProps = SpaceProps;\n\nconst CardBody = styled.div<CardBodyProps>`\n  ${space}\n`;\n\nCardBody.defaultProps = {\n  p: \"24px\",\n};\n\nexport default CardBody;\n","import { Box, BoxProps } from \"../Box\";\n\nconst Container: React.FC<React.PropsWithChildren<BoxProps>> = ({ children, ...props }) => (\n  <Box px={[\"16px\", \"24px\"]} mx=\"auto\" maxWidth=\"1200px\" {...props}>\n    {children}\n  </Box>\n);\n\nexport default Container;\n","import React from \"react\";\nimport Svg from \"../Svg\";\nimport { SvgProps } from \"../types\";\n\nconst Icon: React.FC<React.PropsWithChildren<SvgProps>> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 25\" {...props}>\n      <path d=\"M16 17.01V11C16 10.45 15.55 10 15 10C14.45 10 14 10.45 14 11V17.01H12.21C11.76 17.01 11.54 17.55 11.86 17.86L14.65 20.64C14.85 20.83 15.16 20.83 15.36 20.64L18.15 17.86C18.47 17.55 18.24 17.01 17.8 17.01H16ZM8.65003 3.35002L5.86003 6.14002C5.54003 6.45002 5.76003 6.99002 6.21003 6.99002H8.00003V13C8.00003 13.55 8.45003 14 9.00003 14C9.55003 14 10 13.55 10 13V6.99002H11.79C12.24 6.99002 12.46 6.45002 12.14 6.14002L9.35003 3.35002C9.16003 3.16002 8.84003 3.16002 8.65003 3.35002Z\" />\n    </Svg>\n  );\n};\n\nexport default Icon;\n"],"names":["storage","_object_spread_props","Z","_object_spread","createJSONStorage","sessionStorage","delayInit","featureFarmApiAtom","atomWithStorageWithErrorCatch","useFeatureFlag","featureAtom","useAtomValue","onMount","set","params","URL","window","location","href","searchParams","get","EMPTY_ARRAY","useFastRefreshEffect","effect","deps","chainId","useActiveChainId","_useSWR_data","useSWR","FAST_INTERVAL","data","useEffect","bind","concat","_swc_helpers_src_to_consumable_array_mjs__WEBPACK_IMPORTED_MODULE_4__","useSlowRefreshEffect","SLOW_INTERVAL","deserializeFarmUserData","farm","allowance","userData","BigNumber","BIG_ZERO","tokenBalance","stakedBalance","earnings","proxy","deserializeFarm","auctionHostingInSeconds","FARM_AUCTION_HOSTING_IN_SECONDS","lpAddress","lpSymbol","pid","vaultPid","dual","multiplier","isCommunity","auctionHostingStartSeconds","quoteTokenPriceBusd","tokenPriceBusd","boosted","infoStableSwapAddress","stableSwapAddress","stableLpFee","stableLpFeeRateOfTotalFee","auctionHostingStartDate","isUndefinedOrNull","Date","auctionHostingEndDate","addSeconds","now","getTime","toJSON","token","deserializeToken","quoteToken","tokenAmountTotal","quoteTokenAmountTotal","lpTotalInQuoteToken","lpTotalSupply","lpTokenPrice","tokenPriceVsQuote","poolWeight","isStable","Boolean","lpTokenStakedAmount","selectFarmByKey","key","value","state","farms","find","f","createSelector","cakeBnbFarm","cakePriceBusdAsString","usePollFarmsWithUserData","dispatch","useAppDispatch","useActiveWeb3React","account","useBCakeProxyContractAddress","proxyAddress","proxyCreated","isLoading","farmFlag","useSWRImmutable","src_async_to_generator","pids","getFarmConfig","farmsConfig","sent","map","farmToFetch","fetchFarmsPublicDataAsync","flag","refreshInterval","isProxyContractLoading","fetchFarmUserDataAsync","useFarms","useSelector","useMemo","deserializedFarmsData","filter","loadArchivedFarmsData","userDataLoaded","poolLength","regularCakePerBlock","useFarmFromPid","farmFromPid","useFarmUser","farmFromPidUser","useLpTokenPrice","symbol","lpTokenPriceFromLpSymbol","gt","farmTokenPriceInUsd","overallValueOfAllTokensInFarm","valueOfBaseTokenInFarm","times","totalLpTokens","getBalanceAmount","div","usePriceCakeBusd","forceMainnet","price","useCakeBusdPrice","toSignificant","bCakeFarmBoosterContract","useBCakeFarmBoosterContract","isSupportedChain","bCakeSupportedChainId","_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_5__","proxyContract","status","mutate","FetchStatus","NO_PROXY_CONTRACT","refreshProxyAddress","__webpack_exports__","_param","color","_param_color","_param_decimals","decimals","_param_isDisabled","isDisabled","unit","prefix","onClick","props","prefixProp","suffixProp","suffix","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","CountUp","start","preserveValue","delay","end","duration","separator","param","countUpRef","Text","span","ref","StyledCard","styled","isActive","isSuccess","isWarning","borderBackground","theme","colors","warning","success","primaryBright","secondary","cardBorder","radii","card","css","promotedGradient","space","StyledCardInner","Box","hasCustomBorder","background","defaultProps","Card_Card","ribbon","children","jsx_runtime","jsxs","CardBody","p","px","mx","maxWidth","Svg","viewBox","path","d"],"sourceRoot":""}